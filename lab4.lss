
lab4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002e  00800100  00000e2c  00000ec0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e2c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  0080012e  0080012e  00000eee  2**0
                  ALLOC
  3 .stab         000023f4  00000000  00000000  00000ef0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000011e0  00000000  00000000  000032e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  000044c4  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000044d8  2**2
                  CONTENTS, READONLY
  7 .debug_info   000005f4  00000000  00000000  00004518  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000005a2  00000000  00000000  00004b0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000001a  00000000  00000000  000050ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000208  00000000  00000000  000050c8  2**0
                  CONTENTS, READONLY, DEBUGGING
Contents of section .data:
 800100 00000002 00000000 3a010000 00004865  ........:.....He
 800110 72652069 20616d20 73747564 79696e67  re i am studying
 800120 20494f54 2070726f 6772616d 0000       IOT program..  
Contents of section .text:
 0000 0c941b01 0c943801 0c943801 0c943801  ......8...8...8.
 0010 0c943801 0c943801 0c943801 0c943801  ..8...8...8...8.
 0020 0c943801 0c943801 0c943801 0c943801  ..8...8...8...8.
 0030 0c943801 0c943801 0c943801 0c943801  ..8...8...8...8.
 0040 0c943801 0c943801 0c943801 0c943801  ..8...8...8...8.
 0050 0c943801 0c943801 0c943801 0c943801  ..8...8...8...8.
 0060 0c943801 0c943801 aa019001 90019001  ..8...8.........
 0070 90019001 90019001 b3019001 90019001  ................
 0080 90019001 90019001 bc019001 90019001  ................
 0090 90019001 90019001 c5019001 90019001  ................
 00a0 90019001 90019001 ce019001 90019001  ................
 00b0 90019001 90019001 d7019001 90019001  ................
 00c0 90019001 90019001 e0019001 90019001  ................
 00d0 90019001 90019001 e9019001 90019001  ................
 00e0 90019001 90019001 f2019001 90019001  ................
 00f0 90019001 90019001 fb019001 90019001  ................
 0100 90019001 90019001 a1012558 20000a20  ..........%X .. 
 0110 4d792048 45582020 73747269 6e672020  My HEX  string  
 0120 0a002563 2020000a 204d7920 73747269  ..%c  .. My stri
 0130 6e672069 6e202041 53434949 20636861  ng in  ASCII cha
 0140 72200a00 4e6f206f 66207061 6765733d  r ..No of pages=
 0150 2025640a 00657863 65737320 63686172   %d..excess char
 0160 20286f75 74206f66 20626f75 6e647279   (out of boundry
 0170 20636861 72732920 3d202564 0a007369   chars) = %d..si
 0180 7a65206f 66206e65 775f6172 7261793d  ze of new_array=
 0190 2025640a 004e2f41 20253032 580a004d   %d..N/A %02X..M
 01a0 52204441 54412b52 2c204e41 4b0a004d  R DATA+R, NAK..M
 01b0 52204441 54412b52 2c204143 4b0a004d  R DATA+R, ACK..M
 01c0 5220534c 412b522c 204e414b 0a004d52  R SLA+R, NAK..MR
 01d0 20534c41 2b522c20 41434b0a 004d5420   SLA+R, ACK..MT 
 01e0 44415441 2b572c20 4e414b0a 004d5420  DATA+W, NAK..MT 
 01f0 44415441 2b572c20 41434b0a 004d5420  DATA+W, ACK..MT 
 0200 534c412b 572c204e 414b0a00 4d542053  SLA+W, NAK..MT S
 0210 4c412b57 2c204143 4b0a004e 4f415242  LA+W, ACK..NOARB
 0220 2f4e414b 0a005245 53544152 540a0053  /NAK..RESTART..S
 0230 54415254 0a001124 1fbecfef d8e0debf  TART...$........
 0240 cdbf11e0 a0e0b1e0 ece2fee0 02c00590  ................
 0250 0d92ae32 b107d9f7 21e0aee2 b1e001c0  ...2....!.......
 0260 1d92a533 b207e1f7 0e947d03 0c941407  ...3......}.....
 0270 0c940000 cf93c82f 8a3051f0 8091c000  ......./.0Q.....
 0280 85fffccf c093c600 80e090e0 cf910895  ................
 0290 60e070e0 8de00e94 3a01f0cf 1092c500  `.p.....:.......
 02a0 89e18093 c4001092 c00088e1 8093c100  ................
 02b0 86e08093 c20080e0 91e09093 32018093  ............2...
 02c0 31010895 8091c000 87fffccf 8091c600  1...............
 02d0 08950895 ece7f0e0 80e68083 80818083  ................
 02e0 8be88093 7a000895 80932e01 08958091  ....z...........
 02f0 2e010895 0895e9eb f0e08081 80838081  ................
 0300 81608083 82e18093 b80084e0 8093bc00  .`..............
 0310 0895482f 50e0fa01 3897e135 f10568f0  ..H/P...8..5..h.
 0320 1f928f93 85e991e0 9f938f93 0e942604  ..............&.
 0330 0f900f90 0f900f90 0895ec5c ff4f0c94  ...........\.O..
 0340 20048fe9 91e09f93 8f930e94 26040f90   ...........&...
 0350 0f900895 8fe292e0 9f938f93 0e942604  ..............&.
 0360 0f900f90 089586e2 92e09f93 8f930e94  ................
 0370 26040f90 0f900895 8ce092e0 9f938f93  &...............
 0380 0e942604 0f900f90 08958def 91e09f93  ..&.............
 0390 8f930e94 26040f90 0f900895 8dee91e0  ....&...........
 03a0 9f938f93 0e942604 0f900f90 08958ded  ......&.........
 03b0 91e09f93 8f930e94 26040f90 0f900895  ........&.......
 03c0 8be192e0 9f938f93 0e942604 0f900f90  ..........&.....
 03d0 08958eec 91e09f93 8f930e94 26040f90  ............&...
 03e0 0f900895 8feb91e0 9f938f93 0e942604  ..............&.
 03f0 0f900f90 08958fea 91e09f93 8f930e94  ................
 0400 26040f90 0f900895 84ea8093 bc008091  &...............
 0410 bc0087ff fccf0895 84e98093 bc008091  ................
 0420 bc0084fd fccf0895 8091b900 887f0895  ................
 0430 8e7f6170 682b6093 bb0084e8 8093bc00  ..aph+`.........
 0440 8091bc00 87fffccf 08958093 bb0084e8  ................
 0450 8093bc00 8091bc00 87fffccf 089584ec  ................
 0460 8093bc00 8091bc00 87fffccf 8091bb00  ................
 0470 089584e8 8093bc00 8091bc00 87fffccf  ................
 0480 8091bb00 089534ea 20ea94e8 3093bc00  ......4. ...0...
 0490 8091bc00 87fffccf 2093bb00 9093bc00  ........ .......
 04a0 8091bc00 87fffccf 8091b900 887f8831  ...............1
 04b0 69f70895 94ea9093 bc009091 bc0097ff  i...............
 04c0 fccf90ea 9093bb00 94e89093 bc009091  ................
 04d0 bc0097ff fccf8093 bb0084e8 8093bc00  ................
 04e0 8091bc00 87fffccf 84ea8093 bc008091  ................
 04f0 bc0087ff fccf81ea 8093bb00 84e88093  ................
 0500 bc008091 bc0087ff fccf84e8 8093bc00  ................
 0510 8091bc00 87fffccf 8091bb00 94e99093  ................
 0520 bc009091 bc0094fd fccf0895 94ea9093  ................
 0530 bc009091 bc0097ff fccf90ea 9093bb00  ................
 0540 94e89093 bc009091 bc0097ff fccf8093  ................
 0550 bb0084e8 8093bc00 8091bc00 87fffccf  ................
 0560 6093bb00 84e88093 bc008091 bc0087ff  `...............
 0570 fccf84e9 8093bc00 8091bc00 84fdfccf  ................
 0580 34ea20ea 94e83093 bc008091 bc0087ff  4. ...0.........
 0590 fccf2093 bb009093 bc008091 bc0087ff  .. .............
 05a0 fccf8091 b900887f 883169f7 0895fb01  .........1i.....
 05b0 208194ea 9093bc00 9091bc00 97fffccf   ...............
 05c0 90ea9093 bb0094e8 9093bc00 9091bc00  ................
 05d0 97fffccf 8093bb00 84e88093 bc008091  ................
 05e0 bc0087ff fccffb01 3196675f 7f4f94e8  ........1.g_.O..
 05f0 2093bb00 9093bc00 8091bc00 87fffccf   ...............
 0600 2191e617 f707a1f7 84e98093 bc008091  !...............
 0610 bc0084fd fccf34ea 20ea94e8 3093bc00  ......4. ...0...
 0620 8091bc00 87fffccf 2093bb00 9093bc00  ........ .......
 0630 8091bc00 87fffccf 8091b900 887f8831  ...............1
 0640 69f70895 24ea2093 bc002091 bc0027ff  i...$. ... ...'.
 0650 fccf20ea 2093bb00 24e82093 bc002091  .. . ...$. ... .
 0660 bc0027ff fccf6093 bb0024e8 2093bc00  ..'...`...$. ...
 0670 2091bc00 27fffccf 24ea2093 bc002091   ...'...$. ... .
 0680 bc0027ff fccf21ea 2093bb00 24e82093  ..'...!. ...$. .
 0690 bc002091 bc0027ff fccf50e0 41155105  .. ...'...P.A.Q.
 06a0 d1f0ba01 61507109 fc0120e0 30e094ec  ....aPq... .0...
 06b0 a4e89093 bc008091 bc0087ff fccf8091  ................
 06c0 bb002617 370779f0 80832f5f 3f4f3196  ..&.7.y.../_?O1.
 06d0 24173507 71f784e9 8093bc00 8091bc00  $.5.q...........
 06e0 84fdfccf 0895a093 bc008091 bc0087ff  ................
 06f0 fccf8091 bb008083 e8cfcf93 df93cdb7  ................
 0700 deb7ee97 0fb6f894 debf0fbe cdbf0e94  ................
 0710 7b010e94 4e017894 8fe1eee0 f1e0de01  {...N.x.........
 0720 90960190 0d928a95 e1f71f92 8fe18f93  ................
 0730 8ee791e0 9f938f93 0e942604 1f9287e0  ..........&.....
 0740 8f9385e5 91e09f93 8f930e94 26041f92  ............&...
 0750 83e08f93 84e491e0 9f938f93 0e942604  ..............&.
 0760 be01605e 7f4f80e1 0e94d702 be01685d  ..`^.O........h]
 0770 7f4f88e1 0e94d702 be01605d 7f4f80e2  .O........`].O..
 0780 0e94d702 7e0188e3 e80ef11c 0fb6f894  ....~...........
 0790 debf0fbe cdbf08e2 10e0f701 61917f01  ............a...
 07a0 70e0c801 0e949602 0f5f1f4f 0f321105  p........_.O.2..
 07b0 a1f74fe1 60e1ce01 01960e94 220387e2  ..O.`......."...
 07c0 91e09f93 8f930e94 26048e01 0f5f1f4f  ........&...._.O
 07d0 6e01ffe1 cf0ed11c 0f900f90 780192e2  n...........x...
 07e0 a92e91e0 b92ef701 81917f01 1f928f93  ................
 07f0 bf92af92 0e942604 0f900f90 0f900f90  ......&.........
 0800 ce14df04 81f78ee0 91e09f93 8f930e94  ................
 0810 26040f90 0f908ae0 e82e81e0 f82ef801  &...............
 0820 81918f01 1f928f93 ff92ef92 0e942604  ..............&.
 0830 0f900f90 0f900f90 c016d106 81f7ffcf  ................
 0840 ee0fff1f 0590f491 e02d0994 a0e0b0e0  .........-......
 0850 ece2f4e0 0c94eb06 ae01495f 5f4fda01  ..........I__O..
 0860 6d917d91 ad010fe2 11e0f801 82819381  m.}.............
 0870 dc011396 2c911397 28601396 2c930e94  ....,...(`..,...
 0880 4c04d801 1296ed91 fc911397 2381277f  L...........#.'.
 0890 2383e4e0 0c940707 abe0b0e0 e2e5f4e0  #...............
 08a0 0c94dd06 6c017b01 8a01fc01 17821682  ....l.{.........
 08b0 838181ff ccc1ce01 01963c01 f6019381  ..........<.....
 08c0 f70193fd 859193ff 81917f01 882309f4  .............#..
 08d0 bac18532 39f493fd 859193ff 81917f01  ...29...........
 08e0 853229f4 b60190e0 0e944306 e7cf912c  .2).......C....,
 08f0 212c312c ffe1f315 d8f08b32 79f038f4  !,1,.......2y.8.
 0900 803279f0 8332a1f4 232d2061 1dc08d32  .2y..2..#- a...2
 0910 61f08033 69f4232d 216016c0 832d8260  a..3i.#-!`...-.`
 0920 382ee32d e4603e2e 2ac0f32d f8601dc0  8..-.`>.*..-.`..
 0930 37fc2dc0 20ed280f 2a3040f0 8e32b9f4  7.-. .(.*0@..2..
 0940 36fc81c1 232d2064 322e19c0 36fe06c0  6...#- d2...6...
 0950 8ae0989e 200d1124 922e11c0 eae02e9e  .... ..$........
 0960 200d1124 222ef32d f0623f2e 08c08c36   ..$"..-.b?....6
 0970 21f4832d 8068382e 02c08836 41f4f701  !..-.h8....6A...
 0980 93fd8591 93ff8191 7f018111 b3cf982f  .............../
 0990 9f7d9554 933028f4 0c5f1f4f 9fe39983  .}.T.0(.._.O....
 09a0 0dc08336 31f08337 71f08335 09f059c0  ...61..7q..5..Y.
 09b0 21c0f801 80818983 0e5f1f4f 88248394  !........_.O.$..
 09c0 912c5301 13c02801 f2e04f0e 511cf801  .,S...(...O.Q...
 09d0 a080b180 36fe03c0 692d70e0 02c06fef  ....6...i-p...o.
 09e0 7fefc501 0e943806 4c018201 f32dff77  ......8.L....-.w
 09f0 3f2e16c0 280122e0 420e511c f801a080  ?...(.".B.Q.....
 0a00 b18036fe 03c0692d 70e002c0 6fef7fef  ..6...i-p...o...
 0a10 c5010e94 2d064c01 f32df068 3f2e8201  ....-.L..-.h?...
 0a20 33fc1bc0 822d90e0 88169906 b0f4b601  3....-..........
 0a30 80e290e0 0e944306 2a94f4cf f50137fc  ......C.*.....7.
 0a40 859137fe 81915f01 b60190e0 0e944306  ..7..._.......C.
 0a50 21102a94 21e0821a 91088114 910471f7  !.*.!.........q.
 0a60 e8c08436 11f08936 41f5f801 37fe07c0  ...6...6A...7...
 0a70 60817181 82819381 0c5f1f4f 08c06081  `.q......_.O..`.
 0a80 7181072e 000c880b 990b0e5f 1f4ff32d  q.........._.O.-
 0a90 ff763f2e 97ff09c0 90958095 70956195  .v?.........p.a.
 0aa0 7f4f8f4f 9f4ff068 3f2e2ae0 30e0a301  .O.O.O.h?.*.0...
 0ab0 0e947f06 882e8618 45c08537 31f4232d  ........E..71.#-
 0ac0 2f7eb22e 2ae030e0 25c0932d 997fb92e  /~..*.0.%..-....
 0ad0 8f36c1f0 18f48835 79f0b5c0 803719f0  .6.....5y....7..
 0ae0 883721f0 b0c0e92f e061be2e b4fe0dc0  .7!..../.a......
 0af0 fb2df460 bf2e09c0 34fe0ac0 292f2660  .-.`....4...)/&`
 0b00 b22e06c0 28e030e0 05c020e1 30e002c0  ....(.0... .0...
 0b10 20e132e0 f801b7fe 07c06081 71818281   .2.......`.q...
 0b20 93810c5f 1f4f06c0 60817181 80e090e0  ..._.O..`.q.....
 0b30 0e5f1f4f a3010e94 7f06882e 8618fb2d  ._.O...........-
 0b40 ff773f2e 36fe0dc0 232d2e7f a22e8914  .w?.6...#-......
 0b50 58f434fe 0bc032fc 09c0832d 8e7ea82e  X.4...2....-.~..
 0b60 05c0b82c a32c03c0 b82c01c0 b92ca4fe  ...,.,...,...,..
 0b70 0fc0fe01 e80df11d 80818033 21f49a2d  ...........3!..-
 0b80 997ea92e 09c0a2fe 06c0b394 b39404c0  .~..............
 0b90 8a2d8678 09f0b394 a3fc11c0 a0fe06c0  .-.x............
 0ba0 b21488f4 280c922c 9b180ec0 b21460f4  ....(..,......`.
 0bb0 b60180e2 90e00e94 4306b394 f7cfb214  ........C.......
 0bc0 18f42b18 02c0982c 212ca4fe 10c0b601  ..+....,!,......
 0bd0 80e390e0 0e944306 a2fe17c0 a1fc03c0  ......C.........
 0be0 88e790e0 02c088e5 90e0b601 0cc08a2d  ...............-
 0bf0 867859f0 a1fe02c0 8be201c0 80e2a7fc  .xY.............
 0c00 8de2b601 90e00e94 43068914 38f4b601  ........C...8...
 0c10 80e390e0 0e944306 9a94f7cf 8a94f301  ......C.........
 0c20 e80df11d 8081b601 90e00e94 43068110  ............C...
 0c30 f5cf2220 09f442ce b60180e2 90e00e94  .." ..B.........
 0c40 43062a94 f6cff601 86819781 02c08fef  C.*.............
 0c50 9fef2b96 e2e10c94 f906fc01 05906150  ..+...........aP
 0c60 70400110 d8f78095 90958e0f 9f1f0895  p@..............
 0c70 fc016150 70400190 0110d8f7 80959095  ..aPp@..........
 0c80 8e0f9f1f 08950f93 1f93cf93 df93fb01  ................
 0c90 238121fd 03c08fef 9fef2cc0 22ff16c0  #.!.......,."...
 0ca0 46815781 24813581 42175307 44f4a081  F.W.$.5.B.S.D...
 0cb0 b1819d01 2f5f3f4f 31832083 8c932681  ..../_?O1. ...&.
 0cc0 37812f5f 3f4f3783 268314c0 8b01ec01  7./_?O7.&.......
 0cd0 fb010084 f185e02d 0995892b e1f6d801  .......-...+....
 0ce0 16968d91 9c911797 01961796 9c938e93  ................
 0cf0 1697ce01 df91cf91 1f910f91 0895fa01  ................
 0d00 aa272830 51f12031 81f1e894 6f936e7f  .'(0Q. 1....o.n.
 0d10 6e5f7f4f 8f4f9f4f af4fb1e0 3ed0b4e0  n_.O.O.O.O..>...
 0d20 3cd0670f 781f891f 9a1fa11d 680f791f  <.g.x.......h.y.
 0d30 8a1f911d a11d6a0f 711d811d 911da11d  ......j.q.......
 0d40 20d009f4 68943f91 2ae0269f 11243019   ...h.?.*.&..$0.
 0d50 305d3193 def6cf01 0895462f 4770405d  0]1.......F/Gp@]
 0d60 4193b3e0 0fd0c9f7 f6cf462f 4f70405d  A.........F/Op@]
 0d70 4a3318f0 495d31fd 40524193 02d0a9f7  J3..I]1.@RA.....
 0d80 eacfb4e0 a6959795 87957795 6795ba95  ..........w.g...
 0d90 c9f70097 61057105 08959b01 ac010a2e  ....a.q.........
 0da0 06945795 47953795 2795ba95 c9f7620f  ..W.G.7.'.....b.
 0db0 731f841f 951fa01d 08952f92 3f924f92  s........./.?.O.
 0dc0 5f926f92 7f928f92 9f92af92 bf92cf92  _.o.............
 0dd0 df92ef92 ff920f93 1f93cf93 df93cdb7  ................
 0de0 deb7ca1b db0b0fb6 f894debf 0fbecdbf  ................
 0df0 09942a88 39884888 5f846e84 7d848c84  ..*.9.H._.n.}...
 0e00 9b84aa84 b984c884 df80ee80 fd800c81  ................
 0e10 1b81aa81 b981ce0f d11d0fb6 f894debf  ................
 0e20 0fbecdbf ed010895 f894ffcf           ............    
Contents of section .stab:
 0000 01000000 0000fe02 e0110000 08000000  ................
 0010 64000200 74020000 01000000 64000200  d...t.......d...
 0020 74020000 65000000 3c000000 00000000  t...e...<.......
 0030 74000000 80000000 00000000 94000000  t...............
 0040 80000000 00000000 ae000000 80000000  ................
 0050 00000000 e5000000 80000000 00000000  ................
 0060 0b010000 80000000 00000000 40010000  ............@...
 0070 80000000 00000000 b8010000 80000000  ................
 0080 00000000 0e020000 80000000 00000000  ................
 0090 60020000 80000000 00000000 a5020000  `...............
 00a0 80000000 00000000 cd020000 80000000  ................
 00b0 00000000 fb020000 80000000 00000000  ................
 00c0 25030000 80000000 00000000 4e030000  %...........N...
 00d0 80000000 00000000 68030000 80000000  ........h.......
 00e0 00000000 83030000 80000000 00000000  ................
 00f0 a3030000 80000000 00000000 c4030000  ................
 0100 80000000 00000000 df030000 80000000  ................
 0110 00000000 ff030000 80000000 00000000  ................
 0120 24040000 80000000 00000000 4e040000  $...........N...
 0130 80000000 00000000 72040000 80000000  ........r.......
 0140 00000000 9b040000 80000000 00000000  ................
 0150 c9040000 80000000 00000000 ef040000  ................
 0160 80000000 00000000 0f050000 80000000  ................
 0170 00000000 34050000 80000000 00000000  ....4...........
 0180 5e050000 80000000 00000000 8d050000  ^...............
 0190 80000000 00000000 b6050000 80000000  ................
 01a0 00000000 e4050000 80000000 00000000  ................
 01b0 17060000 80000000 00000000 38060000  ............8...
 01c0 80000000 00000000 53060000 80000000  ........S.......
 01d0 00000000 73060000 80000000 00000000  ....s...........
 01e0 98060000 80000000 00000000 c2060000  ................
 01f0 80000000 00000000 e6060000 80000000  ................
 0200 00000000 0f070000 80000000 00000000  ................
 0210 3d070000 80000000 00000000 63070000  =...........c...
 0220 80000000 00000000 83070000 80000000  ................
 0230 00000000 a8070000 80000000 00000000  ................
 0240 d2070000 80000000 00000000 01080000  ................
 0250 80000000 00000000 2a080000 80000000  ........*.......
 0260 00000000 58080000 80000000 00000000  ....X...........
 0270 8b080000 80000000 00000000 9f080000  ................
 0280 82000000 00000000 c4080000 82000000  ................
 0290 00000000 e2080000 82000000 00000000  ................
 02a0 06090000 82000000 250f0000 26090000  ........%...&...
 02b0 82000000 00000000 4e090000 82000000  ........N.......
 02c0 3bb80000 6c090000 80007d00 00000000  ;...l.....}.....
 02d0 81090000 80007e00 00000000 97090000  ......~.........
 02e0 80007f00 00000000 ac090000 80008000  ................
 02f0 00000000 c2090000 80008100 00000000  ................
 0300 d7090000 80008200 00000000 ed090000  ................
 0310 80008400 00000000 020a0000 80008500  ................
 0320 00000000 180a0000 80009200 00000000  ................
 0330 2e0a0000 80009700 00000000 460a0000  ............F...
 0340 8000a300 00000000 610a0000 8000a800  ........a.......
 0350 00000000 7d0a0000 8000ad00 00000000  ....}...........
 0360 990a0000 8000b200 00000000 b60a0000  ................
 0370 8000b700 00000000 d20a0000 8000bc00  ................
 0380 00000000 ef0a0000 8000c400 00000000  ................
 0390 0b0b0000 8000cb00 00000000 280b0000  ............(...
 03a0 8000d900 00000000 420b0000 8000de00  ........B.......
 03b0 00000000 5d0b0000 8000e300 00000000  ....]...........
 03c0 780b0000 8000e800 00000000 940b0000  x...............
 03d0 8000ed00 00000000 af0b0000 8000f200  ................
 03e0 00000000 cb0b0000 8000fa00 00000000  ................
 03f0 e60b0000 80000101 00000000 020c0000  ................
 0400 80001501 00000000 190c0000 80001a01  ................
 0410 00000000 00000000 a2000000 00000000  ................
 0420 00000000 a2000000 00000000 310c0000  ............1...
 0430 80004d00 00000000 4b0c0000 80005100  ..M.....K.....Q.
 0440 00000000 00000000 a2000000 00000000  ................
 0450 00000000 a2000000 00000000 660c0000  ............f...
 0460 82000000 6e130000 860c0000 8000f400  ....n...........
 0470 00000000 00000000 a2000000 00000000  ................
 0480 00000000 a2000000 00000000 00000000  ................
 0490 a2000000 00000000 d40c0000 82000000  ................
 04a0 00000000 f80c0000 82000000 d8040000  ................
 04b0 200d0000 8000d800 00000000 00000000   ...............
 04c0 a2000000 00000000 00000000 a2000000  ................
 04d0 00000000 340d0000 82000000 85330000  ....4........3..
 04e0 510d0000 82000000 900e0000 790d0000  Q...........y...
 04f0 80002800 00000000 9f0d0000 80006200  ..(...........b.
 0500 00000000 00000000 a2000000 00000000  ................
 0510 b60d0000 80000000 00000000 800e0000  ................
 0520 80001501 00000000 940e0000 8000b603  ................
 0530 00000000 00000000 a2000000 00000000  ................
 0540 a90e0000 24001000 fa060000 00000000  ....$...........
 0550 2e000000 fa060000 00000000 44001100  ............D...
 0560 00000000 00000000 44001300 14000000  ........D.......
 0570 00000000 44001400 18000000 00000000  ....D...........
 0580 44001600 1c000000 00000000 44006c00  D...........D.l.
 0590 1e000000 00000000 44007100 30000000  ........D.q.0...
 05a0 00000000 44007200 42000000 00000000  ....D.r.B.......
 05b0 44007300 54000000 00000000 44007b00  D.s.T.......D.{.
 05c0 66000000 00000000 44008100 a0000000  f.......D.......
 05d0 00000000 44007f00 b2000000 00000000  ....D...........
 05e0 44008a00 b8000000 00000000 44008d00  D...........D...
 05f0 c4000000 00000000 44009000 e4000000  ........D.......
 0600 00000000 44009000 ec000000 00000000  ....D...........
 0610 44008e00 fe000000 00000000 44009400  D...........D...
 0620 0c010000 00000000 44009700 1c010000  ........D.......
 0630 00000000 44009700 24010000 00000000  ....D...$.......
 0640 44009500 36010000 b60e0000 80006c00  D...6.........l.
 0650 20000000 00000000 c0000000 00000000   ...............
 0660 00000000 e0000000 46010000 00000000  ........F.......
 0670 24000000 46010000 00000000 4e000000  $...F.......N...
 0680 40080000 00000000 64000000 74020000  @.......d...t...
 0690 08000000 64000200 74020000 ee0e0000  ....d...t.......
 06a0 64000200 74020000 65000000 3c000000  d...t...e...<...
 06b0 00000000 74000000 80000000 00000000  ....t...........
 06c0 94000000 80000000 00000000 ae000000  ................
 06d0 80000000 00000000 e5000000 80000000  ................
 06e0 00000000 0b010000 80000000 00000000  ................
 06f0 40010000 80000000 00000000 b8010000  @...............
 0700 80000000 00000000 0e020000 80000000  ................
 0710 00000000 60020000 80000000 00000000  ....`...........
 0720 a5020000 80000000 00000000 cd020000  ................
 0730 80000000 00000000 fb020000 80000000  ................
 0740 00000000 25030000 80000000 00000000  ....%...........
 0750 4e030000 80000000 00000000 68030000  N...........h...
 0760 80000000 00000000 83030000 80000000  ................
 0770 00000000 a3030000 80000000 00000000  ................
 0780 c4030000 80000000 00000000 df030000  ................
 0790 80000000 00000000 ff030000 80000000  ................
 07a0 00000000 24040000 80000000 00000000  ....$...........
 07b0 4e040000 80000000 00000000 72040000  N...........r...
 07c0 80000000 00000000 9b040000 80000000  ................
 07d0 00000000 c9040000 80000000 00000000  ................
 07e0 ef040000 80000000 00000000 0f050000  ................
 07f0 80000000 00000000 34050000 80000000  ........4.......
 0800 00000000 5e050000 80000000 00000000  ....^...........
 0810 8d050000 80000000 00000000 b6050000  ................
 0820 80000000 00000000 e4050000 80000000  ................
 0830 00000000 17060000 80000000 00000000  ................
 0840 38060000 80000000 00000000 53060000  8...........S...
 0850 80000000 00000000 73060000 80000000  ........s.......
 0860 00000000 98060000 80000000 00000000  ................
 0870 c2060000 80000000 00000000 e6060000  ................
 0880 80000000 00000000 0f070000 80000000  ................
 0890 00000000 3d070000 80000000 00000000  ....=...........
 08a0 63070000 80000000 00000000 83070000  c...............
 08b0 80000000 00000000 a8070000 80000000  ................
 08c0 00000000 d2070000 80000000 00000000  ................
 08d0 01080000 80000000 00000000 2a080000  ............*...
 08e0 80000000 00000000 58080000 80000000  ........X.......
 08f0 00000000 8b080000 80000000 00000000  ................
 0900 c4080000 c2000000 00000000 e2080000  ................
 0910 c2000000 00000000 06090000 c2000000  ................
 0920 250f0000 26090000 c2000000 00000000  %...&...........
 0930 4e090000 c2000000 3bb80000 660c0000  N.......;...f...
 0940 c2000000 6e130000 340d0000 c2000000  ....n...4.......
 0950 85330000 510d0000 c2000000 900e0000  .3..Q...........
 0960 f80c0000 c2000000 d8040000 f70e0000  ................
 0970 24001300 74020000 0b0f0000 40001300  $...t.......@...
 0980 1c000000 160f0000 40001300 16000000  ........@.......
 0990 00000000 2e000000 74020000 00000000  ........t.......
 09a0 44001300 00000000 00000000 44001400  D...........D...
 09b0 04000000 00000000 44001700 08000000  ........D.......
 09c0 00000000 44001900 10000000 00000000  ....D...........
 09d0 44001b00 14000000 00000000 44001500  D...........D...
 09e0 1c000000 00000000 24000000 28000000  ........$...(...
 09f0 00000000 4e000000 9c020000 2c0f0000  ....N.......,...
 0a00 24000900 9c020000 00000000 2e000000  $...............
 0a10 9c020000 00000000 44000900 00000000  ........D.......
 0a20 00000000 44000a00 00000000 00000000  ....D...........
 0a30 44000b00 04000000 00000000 44000c00  D...........D...
 0a40 0a000000 00000000 44000d00 0e000000  ........D.......
 0a50 00000000 44000e00 14000000 00000000  ....D...........
 0a60 44001000 1a000000 00000000 24000000  D...........$...
 0a70 28000000 00000000 4e000000 c4020000  (.......N.......
 0a80 3e0f0000 24001d00 c4020000 00000000  >...$...........
 0a90 2e000000 c4020000 00000000 44001d00  ............D...
 0aa0 00000000 00000000 44001e00 00000000  ........D.......
 0ab0 00000000 44002000 08000000 00000000  ....D. .........
 0ac0 44002100 0c000000 00000000 24000000  D.!.........$...
 0ad0 0e000000 00000000 4e000000 d2020000  ........N.......
 0ae0 520f0000 26000700 00018000 00000000  R...&...........
 0af0 64000000 d2020000 08000000 64000200  d...........d...
 0b00 d2020000 650f0000 64000200 d2020000  ....e...d.......
 0b10 65000000 3c000000 00000000 74000000  e...<.......t...
 0b20 80000000 00000000 94000000 80000000  ................
 0b30 00000000 ae000000 80000000 00000000  ................
 0b40 e5000000 80000000 00000000 0b010000  ................
 0b50 80000000 00000000 40010000 80000000  ........@.......
 0b60 00000000 b8010000 80000000 00000000  ................
 0b70 0e020000 80000000 00000000 60020000  ............`...
 0b80 80000000 00000000 a5020000 80000000  ................
 0b90 00000000 cd020000 80000000 00000000  ................
 0ba0 fb020000 80000000 00000000 25030000  ............%...
 0bb0 80000000 00000000 4e030000 80000000  ........N.......
 0bc0 00000000 68030000 80000000 00000000  ....h...........
 0bd0 83030000 80000000 00000000 a3030000  ................
 0be0 80000000 00000000 c4030000 80000000  ................
 0bf0 00000000 df030000 80000000 00000000  ................
 0c00 ff030000 80000000 00000000 24040000  ............$...
 0c10 80000000 00000000 4e040000 80000000  ........N.......
 0c20 00000000 72040000 80000000 00000000  ....r...........
 0c30 9b040000 80000000 00000000 c9040000  ................
 0c40 80000000 00000000 ef040000 80000000  ................
 0c50 00000000 0f050000 80000000 00000000  ................
 0c60 34050000 80000000 00000000 5e050000  4...........^...
 0c70 80000000 00000000 8d050000 80000000  ................
 0c80 00000000 b6050000 80000000 00000000  ................
 0c90 e4050000 80000000 00000000 17060000  ................
 0ca0 80000000 00000000 38060000 80000000  ........8.......
 0cb0 00000000 53060000 80000000 00000000  ....S...........
 0cc0 73060000 80000000 00000000 98060000  s...............
 0cd0 80000000 00000000 c2060000 80000000  ................
 0ce0 00000000 e6060000 80000000 00000000  ................
 0cf0 0f070000 80000000 00000000 3d070000  ............=...
 0d00 80000000 00000000 63070000 80000000  ........c.......
 0d10 00000000 83070000 80000000 00000000  ................
 0d20 a8070000 80000000 00000000 d2070000  ................
 0d30 80000000 00000000 01080000 80000000  ................
 0d40 00000000 2a080000 80000000 00000000  ....*...........
 0d50 58080000 80000000 00000000 8b080000  X...............
 0d60 80000000 00000000 c4080000 c2000000  ................
 0d70 00000000 e2080000 c2000000 00000000  ................
 0d80 06090000 c2000000 250f0000 26090000  ........%...&...
 0d90 c2000000 00000000 4e090000 c2000000  ........N.......
 0da0 3bb80000 660c0000 c2000000 6e130000  ;...f.......n...
 0db0 d40c0000 c2000000 00000000 f80c0000  ................
 0dc0 c2000000 d8040000 340d0000 c2000000  ........4.......
 0dd0 85330000 510d0000 c2000000 900e0000  .3..Q...........
 0de0 6c0f0000 24000700 d2020000 00000000  l...$...........
 0df0 2e000000 d2020000 00000000 44000700  ............D...
 0e00 00000000 00000000 24000000 02000000  ........$.......
 0e10 00000000 4e000000 d4020000 00000000  ....N...........
 0e20 64000000 d4020000 08000000 64000200  d...........d...
 0e30 d4020000 7e0f0000 64000200 d4020000  ....~...d.......
 0e40 65000000 3c000000 00000000 74000000  e...<.......t...
 0e50 80000000 00000000 94000000 80000000  ................
 0e60 00000000 ae000000 80000000 00000000  ................
 0e70 e5000000 80000000 00000000 0b010000  ................
 0e80 80000000 00000000 40010000 80000000  ........@.......
 0e90 00000000 b8010000 80000000 00000000  ................
 0ea0 0e020000 80000000 00000000 60020000  ............`...
 0eb0 80000000 00000000 a5020000 80000000  ................
 0ec0 00000000 cd020000 80000000 00000000  ................
 0ed0 fb020000 80000000 00000000 25030000  ............%...
 0ee0 80000000 00000000 4e030000 80000000  ........N.......
 0ef0 00000000 68030000 80000000 00000000  ....h...........
 0f00 83030000 80000000 00000000 a3030000  ................
 0f10 80000000 00000000 c4030000 80000000  ................
 0f20 00000000 df030000 80000000 00000000  ................
 0f30 ff030000 80000000 00000000 24040000  ............$...
 0f40 80000000 00000000 4e040000 80000000  ........N.......
 0f50 00000000 72040000 80000000 00000000  ....r...........
 0f60 9b040000 80000000 00000000 c9040000  ................
 0f70 80000000 00000000 ef040000 80000000  ................
 0f80 00000000 0f050000 80000000 00000000  ................
 0f90 34050000 80000000 00000000 5e050000  4...........^...
 0fa0 80000000 00000000 8d050000 80000000  ................
 0fb0 00000000 b6050000 80000000 00000000  ................
 0fc0 e4050000 80000000 00000000 17060000  ................
 0fd0 80000000 00000000 38060000 80000000  ........8.......
 0fe0 00000000 53060000 80000000 00000000  ....S...........
 0ff0 73060000 80000000 00000000 98060000  s...............
 1000 80000000 00000000 c2060000 80000000  ................
 1010 00000000 e6060000 80000000 00000000  ................
 1020 0f070000 80000000 00000000 3d070000  ............=...
 1030 80000000 00000000 63070000 80000000  ........c.......
 1040 00000000 83070000 80000000 00000000  ................
 1050 a8070000 80000000 00000000 d2070000  ................
 1060 80000000 00000000 01080000 80000000  ................
 1070 00000000 2a080000 80000000 00000000  ....*...........
 1080 58080000 80000000 00000000 8b080000  X...............
 1090 80000000 00000000 c4080000 c2000000  ................
 10a0 00000000 e2080000 c2000000 00000000  ................
 10b0 06090000 c2000000 250f0000 26090000  ........%...&...
 10c0 c2000000 00000000 4e090000 c2000000  ........N.......
 10d0 3bb80000 660c0000 c2000000 6e130000  ;...f.......n...
 10e0 840f0000 24000600 d4020000 00000000  ....$...........
 10f0 2e000000 d4020000 00000000 44000600  ............D...
 1100 00000000 00000000 44000c00 00000000  ........D.......
 1110 00000000 44000d00 08000000 00000000  ....D...........
 1120 44001400 0c000000 00000000 24000000  D...........$...
 1130 14000000 00000000 4e000000 e8020000  ........N.......
 1140 950f0000 24001700 e8020000 ab0f0000  ....$...........
 1150 40001700 18000000 00000000 2e000000  @...............
 1160 e8020000 00000000 44001700 00000000  ........D.......
 1170 00000000 44001800 00000000 00000000  ....D...........
 1180 24000000 06000000 00000000 4e000000  $...........N...
 1190 ee020000 b60f0000 24001b00 ee020000  ........$.......
 11a0 00000000 2e000000 ee020000 00000000  ................
 11b0 44001b00 00000000 00000000 44001c00  D...........D...
 11c0 00000000 00000000 44001d00 04000000  ........D.......
 11d0 00000000 24000000 06000000 00000000  ....$...........
 11e0 4e000000 f4020000 cb0f0000 26000400  N...........&...
 11f0 2e018000 00000000 64000000 f4020000  ........d.......
 1200 08000000 64000200 f4020000 e40f0000  ....d...........
 1210 64000200 f4020000 65000000 3c000000  d.......e...<...
 1220 00000000 74000000 80000000 00000000  ....t...........
 1230 94000000 80000000 00000000 ae000000  ................
 1240 80000000 00000000 e5000000 80000000  ................
 1250 00000000 0b010000 80000000 00000000  ................
 1260 40010000 80000000 00000000 b8010000  @...............
 1270 80000000 00000000 0e020000 80000000  ................
 1280 00000000 60020000 80000000 00000000  ....`...........
 1290 a5020000 80000000 00000000 cd020000  ................
 12a0 80000000 00000000 fb020000 80000000  ................
 12b0 00000000 25030000 80000000 00000000  ....%...........
 12c0 4e030000 80000000 00000000 68030000  N...........h...
 12d0 80000000 00000000 83030000 80000000  ................
 12e0 00000000 a3030000 80000000 00000000  ................
 12f0 c4030000 80000000 00000000 df030000  ................
 1300 80000000 00000000 ff030000 80000000  ................
 1310 00000000 24040000 80000000 00000000  ....$...........
 1320 4e040000 80000000 00000000 72040000  N...........r...
 1330 80000000 00000000 9b040000 80000000  ................
 1340 00000000 c9040000 80000000 00000000  ................
 1350 ef040000 80000000 00000000 0f050000  ................
 1360 80000000 00000000 34050000 80000000  ........4.......
 1370 00000000 5e050000 80000000 00000000  ....^...........
 1380 8d050000 80000000 00000000 b6050000  ................
 1390 80000000 00000000 e4050000 80000000  ................
 13a0 00000000 17060000 80000000 00000000  ................
 13b0 38060000 80000000 00000000 53060000  8...........S...
 13c0 80000000 00000000 73060000 80000000  ........s.......
 13d0 00000000 98060000 80000000 00000000  ................
 13e0 c2060000 80000000 00000000 e6060000  ................
 13f0 80000000 00000000 0f070000 80000000  ................
 1400 00000000 3d070000 80000000 00000000  ....=...........
 1410 63070000 80000000 00000000 83070000  c...............
 1420 80000000 00000000 a8070000 80000000  ................
 1430 00000000 d2070000 80000000 00000000  ................
 1440 01080000 80000000 00000000 2a080000  ............*...
 1450 80000000 00000000 58080000 80000000  ........X.......
 1460 00000000 8b080000 80000000 00000000  ................
 1470 c4080000 c2000000 00000000 e2080000  ................
 1480 c2000000 00000000 06090000 c2000000  ................
 1490 250f0000 26090000 c2000000 00000000  %...&...........
 14a0 4e090000 c2000000 3bb80000 660c0000  N.......;...f...
 14b0 c2000000 6e130000 ec0f0000 24000500  ....n.......$...
 14c0 f4020000 00000000 2e000000 f4020000  ................
 14d0 00000000 44000500 00000000 00000000  ....D...........
 14e0 24000000 02000000 00000000 4e000000  $...........N...
 14f0 f6020000 00000000 64000000 f6020000  ........d.......
 1500 08000000 64000200 f6020000 ff0f0000  ....d...........
 1510 64000200 f6020000 65000000 3c000000  d.......e...<...
 1520 00000000 74000000 80000000 00000000  ....t...........
 1530 94000000 80000000 00000000 ae000000  ................
 1540 80000000 00000000 e5000000 80000000  ................
 1550 00000000 0b010000 80000000 00000000  ................
 1560 40010000 80000000 00000000 b8010000  @...............
 1570 80000000 00000000 0e020000 80000000  ................
 1580 00000000 60020000 80000000 00000000  ....`...........
 1590 a5020000 80000000 00000000 cd020000  ................
 15a0 80000000 00000000 fb020000 80000000  ................
 15b0 00000000 25030000 80000000 00000000  ....%...........
 15c0 4e030000 80000000 00000000 68030000  N...........h...
 15d0 80000000 00000000 83030000 80000000  ................
 15e0 00000000 a3030000 80000000 00000000  ................
 15f0 c4030000 80000000 00000000 df030000  ................
 1600 80000000 00000000 ff030000 80000000  ................
 1610 00000000 24040000 80000000 00000000  ....$...........
 1620 4e040000 80000000 00000000 72040000  N...........r...
 1630 80000000 00000000 9b040000 80000000  ................
 1640 00000000 c9040000 80000000 00000000  ................
 1650 ef040000 80000000 00000000 0f050000  ................
 1660 80000000 00000000 34050000 80000000  ........4.......
 1670 00000000 5e050000 80000000 00000000  ....^...........
 1680 8d050000 80000000 00000000 b6050000  ................
 1690 80000000 00000000 e4050000 80000000  ................
 16a0 00000000 17060000 80000000 00000000  ................
 16b0 38060000 80000000 00000000 53060000  8...........S...
 16c0 80000000 00000000 73060000 80000000  ........s.......
 16d0 00000000 98060000 80000000 00000000  ................
 16e0 c2060000 80000000 00000000 e6060000  ................
 16f0 80000000 00000000 0f070000 80000000  ................
 1700 00000000 3d070000 80000000 00000000  ....=...........
 1710 63070000 80000000 00000000 83070000  c...............
 1720 80000000 00000000 a8070000 80000000  ................
 1730 00000000 d2070000 80000000 00000000  ................
 1740 01080000 80000000 00000000 2a080000  ............*...
 1750 80000000 00000000 58080000 80000000  ........X.......
 1760 00000000 8b080000 80000000 00000000  ................
 1770 c4080000 c2000000 00000000 e2080000  ................
 1780 c2000000 00000000 06090000 c2000000  ................
 1790 250f0000 26090000 c2000000 00000000  %...&...........
 17a0 4e090000 c2000000 3bb80000 660c0000  N.......;...f...
 17b0 c2000000 6e130000 d40c0000 c2000000  ....n...........
 17c0 00000000 f80c0000 c2000000 d8040000  ................
 17d0 340d0000 c2000000 85330000 510d0000  4........3..Q...
 17e0 c2000000 900e0000 05100000 24000c00  ............$...
 17f0 f6020000 00000000 2e000000 f6020000  ................
 1800 00000000 44000d00 00000000 00000000  ....D...........
 1810 44001300 00000000 00000000 44001400  D...........D...
 1820 08000000 00000000 44001600 0e000000  ........D.......
 1830 00000000 44001800 14000000 00000000  ....D...........
 1840 24000000 1c000000 00000000 4e000000  $...........N...
 1850 12030000 16100000 24001b00 12030000  ........$.......
 1860 34100000 40001b00 18000000 00000000  4...@...........
 1870 2e000000 12030000 00000000 44001c00  ............D...
 1880 00000000 00000000 44001d00 00000000  ........D.......
 1890 00000000 44004300 0e000000 00000000  ....D.C.........
 18a0 44004400 1e000000 00000000 44001d00  D.D.........D...
 18b0 28000000 00000000 44004000 30000000  (.......D.@.0...
 18c0 00000000 44004100 3c000000 00000000  ....D.A.<.......
 18d0 44002000 42000000 00000000 44002100  D. .B.......D.!.
 18e0 4e000000 00000000 44002300 54000000  N.......D.#.T...
 18f0 00000000 44002400 60000000 00000000  ....D.$.`.......
 1900 44002a00 66000000 00000000 44002b00  D.*.f.......D.+.
 1910 72000000 00000000 44002d00 78000000  r.......D.-.x...
 1920 00000000 44002e00 84000000 00000000  ....D...........
 1930 44003000 8a000000 00000000 44003100  D.0.........D.1.
 1940 96000000 00000000 44003300 9c000000  ........D.3.....
 1950 00000000 44003400 a8000000 00000000  ....D.4.........
 1960 44002600 ae000000 00000000 44002700  D.&.........D.'.
 1970 ba000000 00000000 44003700 c0000000  ........D.7.....
 1980 00000000 44003800 cc000000 00000000  ....D.8.........
 1990 44003a00 d2000000 00000000 44003b00  D.:.........D.;.
 19a0 de000000 00000000 44003d00 e4000000  ........D.=.....
 19b0 00000000 44003e00 f0000000 00000000  ....D.>.........
 19c0 24000000 f6000000 00000000 4e000000  $...........N...
 19d0 08040000 42100000 24004b00 08040000  ....B...$.K.....
 19e0 00000000 2e000000 08040000 00000000  ................
 19f0 44004c00 00000000 00000000 44004d00  D.L.........D.M.
 1a00 00000000 00000000 44004e00 06000000  ........D.N.....
 1a10 00000000 44005000 0e000000 00000000  ....D.P.........
 1a20 24000000 10000000 00000000 4e000000  $...........N...
 1a30 18040000 54100000 24005300 18040000  ....T...$.S.....
 1a40 00000000 2e000000 18040000 00000000  ................
 1a50 44005400 00000000 00000000 44005500  D.T.........D.U.
 1a60 00000000 00000000 44005600 06000000  ........D.V.....
 1a70 00000000 44005a00 0e000000 00000000  ....D.Z.........
 1a80 24000000 10000000 00000000 4e000000  $...........N...
 1a90 28040000 65100000 24005d00 28040000  (...e...$.].(...
 1aa0 00000000 2e000000 28040000 00000000  ........(.......
 1ab0 44005e00 00000000 00000000 44006100  D.^.........D.a.
 1ac0 00000000 00000000 44006300 04000000  ........D.c.....
 1ad0 00000000 24000000 08000000 00000000  ....$...........
 1ae0 4e000000 30040000 7b100000 24006600  N...0...{...$.f.
 1af0 30040000 91100000 40006600 18000000  0.......@.f.....
 1b00 a0100000 40006600 16000000 00000000  ....@.f.........
 1b10 2e000000 30040000 00000000 44006700  ....0.......D.g.
 1b20 00000000 00000000 44006800 00000000  ........D.h.....
 1b30 00000000 44006900 0a000000 00000000  ....D.i.........
 1b40 44006a00 10000000 00000000 44006c00  D.j.........D.l.
 1b50 18000000 00000000 24000000 1a000000  ........$.......
 1b60 00000000 4e000000 4a040000 aa100000  ....N...J.......
 1b70 24006f00 4a040000 c0100000 40006f00  $.o.J.......@.o.
 1b80 18000000 00000000 2e000000 4a040000  ............J...
 1b90 00000000 44007000 00000000 00000000  ....D.p.........
 1ba0 44007100 00000000 00000000 44007200  D.q.........D.r.
 1bb0 04000000 00000000 44007300 0a000000  ........D.s.....
 1bc0 00000000 44007500 12000000 00000000  ....D.u.........
 1bd0 24000000 14000000 00000000 4e000000  $...........N...
 1be0 5e040000 cc100000 24007800 5e040000  ^.......$.x.^...
 1bf0 00000000 2e000000 5e040000 00000000  ........^.......
 1c00 44007900 00000000 00000000 44007a00  D.y.........D.z.
 1c10 00000000 00000000 44007b00 06000000  ........D.{.....
 1c20 00000000 44007d00 0e000000 00000000  ....D.}.........
 1c30 44007e00 12000000 00000000 24000000  D.~.........$...
 1c40 14000000 00000000 4e000000 72040000  ........N...r...
 1c50 e0100000 24008100 72040000 00000000  ....$...r.......
 1c60 2e000000 72040000 00000000 44008200  ....r.......D...
 1c70 00000000 00000000 44008300 00000000  ........D.......
 1c80 00000000 44008400 06000000 00000000  ....D...........
 1c90 44008600 0e000000 00000000 44008700  D...........D...
 1ca0 12000000 00000000 24000000 14000000  ........$.......
 1cb0 00000000 4e000000 86040000 f4100000  ....N...........
 1cc0 24008900 86040000 00000000 2e000000  $...............
 1cd0 86040000 00000000 44008a00 00000000  ........D.......
 1ce0 00000000 44004d00 00000000 00000000  ....D.M.........
 1cf0 44006800 02000000 00000000 44006900  D.h.........D.i.
 1d00 04000000 00000000 44004d00 06000000  ........D.M.....
 1d10 00000000 44004e00 0a000000 00000000  ....D.N.........
 1d20 44006800 12000000 00000000 44006900  D.h.........D.i.
 1d30 16000000 00000000 44006a00 1a000000  ........D.j.....
 1d40 00000000 44006100 22000000 00000000  ....D.a.".......
 1d50 44008c00 26000000 00000000 44009200  D...&.......D...
 1d60 2c000000 00000000 24000000 2e000000  ,.......$.......
 1d70 00000000 4e000000 b4040000 1d110000  ....N...........
 1d80 24009400 b4040000 35110000 40009400  $.......5...@...
 1d90 18000000 00000000 2e000000 b4040000  ................
 1da0 00000000 44009500 00000000 00000000  ....D...........
 1db0 44004d00 00000000 00000000 44004e00  D.M.........D.N.
 1dc0 06000000 00000000 44006800 0e000000  ........D.h.....
 1dd0 00000000 44006900 14000000 00000000  ....D.i.........
 1de0 44006a00 1a000000 00000000 44007100  D.j.........D.q.
 1df0 22000000 00000000 44007200 26000000  ".......D.r.&...
 1e00 00000000 44007300 2c000000 00000000  ....D.s.,.......
 1e10 44004d00 34000000 00000000 44004e00  D.M.4.......D.N.
 1e20 3a000000 00000000 44006800 42000000  :.......D.h.B...
 1e30 00000000 44006900 48000000 00000000  ....D.i.H.......
 1e40 44006a00 4e000000 00000000 44008300  D.j.N.......D...
 1e50 56000000 00000000 44008400 5c000000  V.......D...\...
 1e60 00000000 44008600 64000000 00000000  ....D...d.......
 1e70 44005500 68000000 00000000 44005600  D.U.h.......D.V.
 1e80 6e000000 00000000 4400ab00 76000000  n.......D...v...
 1e90 00000000 24000000 78000000 00000000  ....$...x.......
 1ea0 4e000000 2c050000 41110000 2400ad00  N...,...A...$...
 1eb0 2c050000 35110000 4000ad00 18000000  ,...5...@.......
 1ec0 c0100000 4000ad00 16000000 00000000  ....@...........
 1ed0 2e000000 2c050000 00000000 4400ae00  ....,.......D...
 1ee0 00000000 00000000 44004d00 00000000  ........D.M.....
 1ef0 00000000 44004e00 06000000 00000000  ....D.N.........
 1f00 44006800 0e000000 00000000 44006900  D.h.........D.i.
 1f10 14000000 00000000 44006a00 1a000000  ........D.j.....
 1f20 00000000 44007100 22000000 00000000  ....D.q.".......
 1f30 44007200 26000000 00000000 44007300  D.r.&.......D.s.
 1f40 2c000000 00000000 44007100 34000000  ,.......D.q.4...
 1f50 00000000 44007200 38000000 00000000  ....D.r.8.......
 1f60 44007300 3e000000 00000000 44005500  D.s.>.......D.U.
 1f70 46000000 00000000 44005600 4c000000  F.......D.V.L...
 1f80 00000000 44004d00 54000000 00000000  ....D.M.T.......
 1f90 44006800 56000000 00000000 44006900  D.h.V.......D.i.
 1fa0 58000000 00000000 44004d00 5a000000  X.......D.M.Z...
 1fb0 00000000 44004e00 5e000000 00000000  ....D.N.^.......
 1fc0 44006800 66000000 00000000 44006900  D.h.f.......D.i.
 1fd0 6a000000 00000000 44006a00 6e000000  j.......D.j.n...
 1fe0 00000000 44006100 76000000 00000000  ....D.a.v.......
 1ff0 44008c00 7a000000 00000000 4400c600  D...z.......D...
 2000 80000000 00000000 24000000 82000000  ........$.......
 2010 00000000 4e000000 ae050000 5b110000  ....N.......[...
 2020 2400c800 ae050000 35110000 4000c800  $.......5...@...
 2030 18000000 75110000 4000c800 16000000  ....u...@.......
 2040 00000000 2e000000 ae050000 00000000  ................
 2050 4400c900 00000000 00000000 4400ca00  D...........D...
 2060 00000000 00000000 44004d00 04000000  ........D.M.....
 2070 00000000 44004e00 0a000000 00000000  ....D.N.........
 2080 44006800 12000000 00000000 44006900  D.h.........D.i.
 2090 18000000 00000000 44006a00 1e000000  ........D.j.....
 20a0 00000000 44007100 26000000 00000000  ....D.q.&.......
 20b0 44007200 2a000000 00000000 44007300  D.r.*.......D.s.
 20c0 30000000 00000000 44007200 40000000  0.......D.r.@...
 20d0 00000000 44007100 42000000 00000000  ....D.q.B.......
 20e0 44007200 46000000 00000000 44007300  D.r.F.......D.s.
 20f0 4a000000 00000000 4400de00 52000000  J.......D...R...
 2100 00000000 4400d800 54000000 00000000  ....D...T.......
 2110 44005500 5a000000 00000000 44005600  D.U.Z.......D.V.
 2120 60000000 00000000 44004d00 68000000  `.......D.M.h...
 2130 00000000 44006800 6a000000 00000000  ....D.h.j.......
 2140 44006900 6c000000 00000000 44004d00  D.i.l.......D.M.
 2150 6e000000 00000000 44004e00 72000000  n.......D.N.r...
 2160 00000000 44006800 7a000000 00000000  ....D.h.z.......
 2170 44006900 7e000000 00000000 44006a00  D.i.~.......D.j.
 2180 82000000 00000000 44006100 8a000000  ........D.a.....
 2190 00000000 44008c00 8e000000 00000000  ....D...........
 21a0 4400e600 94000000 89110000 4000ca00  D...........@...
 21b0 12000000 00000000 c0000000 00000000  ................
 21c0 00000000 e0000000 96000000 00000000  ................
 21d0 24000000 96000000 00000000 4e000000  $...........N...
 21e0 44060000 99110000 2400e800 44060000  D.......$...D...
 21f0 b8110000 4000e800 16000000 cc110000  ....@...........
 2200 4000e800 14000000 00000000 2e000000  @...............
 2210 44060000 00000000 4400e900 00000000  D.......D.......
 2220 00000000 44004d00 00000000 00000000  ....D.M.........
 2230 44004e00 06000000 00000000 44006800  D.N.........D.h.
 2240 0e000000 00000000 44006900 14000000  ........D.i.....
 2250 00000000 44006a00 1a000000 00000000  ....D.j.........
 2260 44007100 22000000 00000000 44007200  D.q.".......D.r.
 2270 26000000 00000000 44007300 2c000000  &.......D.s.,...
 2280 00000000 44004d00 34000000 00000000  ....D.M.4.......
 2290 44004e00 3a000000 00000000 44006800  D.N.:.......D.h.
 22a0 42000000 00000000 44006900 48000000  B.......D.i.H...
 22b0 00000000 44006a00 4e000000 00000000  ....D.j.N.......
 22c0 4400ff00 56000000 00000000 4400ff00  D...V.......D...
 22d0 66000000 00000000 44007a00 6a000000  f.......D.z.j...
 22e0 00000000 44008300 6c000000 00000000  ....D...l.......
 22f0 44007a00 6e000000 00000000 44007b00  D.z.n.......D.{.
 2300 72000000 00000000 44007d00 7a000000  r.......D.}.z...
 2310 00000000 44000501 7e000000 00000000  ....D...~.......
 2320 44000d01 84000000 00000000 4400ff00  D...........D...
 2330 86000000 00000000 44005500 92000000  ........D.U.....
 2340 00000000 44005600 98000000 00000000  ....D.V.........
 2350 44001201 a0000000 00000000 44008300  D...........D...
 2360 a2000000 00000000 44008400 a6000000  ........D.......
 2370 00000000 44008600 ae000000 00000000  ....D...........
 2380 44000901 b2000000 d7110000 4000ff00  D...........@...
 2390 12000000 00000000 c0000000 56000000  ............V...
 23a0 00000000 e0000000 92000000 d7110000  ................
 23b0 4000ff00 12000000 00000000 c0000000  @...............
 23c0 a2000000 00000000 e0000000 b6000000  ................
 23d0 00000000 24000000 b6000000 00000000  ....$...........
 23e0 4e000000 fa060000 00000000 64000000  N...........d...
 23f0 fa060000                             ....            
Contents of section .stabstr:
 0000 006d6169 6e2e6300 2f6d6e74 2f632f55  .main.c./mnt/c/U
 0010 73657273 2f61736d 616b2f41 736d6145  sers/asmak/AsmaE
 0020 64752f42 75696c74 496e5379 7374656d  du/BuiltInSystem
 0030 41726368 69746563 74757265 4e646573  ArchitectureNdes
 0040 69676e2f 6c61622d 30345f62 6173656c  ign/lab-04_basel
 0050 696e652f 6c61622d 30345f62 6173656c  ine/lab-04_basel
 0060 696e652f 00676363 325f636f 6d70696c  ine/.gcc2_compil
 0070 65642e00 696e743a 7428302c 31293d72  ed..int:t(0,1)=r
 0080 28302c31 293b2d33 32373638 3b333237  (0,1);-32768;327
 0090 36373b00 63686172 3a742830 2c32293d  67;.char:t(0,2)=
 00a0 7228302c 32293b30 3b313237 3b006c6f  r(0,2);0;127;.lo
 00b0 6e672069 6e743a74 28302c33 293d4073  ng int:t(0,3)=@s
 00c0 33323b72 28302c33 293b3032 30303030  32;r(0,3);020000
 00d0 30303030 30303b30 31373737 37373737  000000;017777777
 00e0 3737373b 00756e73 69676e65 6420696e  777;.unsigned in
 00f0 743a7428 302c3429 3d722830 2c34293b  t:t(0,4)=r(0,4);
 0100 303b3031 37373737 373b006c 6f6e6720  0;0177777;.long 
 0110 756e7369 676e6564 20696e74 3a742830  unsigned int:t(0
 0120 2c35293d 40733332 3b722830 2c35293b  ,5)=@s32;r(0,5);
 0130 303b3033 37373737 37373737 37373b00  0;037777777777;.
 0140 5f5f696e 74313238 3a742830 2c36293d  __int128:t(0,6)=
 0150 40733132 383b7228 302c3629 3b303230  @s128;r(0,6);020
 0160 30303030 30303030 30303030 30303030  0000000000000000
 0170 30303030 30303030 30303030 30303030  0000000000000000
 0180 30303030 30303030 303b3031 37373737  000000000;017777
 0190 37373737 37373737 37373737 37373737  7777777777777777
 01a0 37373737 37373737 37373737 37373737  7777777777777777
 01b0 37373737 37373b00 5f5f696e 74313238  777777;.__int128
 01c0 20756e73 69676e65 643a7428 302c3729   unsigned:t(0,7)
 01d0 3d407331 32383b72 28302c37 293b303b  =@s128;r(0,7);0;
 01e0 30333737 37373737 37373737 37373737  0377777777777777
 01f0 37373737 37373737 37373737 37373737  7777777777777777
 0200 37373737 37373737 37373737 3b006c6f  777777777777;.lo
 0210 6e67206c 6f6e6720 696e743a 7428302c  ng long int:t(0,
 0220 38293d40 7336343b 7228302c 38293b30  8)=@s64;r(0,8);0
 0230 31303030 30303030 30303030 30303030  1000000000000000
 0240 30303030 30303b30 30373737 37373737  000000;007777777
 0250 37373737 37373737 37373737 37373b00  77777777777777;.
 0260 6c6f6e67 206c6f6e 6720756e 7369676e  long long unsign
 0270 65642069 6e743a74 28302c39 293d4073  ed int:t(0,9)=@s
 0280 36343b72 28302c39 293b303b 30313737  64;r(0,9);0;0177
 0290 37373737 37373737 37373737 37373737  7777777777777777
 02a0 3737373b 0073686f 72742069 6e743a74  777;.short int:t
 02b0 28302c31 30293d72 28302c31 30293b2d  (0,10)=r(0,10);-
 02c0 33323736 383b3332 3736373b 0073686f  32768;32767;.sho
 02d0 72742075 6e736967 6e656420 696e743a  rt unsigned int:
 02e0 7428302c 3131293d 7228302c 3131293b  t(0,11)=r(0,11);
 02f0 303b3031 37373737 373b0073 69676e65  0;0177777;.signe
 0300 64206368 61723a74 28302c31 32293d40  d char:t(0,12)=@
 0310 73383b72 28302c31 32293b2d 3132383b  s8;r(0,12);-128;
 0320 3132373b 00756e73 69676e65 64206368  127;.unsigned ch
 0330 61723a74 28302c31 33293d40 73383b72  ar:t(0,13)=@s8;r
 0340 28302c31 33293b30 3b323535 3b00666c  (0,13);0;255;.fl
 0350 6f61743a 7428302c 3134293d 7228302c  oat:t(0,14)=r(0,
 0360 31293b34 3b303b00 646f7562 6c653a74  1);4;0;.double:t
 0370 28302c31 35293d72 28302c31 293b343b  (0,15)=r(0,1);4;
 0380 303b006c 6f6e6720 646f7562 6c653a74  0;.long double:t
 0390 28302c31 36293d72 28302c31 293b343b  (0,16)=r(0,1);4;
 03a0 303b0073 686f7274 205f4672 6163743a  0;.short _Fract:
 03b0 7428302c 3137293d 7228302c 31293b31  t(0,17)=r(0,1);1
 03c0 3b303b00 5f467261 63743a74 28302c31  ;0;._Fract:t(0,1
 03d0 38293d72 28302c31 293b323b 303b006c  8)=r(0,1);2;0;.l
 03e0 6f6e6720 5f467261 63743a74 28302c31  ong _Fract:t(0,1
 03f0 39293d72 28302c31 293b343b 303b006c  9)=r(0,1);4;0;.l
 0400 6f6e6720 6c6f6e67 205f4672 6163743a  ong long _Fract:
 0410 7428302c 3230293d 7228302c 31293b38  t(0,20)=r(0,1);8
 0420 3b303b00 756e7369 676e6564 2073686f  ;0;.unsigned sho
 0430 7274205f 46726163 743a7428 302c3231  rt _Fract:t(0,21
 0440 293d7228 302c3129 3b313b30 3b00756e  )=r(0,1);1;0;.un
 0450 7369676e 6564205f 46726163 743a7428  signed _Fract:t(
 0460 302c3232 293d7228 302c3129 3b323b30  0,22)=r(0,1);2;0
 0470 3b00756e 7369676e 6564206c 6f6e6720  ;.unsigned long 
 0480 5f467261 63743a74 28302c32 33293d72  _Fract:t(0,23)=r
 0490 28302c31 293b343b 303b0075 6e736967  (0,1);4;0;.unsig
 04a0 6e656420 6c6f6e67 206c6f6e 67205f46  ned long long _F
 04b0 72616374 3a742830 2c323429 3d722830  ract:t(0,24)=r(0
 04c0 2c31293b 383b303b 005f5361 74207368  ,1);8;0;._Sat sh
 04d0 6f727420 5f467261 63743a74 28302c32  ort _Fract:t(0,2
 04e0 35293d72 28302c31 293b313b 303b005f  5)=r(0,1);1;0;._
 04f0 53617420 5f467261 63743a74 28302c32  Sat _Fract:t(0,2
 0500 36293d72 28302c31 293b323b 303b005f  6)=r(0,1);2;0;._
 0510 53617420 6c6f6e67 205f4672 6163743a  Sat long _Fract:
 0520 7428302c 3237293d 7228302c 31293b34  t(0,27)=r(0,1);4
 0530 3b303b00 5f536174 206c6f6e 67206c6f  ;0;._Sat long lo
 0540 6e67205f 46726163 743a7428 302c3238  ng _Fract:t(0,28
 0550 293d7228 302c3129 3b383b30 3b005f53  )=r(0,1);8;0;._S
 0560 61742075 6e736967 6e656420 73686f72  at unsigned shor
 0570 74205f46 72616374 3a742830 2c323929  t _Fract:t(0,29)
 0580 3d722830 2c31293b 313b303b 005f5361  =r(0,1);1;0;._Sa
 0590 7420756e 7369676e 6564205f 46726163  t unsigned _Frac
 05a0 743a7428 302c3330 293d7228 302c3129  t:t(0,30)=r(0,1)
 05b0 3b323b30 3b005f53 61742075 6e736967  ;2;0;._Sat unsig
 05c0 6e656420 6c6f6e67 205f4672 6163743a  ned long _Fract:
 05d0 7428302c 3331293d 7228302c 31293b34  t(0,31)=r(0,1);4
 05e0 3b303b00 5f536174 20756e73 69676e65  ;0;._Sat unsigne
 05f0 64206c6f 6e67206c 6f6e6720 5f467261  d long long _Fra
 0600 63743a74 28302c33 32293d72 28302c31  ct:t(0,32)=r(0,1
 0610 293b383b 303b0073 686f7274 205f4163  );8;0;.short _Ac
 0620 63756d3a 7428302c 3333293d 7228302c  cum:t(0,33)=r(0,
 0630 31293b32 3b303b00 5f416363 756d3a74  1);2;0;._Accum:t
 0640 28302c33 34293d72 28302c31 293b343b  (0,34)=r(0,1);4;
 0650 303b006c 6f6e6720 5f416363 756d3a74  0;.long _Accum:t
 0660 28302c33 35293d72 28302c31 293b383b  (0,35)=r(0,1);8;
 0670 303b006c 6f6e6720 6c6f6e67 205f4163  0;.long long _Ac
 0680 63756d3a 7428302c 3336293d 7228302c  cum:t(0,36)=r(0,
 0690 31293b38 3b303b00 756e7369 676e6564  1);8;0;.unsigned
 06a0 2073686f 7274205f 41636375 6d3a7428   short _Accum:t(
 06b0 302c3337 293d7228 302c3129 3b323b30  0,37)=r(0,1);2;0
 06c0 3b00756e 7369676e 6564205f 41636375  ;.unsigned _Accu
 06d0 6d3a7428 302c3338 293d7228 302c3129  m:t(0,38)=r(0,1)
 06e0 3b343b30 3b00756e 7369676e 6564206c  ;4;0;.unsigned l
 06f0 6f6e6720 5f416363 756d3a74 28302c33  ong _Accum:t(0,3
 0700 39293d72 28302c31 293b383b 303b0075  9)=r(0,1);8;0;.u
 0710 6e736967 6e656420 6c6f6e67 206c6f6e  nsigned long lon
 0720 67205f41 6363756d 3a742830 2c343029  g _Accum:t(0,40)
 0730 3d722830 2c31293b 383b303b 005f5361  =r(0,1);8;0;._Sa
 0740 74207368 6f727420 5f416363 756d3a74  t short _Accum:t
 0750 28302c34 31293d72 28302c31 293b323b  (0,41)=r(0,1);2;
 0760 303b005f 53617420 5f416363 756d3a74  0;._Sat _Accum:t
 0770 28302c34 32293d72 28302c31 293b343b  (0,42)=r(0,1);4;
 0780 303b005f 53617420 6c6f6e67 205f4163  0;._Sat long _Ac
 0790 63756d3a 7428302c 3433293d 7228302c  cum:t(0,43)=r(0,
 07a0 31293b38 3b303b00 5f536174 206c6f6e  1);8;0;._Sat lon
 07b0 67206c6f 6e67205f 41636375 6d3a7428  g long _Accum:t(
 07c0 302c3434 293d7228 302c3129 3b383b30  0,44)=r(0,1);8;0
 07d0 3b005f53 61742075 6e736967 6e656420  ;._Sat unsigned 
 07e0 73686f72 74205f41 6363756d 3a742830  short _Accum:t(0
 07f0 2c343529 3d722830 2c31293b 323b303b  ,45)=r(0,1);2;0;
 0800 005f5361 7420756e 7369676e 6564205f  ._Sat unsigned _
 0810 41636375 6d3a7428 302c3436 293d7228  Accum:t(0,46)=r(
 0820 302c3129 3b343b30 3b005f53 61742075  0,1);4;0;._Sat u
 0830 6e736967 6e656420 6c6f6e67 205f4163  nsigned long _Ac
 0840 63756d3a 7428302c 3437293d 7228302c  cum:t(0,47)=r(0,
 0850 31293b38 3b303b00 5f536174 20756e73  1);8;0;._Sat uns
 0860 69676e65 64206c6f 6e67206c 6f6e6720  igned long long 
 0870 5f416363 756d3a74 28302c34 38293d72  _Accum:t(0,48)=r
 0880 28302c31 293b383b 303b0076 6f69643a  (0,1);8;0;.void:
 0890 7428302c 3439293d 28302c34 3929002f  t(0,49)=(0,49)./
 08a0 7573722f 6c69622f 6176722f 696e636c  usr/lib/avr/incl
 08b0 7564652f 6176722f 696e7465 72727570  ude/avr/interrup
 08c0 742e6800 2f757372 2f6c6962 2f617672  t.h./usr/lib/avr
 08d0 2f696e63 6c756465 2f617672 2f696f2e  /include/avr/io.
 08e0 68002f75 73722f6c 69622f61 76722f69  h./usr/lib/avr/i
 08f0 6e636c75 64652f61 76722f73 66725f64  nclude/avr/sfr_d
 0900 6566732e 68002f75 73722f6c 69622f61  efs.h./usr/lib/a
 0910 76722f69 6e636c75 64652f69 6e747479  vr/include/intty
 0920 7065732e 68002f75 73722f6c 69622f67  pes.h./usr/lib/g
 0930 63632f61 76722f35 2e342e30 2f696e63  cc/avr/5.4.0/inc
 0940 6c756465 2f737464 696e742e 68002f75  lude/stdint.h./u
 0950 73722f6c 69622f61 76722f69 6e636c75  sr/lib/avr/inclu
 0960 64652f73 7464696e 742e6800 696e7438  de/stdint.h.int8
 0970 5f743a74 28362c31 293d2830 2c313229  _t:t(6,1)=(0,12)
 0980 0075696e 74385f74 3a742836 2c32293d  .uint8_t:t(6,2)=
 0990 28302c31 33290069 6e743136 5f743a74  (0,13).int16_t:t
 09a0 28362c33 293d2830 2c312900 75696e74  (6,3)=(0,1).uint
 09b0 31365f74 3a742836 2c34293d 28302c34  16_t:t(6,4)=(0,4
 09c0 2900696e 7433325f 743a7428 362c3529  ).int32_t:t(6,5)
 09d0 3d28302c 33290075 696e7433 325f743a  =(0,3).uint32_t:
 09e0 7428362c 36293d28 302c3529 00696e74  t(6,6)=(0,5).int
 09f0 36345f74 3a742836 2c37293d 28302c38  64_t:t(6,7)=(0,8
 0a00 29007569 6e743634 5f743a74 28362c38  ).uint64_t:t(6,8
 0a10 293d2830 2c392900 696e7470 74725f74  )=(0,9).intptr_t
 0a20 3a742836 2c39293d 28362c33 29007569  :t(6,9)=(6,3).ui
 0a30 6e747074 725f743a 7428362c 3130293d  ntptr_t:t(6,10)=
 0a40 28362c34 2900696e 745f6c65 61737438  (6,4).int_least8
 0a50 5f743a74 28362c31 31293d28 362c3129  _t:t(6,11)=(6,1)
 0a60 0075696e 745f6c65 61737438 5f743a74  .uint_least8_t:t
 0a70 28362c31 32293d28 362c3229 00696e74  (6,12)=(6,2).int
 0a80 5f6c6561 73743136 5f743a74 28362c31  _least16_t:t(6,1
 0a90 33293d28 362c3329 0075696e 745f6c65  3)=(6,3).uint_le
 0aa0 61737431 365f743a 7428362c 3134293d  ast16_t:t(6,14)=
 0ab0 28362c34 2900696e 745f6c65 61737433  (6,4).int_least3
 0ac0 325f743a 7428362c 3135293d 28362c35  2_t:t(6,15)=(6,5
 0ad0 29007569 6e745f6c 65617374 33325f74  ).uint_least32_t
 0ae0 3a742836 2c313629 3d28362c 36290069  :t(6,16)=(6,6).i
 0af0 6e745f6c 65617374 36345f74 3a742836  nt_least64_t:t(6
 0b00 2c313729 3d28362c 37290075 696e745f  ,17)=(6,7).uint_
 0b10 6c656173 7436345f 743a7428 362c3138  least64_t:t(6,18
 0b20 293d2836 2c382900 696e745f 66617374  )=(6,8).int_fast
 0b30 385f743a 7428362c 3139293d 28362c31  8_t:t(6,19)=(6,1
 0b40 29007569 6e745f66 61737438 5f743a74  ).uint_fast8_t:t
 0b50 28362c32 30293d28 362c3229 00696e74  (6,20)=(6,2).int
 0b60 5f666173 7431365f 743a7428 362c3231  _fast16_t:t(6,21
 0b70 293d2836 2c332900 75696e74 5f666173  )=(6,3).uint_fas
 0b80 7431365f 743a7428 362c3232 293d2836  t16_t:t(6,22)=(6
 0b90 2c342900 696e745f 66617374 33325f74  ,4).int_fast32_t
 0ba0 3a742836 2c323329 3d28362c 35290075  :t(6,23)=(6,5).u
 0bb0 696e745f 66617374 33325f74 3a742836  int_fast32_t:t(6
 0bc0 2c323429 3d28362c 36290069 6e745f66  ,24)=(6,6).int_f
 0bd0 61737436 345f743a 7428362c 3235293d  ast64_t:t(6,25)=
 0be0 28362c37 29007569 6e745f66 61737436  (6,7).uint_fast6
 0bf0 345f743a 7428362c 3236293d 28362c38  4_t:t(6,26)=(6,8
 0c00 2900696e 746d6178 5f743a74 28362c32  ).intmax_t:t(6,2
 0c10 37293d28 362c3729 0075696e 746d6178  7)=(6,7).uintmax
 0c20 5f743a74 28362c32 38293d28 362c3829  _t:t(6,28)=(6,8)
 0c30 00696e74 5f666172 7074725f 743a7428  .int_farptr_t:t(
 0c40 342c3129 3d28362c 35290075 696e745f  4,1)=(6,5).uint_
 0c50 66617270 74725f74 3a742834 2c32293d  farptr_t:t(4,2)=
 0c60 28362c36 29002f75 73722f6c 69622f61  (6,6)./usr/lib/a
 0c70 76722f69 6e636c75 64652f61 76722f66  vr/include/avr/f
 0c80 7573652e 68005f5f 66757365 5f743a74  use.h.__fuse_t:t
 0c90 28372c31 293d2837 2c32293d 73336c6f  (7,1)=(7,2)=s3lo
 0ca0 773a2830 2c313329 2c302c38 3b686967  w:(0,13),0,8;hig
 0cb0 683a2830 2c313329 2c382c38 3b657874  h:(0,13),8,8;ext
 0cc0 656e6465 643a2830 2c313329 2c31362c  ended:(0,13),16,
 0cd0 383b3b00 2f757372 2f6c6962 2f617672  8;;./usr/lib/avr
 0ce0 2f696e63 6c756465 2f617672 2f70676d  /include/avr/pgm
 0cf0 73706163 652e6800 2f757372 2f6c6962  space.h./usr/lib
 0d00 2f676363 2f617672 2f352e34 2e302f69  /gcc/avr/5.4.0/i
 0d10 6e636c75 64652f73 74646465 662e6800  nclude/stddef.h.
 0d20 73697a65 5f743a74 28392c31 293d2830  size_t:t(9,1)=(0
 0d30 2c342900 2f757372 2f6c6962 2f617672  ,4)./usr/lib/avr
 0d40 2f696e63 6c756465 2f737464 696f2e68  /include/stdio.h
 0d50 002f7573 722f6c69 622f6763 632f6176  ./usr/lib/gcc/av
 0d60 722f352e 342e302f 696e636c 7564652f  r/5.4.0/include/
 0d70 73746461 72672e68 005f5f67 6e75635f  stdarg.h.__gnuc_
 0d80 76615f6c 6973743a 74283131 2c31293d  va_list:t(11,1)=
 0d90 2831312c 32293d2a 28302c34 39290076  (11,2)=*(0,49).v
 0da0 615f6c69 73743a74 2831312c 33293d28  a_list:t(11,3)=(
 0db0 31312c31 29005f5f 66696c65 3a542831  11,1).__file:T(1
 0dc0 302c3129 3d733134 6275663a 2831302c  0,1)=s14buf:(10,
 0dd0 32293d2a 28302c32 292c302c 31363b75  2)=*(0,2),0,16;u
 0de0 6e676574 3a28302c 3133292c 31362c38  nget:(0,13),16,8
 0df0 3b666c61 67733a28 362c3229 2c32342c  ;flags:(6,2),24,
 0e00 383b7369 7a653a28 302c3129 2c33322c  8;size:(0,1),32,
 0e10 31363b6c 656e3a28 302c3129 2c34382c  16;len:(0,1),48,
 0e20 31363b70 75743a28 31302c33 293d2a28  16;put:(10,3)=*(
 0e30 31302c34 293d6628 302c3129 2c36342c  10,4)=f(0,1),64,
 0e40 31363b67 65743a28 31302c35 293d2a28  16;get:(10,5)=*(
 0e50 31302c36 293d6628 302c3129 2c38302c  10,6)=f(0,1),80,
 0e60 31363b75 64617461 3a283130 2c37293d  16;udata:(10,7)=
 0e70 2a28302c 3439292c 39362c31 363b3b00  *(0,49),96,16;;.
 0e80 46494c45 3a742831 302c3829 3d283130  FILE:t(10,8)=(10
 0e90 2c312900 66706f73 5f743a74 2831302c  ,1).fpos_t:t(10,
 0ea0 39293d28 302c3829 006d6169 6e3a4628  9)=(0,8).main:F(
 0eb0 302c3439 29004e65 775f6172 7261793a  0,49).New_array:
 0ec0 28302c35 30293d61 7228302c 3531293d  (0,50)=ar(0,51)=
 0ed0 7228302c 3531293b 303b3031 37373737  r(0,51);0;017777
 0ee0 373b3b30 3b33303b 28362c32 29007365  7;;0;30;(6,2).se
 0ef0 7269616c 2e630075 6172745f 70757463  rial.c.uart_putc
 0f00 6861723a 4628302c 31290063 68723a50  har:F(0,1).chr:P
 0f10 28302c32 29007374 7265616d 3a502830  (0,2).stream:P(0
 0f20 2c353029 3d2a2837 2c382900 75617274  ,50)=*(7,8).uart
 0f30 5f696e69 743a4628 302c3439 29007561  _init:F(0,49).ua
 0f40 72745f67 65746368 61723a46 28302c32  rt_getchar:F(0,2
 0f50 29007561 72745f73 74646f75 743a5328  ).uart_stdout:S(
 0f60 372c3829 00677069 6f2e6300 6770696f  7,8).gpio.c.gpio
 0f70 5f696e69 743a4628 302c3439 29006164  _init:F(0,49).ad
 0f80 632e6300 6164635f 696e6974 3a462830  c.c.adc_init:F(0
 0f90 2c343929 00736574 5f616463 5f76616c  ,49).set_adc_val
 0fa0 75653a46 28302c34 39290076 616c3a50  ue:F(0,49).val:P
 0fb0 28352c32 29006765 745f6164 635f7661  (5,2).get_adc_va
 0fc0 6c75653a 4628352c 32290061 64635f76  lue:F(5,2).adc_v
 0fd0 616c7565 3a532830 2c353029 3d422835  alue:S(0,50)=B(5
 0fe0 2c322900 74696d65 722e6300 74696d65  ,2).timer.c.time
 0ff0 725f696e 69743a46 28302c34 39290069  r_init:F(0,49).i
 1000 32632e63 00693263 5f696e69 743a4628  2c.c.i2c_init:F(
 1010 302c3439 29006932 635f6d65 616e696e  0,49).i2c_meanin
 1020 6766756c 5f737461 7475733a 4628302c  gful_status:F(0,
 1030 34392900 73746174 75733a50 28352c32  49).status:P(5,2
 1040 29006932 635f7374 6172743a 4628302c  ).i2c_start:F(0,
 1050 34392900 6932635f 73746f70 3a462830  49).i2c_stop:F(0
 1060 2c343929 00693263 5f676574 5f737461  ,49).i2c_get_sta
 1070 7475733a 4628352c 32290069 32635f78  tus:F(5,2).i2c_x
 1080 6d69745f 61646472 3a462830 2c343929  mit_addr:F(0,49)
 1090 00616464 72657373 3a502835 2c322900  .address:P(5,2).
 10a0 72773a50 28352c32 29006932 635f786d  rw:P(5,2).i2c_xm
 10b0 69745f62 7974653a 4628302c 34392900  it_byte:F(0,49).
 10c0 64617461 3a502835 2c322900 6932635f  data:P(5,2).i2c_
 10d0 72656164 5f41434b 3a462835 2c322900  read_ACK:F(5,2).
 10e0 6932635f 72656164 5f4e414b 3a462835  i2c_read_NAK:F(5
 10f0 2c322900 65657072 6f6d5f77 6169745f  ,2).eeprom_wait_
 1100 756e7469 6c5f7772 6974655f 636f6d70  until_write_comp
 1110 6c657465 3a462830 2c343929 00656570  lete:F(0,49).eep
 1120 726f6d5f 72656164 5f627974 653a4628  rom_read_byte:F(
 1130 352c3229 00616464 723a5028 352c3229  5,2).addr:P(5,2)
 1140 00656570 726f6d5f 77726974 655f6279  .eeprom_write_by
 1150 74653a46 28302c34 39290065 6570726f  te:F(0,49).eepro
 1160 6d5f7772 6974655f 70616765 3a462830  m_write_page:F(0
 1170 2c343929 00646174 613a5028 302c3530  ,49).data:P(0,50
 1180 293d2a28 352c3229 00636861 72646174  )=*(5,2).chardat
 1190 613a7228 352c3229 00656570 726f6d5f  a:r(5,2).eeprom_
 11a0 73657175 656e7469 616c5f72 6561643a  sequential_read:
 11b0 4628302c 34392900 496e6974 69616c5f  F(0,49).Initial_
 11c0 61646472 3a502835 2c322900 6c656e3a  addr:P(5,2).len:
 11d0 5028352c 32290069 3a722830 2c312900  P(5,2).i:r(0,1).
Contents of section .comment:
 0000 4743433a 2028474e 55292035 2e342e30  GCC: (GNU) 5.4.0
 0010 00                                   .               
Contents of section .note.gnu.avr.deviceinfo:
 0000 04000000 2d000000 01000000 41565200  ....-.......AVR.
 0010 00000000 00800000 00010000 00080000  ................
 0020 00000000 00040000 08000000 01000000  ................
 0030 0061746d 65676133 32387000 00000000  .atmega328p.....
Contents of section .debug_info:
 0000 f0050000 02000000 00000401 00000000  ................
 0010 00000000 020f0000 00010803 17000000  ................
 0020 02070414 00000005 1b000000 ff030006  ................
 0030 20000000 00002200 00000105 03000081   .....".........
 0040 00072900 00000000 14000000 010503c6  ..).............
 0050 00800008 2e000000 00001400 00000105  ................
 0060 03c00080 00093500 00000000 14000000  ......5.........
 0070 010503c1 0080000a 3c000000 00001400  ........<.......
 0080 00000105 03c20080 000b4300 00000000  ..........C.....
 0090 1b000000 010503c4 0080000c 49000000  ............I...
 00a0 00001400 00000105 03bd0080 000d4f00  ..............O.
 00b0 00000000 14000000 010503b8 0080000e  ................
 00c0 54000000 00001400 00000105 03bc0080  T...............
 00d0 000f5900 00000000 14000000 010503b9  ..Y.............
 00e0 00800010 5e000000 00001400 00000105  ....^...........
 00f0 03bb0080 00116300 00000000 14000000  ......c.........
 0100 010503ba 00800012 68000000 00001400  ........h.......
 0110 00000105 036f0080 00136f00 00000000  .....o....o.....
 0120 14000000 01050336 00800014 75000000  .......6....u...
 0130 00001400 00000105 03800080 00157c00  ..............|.
 0140 00000000 14000000 01050381 00800016  ................
 0150 83000000 00001400 00000105 03820080  ................
 0160 00178a00 00000000 1b000000 01050384  ................
 0170 00800018 90000000 00001b00 00000105  ................
 0180 03880080 00199600 00000000 1b000000  ................
 0190 0105038a 0080001a 9c000000 00001b00  ................
 01a0 00000105 03860080 001ba100 00000000  ................
 01b0 14000000 01050343 0080001c a7000000  .......C........
 01c0 00001400 00000105 03700080 001dae00  .........p......
 01d0 00000000 14000000 01050337 0080001e  ...........7....
 01e0 b4000000 00001400 00000105 03b00080  ................
 01f0 001fbb00 00000000 14000000 010503b1  ................
 0200 00800020 c2000000 00001400 00000105  ... ............
 0210 03b20080 0021c800 00000000 14000000  .....!..........
 0220 010503b4 00800022 ce000000 00001400  ......."........
 0230 00000105 03b30080 0023d400 00000000  .........#......
 0240 14000000 010503b6 00800024 d9000000  ...........$....
 0250 00001400 00000105 03430080 0025df00  .........C...%..
 0260 00000000 14000000 0105037c 00800026  ...........|...&
 0270 e5000000 00001b00 00000105 03780080  .............x..
 0280 0027e900 00000000 14000000 0105037a  .'.............z
 0290 00800028 f0000000 00001400 00000105  ...(............
 02a0 037b0080 0029f700 00000000 14000000  .{...)..........
 02b0 0105037e 0080002a fd000000 00001400  ...~...*........
 02c0 00000105 03500080 002b0201 00000000  .....P...+......
 02d0 14000000 0105037f 0080002c 08010000  ...........,....
 02e0 00001400 00000105 03250080 002d0e01  .........%...-..
 02f0 00000000 14000000 01050324 0080002e  ...........$....
 0300 13010000 00001400 00000105 03230080  .............#..
 0310 002f1801 00000000 14000000 01050328  ./.............(
 0320 00800030 1e010000 00001400 00000105  ...0............
 0330 03270080 00312301 00000000 14000000  .'...1#.........
 0340 01050326 00800032 28010000 00001400  ...&...2(.......
 0350 00000105 032b0080 00332e01 00000000  .....+...3......
 0360 14000000 0105032a 00800034 33010000  .......*...43...
 0370 00001400 00000105 03290080 00353801  .........)...58.
 0380 00000000 14000000 01050348 00800036  ...........H...6
 0390 3e010000 00001400 00000105 03470080  >............G..
 03a0 00374401 00000000 14000000 01050346  .7D............F
 03b0 00800038 4a010000 00001400 00000105  ...8J...........
 03c0 03450080 00395101 00000000 14000000  .E...9Q.........
 03d0 01050344 0080003a 58010000 00001400  ...D...:X.......
 03e0 00000105 036e0080 003b5f01 00000000  .....n...;_.....
 03f0 14000000 01050335 0080003c 65010000  .......5...<e...
 0400 00001400 00000105 03430080 003d6b01  .........C...=k.
 0410 00000000 14000000 01050369 0080003e  ...........i...>
 0420 71010000 00001400 00000105 033d0080  q............=..
 0430 003f7701 00000000 14000000 0105033c  .?w............<
 0440 00800040 7c010000 00001400 00000105  ...@|...........
 0450 03680080 00418201 00000000 14000000  .h...A..........
 0460 0105036d 00800042 89010000 00001400  ...m...B........
 0470 00000105 036c0080 00439001 00000000  .....l...C......
 0480 14000000 0105036b 00800044 97010000  .......k...D....
 0490 00001400 00000105 033b0080 00459d01  .........;...E..
 04a0 00000000 14000000 0105034e 00800046  ...........N...F
 04b0 a2010000 00001400 00000105 034d0080  .............M..
 04c0 0047a701 00000000 14000000 0105034c  .G.............L
 04d0 00800048 ac010000 00001400 00000105  ...H............
 04e0 03600080 0049b301 00000000 14000000  .`...I..........
 04f0 01050364 0080004a b7010000 00001400  ...d...J........
 0500 00000105 03660080 004bbe01 00000000  .....f...K......
 0510 14000000 01050361 0080004c c4010000  .......a...L....
 0520 00001400 00000105 035f0080 004dc901  ........._...M..
 0530 00000000 1b000000 0105035d 0080004e  ...........]...N
 0540 cc010000 00001400 00000105 03570080  .............W..
 0550 004fd301 00000000 14000000 01050355  .O.............U
 0560 00800050 d9010000 00001400 00000105  ...P............
 0570 03540080 0051df01 00000000 14000000  .T...Q..........
 0580 01050353 00800052 e4010000 00001400  ...S...R........
 0590 00000105 034b0080 0053eb01 00000000  .....K...S......
 05a0 14000000 0105034a 00800054 f2010000  .......J...T....
 05b0 00001400 00000105 033e0080 0055f901  .........>...U..
 05c0 00000000 1b000000 01050341 00800056  ...........A...V
 05d0 fe010000 00001400 00000105 03400080  .............@..
 05e0 00570302 00000000 14000000 0105033f  .W.............?
 05f0 00800000                             ....            
Contents of section .debug_abbrev:
 0000 01110125 0e100600 00022400 030e0b0b  ...%......$.....
 0010 3e0b0000 03240003 0e0b0b3e 0b000004  >....$.....>....
 0020 01014913 00000521 0049132f 05000006  ..I....!.I./....
 0030 3400030e 3a0b3b0b 49133f0c 020a0000  4...:.;.I.?.....
 0040 07340003 0e3a0b3b 0b49133f 0c020a00  .4...:.;.I.?....
 0050 00083400 030e3a0b 3b0b4913 3f0c020a  ..4...:.;.I.?...
 0060 00000934 00030e3a 0b3b0b49 133f0c02  ...4...:.;.I.?..
 0070 0a00000a 3400030e 3a0b3b0b 49133f0c  ....4...:.;.I.?.
 0080 020a0000 0b340003 0e3a0b3b 0b49133f  .....4...:.;.I.?
 0090 0c020a00 000c3400 030e3a0b 3b0b4913  ......4...:.;.I.
 00a0 3f0c020a 00000d34 00030e3a 0b3b0b49  ?......4...:.;.I
 00b0 133f0c02 0a00000e 3400030e 3a0b3b0b  .?......4...:.;.
 00c0 49133f0c 020a0000 0f340003 0e3a0b3b  I.?......4...:.;
 00d0 0b49133f 0c020a00 00103400 030e3a0b  .I.?......4...:.
 00e0 3b0b4913 3f0c020a 00001134 00030e3a  ;.I.?......4...:
 00f0 0b3b0b49 133f0c02 0a000012 3400030e  .;.I.?......4...
 0100 3a0b3b0b 49133f0c 020a0000 13340003  :.;.I.?......4..
 0110 0e3a0b3b 0b49133f 0c020a00 00143400  .:.;.I.?......4.
 0120 030e3a0b 3b0b4913 3f0c020a 00001534  ..:.;.I.?......4
 0130 00030e3a 0b3b0b49 133f0c02 0a000016  ...:.;.I.?......
 0140 3400030e 3a0b3b0b 49133f0c 020a0000  4...:.;.I.?.....
 0150 17340003 0e3a0b3b 0b49133f 0c020a00  .4...:.;.I.?....
 0160 00183400 030e3a0b 3b0b4913 3f0c020a  ..4...:.;.I.?...
 0170 00001934 00030e3a 0b3b0b49 133f0c02  ...4...:.;.I.?..
 0180 0a00001a 3400030e 3a0b3b0b 49133f0c  ....4...:.;.I.?.
 0190 020a0000 1b340003 0e3a0b3b 0b49133f  .....4...:.;.I.?
 01a0 0c020a00 001c3400 030e3a0b 3b0b4913  ......4...:.;.I.
 01b0 3f0c020a 00001d34 00030e3a 0b3b0b49  ?......4...:.;.I
 01c0 133f0c02 0a00001e 3400030e 3a0b3b0b  .?......4...:.;.
 01d0 49133f0c 020a0000 1f340003 0e3a0b3b  I.?......4...:.;
 01e0 0b49133f 0c020a00 00203400 030e3a0b  .I.?..... 4...:.
 01f0 3b0b4913 3f0c020a 00002134 00030e3a  ;.I.?.....!4...:
 0200 0b3b0b49 133f0c02 0a000022 3400030e  .;.I.?....."4...
 0210 3a0b3b0b 49133f0c 020a0000 23340003  :.;.I.?.....#4..
 0220 0e3a0b3b 0b49133f 0c020a00 00243400  .:.;.I.?.....$4.
 0230 030e3a0b 3b0b4913 3f0c020a 00002534  ..:.;.I.?.....%4
 0240 00030e3a 0b3b0b49 133f0c02 0a000026  ...:.;.I.?.....&
 0250 3400030e 3a0b3b0b 49133f0c 020a0000  4...:.;.I.?.....
 0260 27340003 0e3a0b3b 0b49133f 0c020a00  '4...:.;.I.?....
 0270 00283400 030e3a0b 3b0b4913 3f0c020a  .(4...:.;.I.?...
 0280 00002934 00030e3a 0b3b0b49 133f0c02  ..)4...:.;.I.?..
 0290 0a00002a 3400030e 3a0b3b0b 49133f0c  ...*4...:.;.I.?.
 02a0 020a0000 2b340003 0e3a0b3b 0b49133f  ....+4...:.;.I.?
 02b0 0c020a00 002c3400 030e3a0b 3b0b4913  .....,4...:.;.I.
 02c0 3f0c020a 00002d34 00030e3a 0b3b0b49  ?.....-4...:.;.I
 02d0 133f0c02 0a00002e 3400030e 3a0b3b0b  .?......4...:.;.
 02e0 49133f0c 020a0000 2f340003 0e3a0b3b  I.?...../4...:.;
 02f0 0b49133f 0c020a00 00303400 030e3a0b  .I.?.....04...:.
 0300 3b0b4913 3f0c020a 00003134 00030e3a  ;.I.?.....14...:
 0310 0b3b0b49 133f0c02 0a000032 3400030e  .;.I.?.....24...
 0320 3a0b3b0b 49133f0c 020a0000 33340003  :.;.I.?.....34..
 0330 0e3a0b3b 0b49133f 0c020a00 00343400  .:.;.I.?.....44.
 0340 030e3a0b 3b0b4913 3f0c020a 00003534  ..:.;.I.?.....54
 0350 00030e3a 0b3b0b49 133f0c02 0a000036  ...:.;.I.?.....6
 0360 3400030e 3a0b3b0b 49133f0c 020a0000  4...:.;.I.?.....
 0370 37340003 0e3a0b3b 0b49133f 0c020a00  74...:.;.I.?....
 0380 00383400 030e3a0b 3b0b4913 3f0c020a  .84...:.;.I.?...
 0390 00003934 00030e3a 0b3b0b49 133f0c02  ..94...:.;.I.?..
 03a0 0a00003a 3400030e 3a0b3b0b 49133f0c  ...:4...:.;.I.?.
 03b0 020a0000 3b340003 0e3a0b3b 0b49133f  ....;4...:.;.I.?
 03c0 0c020a00 003c3400 030e3a0b 3b0b4913  .....<4...:.;.I.
 03d0 3f0c020a 00003d34 00030e3a 0b3b0b49  ?.....=4...:.;.I
 03e0 133f0c02 0a00003e 3400030e 3a0b3b0b  .?.....>4...:.;.
 03f0 49133f0c 020a0000 3f340003 0e3a0b3b  I.?.....?4...:.;
 0400 0b49133f 0c020a00 00403400 030e3a0b  .I.?.....@4...:.
 0410 3b0b4913 3f0c020a 00004134 00030e3a  ;.I.?.....A4...:
 0420 0b3b0b49 133f0c02 0a000042 3400030e  .;.I.?.....B4...
 0430 3a0b3b0b 49133f0c 020a0000 43340003  :.;.I.?.....C4..
 0440 0e3a0b3b 0b49133f 0c020a00 00443400  .:.;.I.?.....D4.
 0450 030e3a0b 3b0b4913 3f0c020a 00004534  ..:.;.I.?.....E4
 0460 00030e3a 0b3b0b49 133f0c02 0a000046  ...:.;.I.?.....F
 0470 3400030e 3a0b3b0b 49133f0c 020a0000  4...:.;.I.?.....
 0480 47340003 0e3a0b3b 0b49133f 0c020a00  G4...:.;.I.?....
 0490 00483400 030e3a0b 3b0b4913 3f0c020a  .H4...:.;.I.?...
 04a0 00004934 00030e3a 0b3b0b49 133f0c02  ..I4...:.;.I.?..
 04b0 0a00004a 3400030e 3a0b3b0b 49133f0c  ...J4...:.;.I.?.
 04c0 020a0000 4b340003 0e3a0b3b 0b49133f  ....K4...:.;.I.?
 04d0 0c020a00 004c3400 030e3a0b 3b0b4913  .....L4...:.;.I.
 04e0 3f0c020a 00004d34 00030e3a 0b3b0b49  ?.....M4...:.;.I
 04f0 133f0c02 0a00004e 3400030e 3a0b3b0b  .?.....N4...:.;.
 0500 49133f0c 020a0000 4f340003 0e3a0b3b  I.?.....O4...:.;
 0510 0b49133f 0c020a00 00503400 030e3a0b  .I.?.....P4...:.
 0520 3b0b4913 3f0c020a 00005134 00030e3a  ;.I.?.....Q4...:
 0530 0b3b0b49 133f0c02 0a000052 3400030e  .;.I.?.....R4...
 0540 3a0b3b0b 49133f0c 020a0000 53340003  :.;.I.?.....S4..
 0550 0e3a0b3b 0b49133f 0c020a00 00543400  .:.;.I.?.....T4.
 0560 030e3a0b 3b0b4913 3f0c020a 00005534  ..:.;.I.?.....U4
 0570 00030e3a 0b3b0b49 133f0c02 0a000056  ...:.;.I.?.....V
 0580 3400030e 3a0b3b0b 49133f0c 020a0000  4...:.;.I.?.....
 0590 57340003 0e3a0b3b 0b49133f 0c020a00  W4...:.;.I.?....
 05a0 0000                                 ..              
Contents of section .debug_line:
 0000 16000000 02001000 00000201 fb0e0a00  ................
 0010 01010101 00000001 0000               ..........      
Contents of section .debug_str:
 0000 6176722d 6c696263 20322e30 2e300075  avr-libc 2.0.0.u
 0010 696e7438 5f740075 696e7431 365f7400  int8_t.uint16_t.
 0020 5f5f6565 70726f6d 00554452 30005543  __eeprom.UDR0.UC
 0030 53523041 00554353 52304200 55435352  SR0A.UCSR0B.UCSR
 0040 30430055 42525230 00545741 4d520054  0C.UBRR0.TWAMR.T
 0050 57425200 54574352 00545753 52005457  WBR.TWCR.TWSR.TW
 0060 44520054 57415200 54494d53 4b310054  DR.TWAR.TIMSK1.T
 0070 49465231 00544343 52314100 54434352  IFR1.TCCR1A.TCCR
 0080 31420054 43435231 43005443 4e543100  1B.TCCR1C.TCNT1.
 0090 4f435231 41004f43 52314200 49435231  OCR1A.OCR1B.ICR1
 00a0 00475443 43520054 494d534b 32005449  .GTCCR.TIMSK2.TI
 00b0 46523200 54434352 32410054 43435232  FR2.TCCR2A.TCCR2
 00c0 42005443 4e543200 4f435232 42004f43  B.TCNT2.OCR2B.OC
 00d0 52324100 41535352 00475443 43520041  R2A.ASSR.GTCCR.A
 00e0 444d5558 00414443 00414443 53524100  DMUX.ADC.ADCSRA.
 00f0 41444353 52420044 49445230 00414353  ADCSRB.DIDR0.ACS
 0100 52004449 44523100 504f5254 42004444  R.DIDR1.PORTB.DD
 0110 52420050 494e4200 504f5254 43004444  RB.PINB.PORTC.DD
 0120 52430050 494e4300 504f5254 44004444  RC.PINC.PORTD.DD
 0130 52440050 494e4400 4f435230 42004f43  RD.PIND.OCR0B.OC
 0140 52304100 54434e54 30005443 43523042  R0A.TCNT0.TCCR0B
 0150 00544343 52304100 54494d53 4b300054  .TCCR0A.TIMSK0.T
 0160 49465230 00475443 43520045 49435241  IFR0.GTCCR.EICRA
 0170 0045494d 534b0045 49465200 50434943  .EIMSK.EIFR.PCIC
 0180 52005043 4d534b32 0050434d 534b3100  R.PCMSK2.PCMSK1.
 0190 50434d53 4b300050 43494652 00535044  PCMSK0.PCIFR.SPD
 01a0 52005350 53520053 50435200 57445443  R.SPSR.SPCR.WDTC
 01b0 53520050 5252004f 53434341 4c00434c  SR.PRR.OSCCAL.CL
 01c0 4b505200 53524547 00535000 53504d43  KPR.SREG.SP.SPMC
 01d0 5352004d 43554352 004d4355 53520053  SR.MCUCR.MCUSR.S
 01e0 4d435200 4750494f 52320047 50494f52  MCR.GPIOR2.GPIOR
 01f0 31004750 494f5230 00454541 52004545  1.GPIOR0.EEAR.EE
 0200 44520045 45435200                    DR.EECR.        

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 1b 01 	jmp	0x236	; 0x236 <__ctors_end>
   4:	0c 94 38 01 	jmp	0x270	; 0x270 <__bad_interrupt>
   8:	0c 94 38 01 	jmp	0x270	; 0x270 <__bad_interrupt>
   c:	0c 94 38 01 	jmp	0x270	; 0x270 <__bad_interrupt>
  10:	0c 94 38 01 	jmp	0x270	; 0x270 <__bad_interrupt>
  14:	0c 94 38 01 	jmp	0x270	; 0x270 <__bad_interrupt>
  18:	0c 94 38 01 	jmp	0x270	; 0x270 <__bad_interrupt>
  1c:	0c 94 38 01 	jmp	0x270	; 0x270 <__bad_interrupt>
  20:	0c 94 38 01 	jmp	0x270	; 0x270 <__bad_interrupt>
  24:	0c 94 38 01 	jmp	0x270	; 0x270 <__bad_interrupt>
  28:	0c 94 38 01 	jmp	0x270	; 0x270 <__bad_interrupt>
  2c:	0c 94 38 01 	jmp	0x270	; 0x270 <__bad_interrupt>
  30:	0c 94 38 01 	jmp	0x270	; 0x270 <__bad_interrupt>
  34:	0c 94 38 01 	jmp	0x270	; 0x270 <__bad_interrupt>
  38:	0c 94 38 01 	jmp	0x270	; 0x270 <__bad_interrupt>
  3c:	0c 94 38 01 	jmp	0x270	; 0x270 <__bad_interrupt>
  40:	0c 94 38 01 	jmp	0x270	; 0x270 <__bad_interrupt>
  44:	0c 94 38 01 	jmp	0x270	; 0x270 <__bad_interrupt>
  48:	0c 94 38 01 	jmp	0x270	; 0x270 <__bad_interrupt>
  4c:	0c 94 38 01 	jmp	0x270	; 0x270 <__bad_interrupt>
  50:	0c 94 38 01 	jmp	0x270	; 0x270 <__bad_interrupt>
  54:	0c 94 38 01 	jmp	0x270	; 0x270 <__bad_interrupt>
  58:	0c 94 38 01 	jmp	0x270	; 0x270 <__bad_interrupt>
  5c:	0c 94 38 01 	jmp	0x270	; 0x270 <__bad_interrupt>
  60:	0c 94 38 01 	jmp	0x270	; 0x270 <__bad_interrupt>
  64:	0c 94 38 01 	jmp	0x270	; 0x270 <__bad_interrupt>
  68:	aa 01       	movw	r20, r20
  6a:	90 01       	movw	r18, r0
  6c:	90 01       	movw	r18, r0
  6e:	90 01       	movw	r18, r0
  70:	90 01       	movw	r18, r0
  72:	90 01       	movw	r18, r0
  74:	90 01       	movw	r18, r0
  76:	90 01       	movw	r18, r0
  78:	b3 01       	movw	r22, r6
  7a:	90 01       	movw	r18, r0
  7c:	90 01       	movw	r18, r0
  7e:	90 01       	movw	r18, r0
  80:	90 01       	movw	r18, r0
  82:	90 01       	movw	r18, r0
  84:	90 01       	movw	r18, r0
  86:	90 01       	movw	r18, r0
  88:	bc 01       	movw	r22, r24
  8a:	90 01       	movw	r18, r0
  8c:	90 01       	movw	r18, r0
  8e:	90 01       	movw	r18, r0
  90:	90 01       	movw	r18, r0
  92:	90 01       	movw	r18, r0
  94:	90 01       	movw	r18, r0
  96:	90 01       	movw	r18, r0
  98:	c5 01       	movw	r24, r10
  9a:	90 01       	movw	r18, r0
  9c:	90 01       	movw	r18, r0
  9e:	90 01       	movw	r18, r0
  a0:	90 01       	movw	r18, r0
  a2:	90 01       	movw	r18, r0
  a4:	90 01       	movw	r18, r0
  a6:	90 01       	movw	r18, r0
  a8:	ce 01       	movw	r24, r28
  aa:	90 01       	movw	r18, r0
  ac:	90 01       	movw	r18, r0
  ae:	90 01       	movw	r18, r0
  b0:	90 01       	movw	r18, r0
  b2:	90 01       	movw	r18, r0
  b4:	90 01       	movw	r18, r0
  b6:	90 01       	movw	r18, r0
  b8:	d7 01       	movw	r26, r14
  ba:	90 01       	movw	r18, r0
  bc:	90 01       	movw	r18, r0
  be:	90 01       	movw	r18, r0
  c0:	90 01       	movw	r18, r0
  c2:	90 01       	movw	r18, r0
  c4:	90 01       	movw	r18, r0
  c6:	90 01       	movw	r18, r0
  c8:	e0 01       	movw	r28, r0
  ca:	90 01       	movw	r18, r0
  cc:	90 01       	movw	r18, r0
  ce:	90 01       	movw	r18, r0
  d0:	90 01       	movw	r18, r0
  d2:	90 01       	movw	r18, r0
  d4:	90 01       	movw	r18, r0
  d6:	90 01       	movw	r18, r0
  d8:	e9 01       	movw	r28, r18
  da:	90 01       	movw	r18, r0
  dc:	90 01       	movw	r18, r0
  de:	90 01       	movw	r18, r0
  e0:	90 01       	movw	r18, r0
  e2:	90 01       	movw	r18, r0
  e4:	90 01       	movw	r18, r0
  e6:	90 01       	movw	r18, r0
  e8:	f2 01       	movw	r30, r4
  ea:	90 01       	movw	r18, r0
  ec:	90 01       	movw	r18, r0
  ee:	90 01       	movw	r18, r0
  f0:	90 01       	movw	r18, r0
  f2:	90 01       	movw	r18, r0
  f4:	90 01       	movw	r18, r0
  f6:	90 01       	movw	r18, r0
  f8:	fb 01       	movw	r30, r22
  fa:	90 01       	movw	r18, r0
  fc:	90 01       	movw	r18, r0
  fe:	90 01       	movw	r18, r0
 100:	90 01       	movw	r18, r0
 102:	90 01       	movw	r18, r0
 104:	90 01       	movw	r18, r0
 106:	90 01       	movw	r18, r0
 108:	a1 01       	movw	r20, r2

0000010a <__trampolines_end>:
 10a:	25 58       	subi	r18, 0x85	; 133
 10c:	20 00       	.word	0x0020	; ????

0000010e <__c.2313>:
 10e:	0a 20 4d 79 20 48 45 58 20 20 73 74 72 69 6e 67     . My HEX  string
 11e:	20 20 0a 00                                           ..

00000122 <__c.2308>:
 122:	25 63 20 20 00                                      %c  .

00000127 <__c.2305>:
 127:	0a 20 4d 79 20 73 74 72 69 6e 67 20 69 6e 20 20     . My string in  
 137:	41 53 43 49 49 20 63 68 61 72 20 0a 00              ASCII char ..

00000144 <__c.2290>:
 144:	4e 6f 20 6f 66 20 70 61 67 65 73 3d 20 25 64 0a     No of pages= %d.
	...

00000155 <__c.2288>:
 155:	65 78 63 65 73 73 20 63 68 61 72 20 28 6f 75 74     excess char (out
 165:	20 6f 66 20 62 6f 75 6e 64 72 79 20 63 68 61 72      of boundry char
 175:	73 29 20 3d 20 25 64 0a 00                          s) = %d..

0000017e <__c.2286>:
 17e:	73 69 7a 65 20 6f 66 20 6e 65 77 5f 61 72 72 61     size of new_arra
 18e:	79 3d 20 25 64 0a 00                                y= %d..

00000195 <__c.2292>:
 195:	4e 2f 41 20 25 30 32 58 0a 00                       N/A %02X..

0000019f <__c.2289>:
 19f:	4d 52 20 44 41 54 41 2b 52 2c 20 4e 41 4b 0a 00     MR DATA+R, NAK..

000001af <__c.2286>:
 1af:	4d 52 20 44 41 54 41 2b 52 2c 20 41 43 4b 0a 00     MR DATA+R, ACK..

000001bf <__c.2283>:
 1bf:	4d 52 20 53 4c 41 2b 52 2c 20 4e 41 4b 0a 00        MR SLA+R, NAK..

000001ce <__c.2280>:
 1ce:	4d 52 20 53 4c 41 2b 52 2c 20 41 43 4b 0a 00        MR SLA+R, ACK..

000001dd <__c.2277>:
 1dd:	4d 54 20 44 41 54 41 2b 57 2c 20 4e 41 4b 0a 00     MT DATA+W, NAK..

000001ed <__c.2274>:
 1ed:	4d 54 20 44 41 54 41 2b 57 2c 20 41 43 4b 0a 00     MT DATA+W, ACK..

000001fd <__c.2271>:
 1fd:	4d 54 20 53 4c 41 2b 57 2c 20 4e 41 4b 0a 00        MT SLA+W, NAK..

0000020c <__c.2268>:
 20c:	4d 54 20 53 4c 41 2b 57 2c 20 41 43 4b 0a 00        MT SLA+W, ACK..

0000021b <__c.2265>:
 21b:	4e 4f 41 52 42 2f 4e 41 4b 0a 00                    NOARB/NAK..

00000226 <__c.2262>:
 226:	52 45 53 54 41 52 54 0a 00                          RESTART..

0000022f <__c.2258>:
 22f:	53 54 41 52 54 0a 00                                START..

00000236 <__ctors_end>:
 236:	11 24       	eor	r1, r1
 238:	1f be       	out	0x3f, r1	; 63
 23a:	cf ef       	ldi	r28, 0xFF	; 255
 23c:	d8 e0       	ldi	r29, 0x08	; 8
 23e:	de bf       	out	0x3e, r29	; 62
 240:	cd bf       	out	0x3d, r28	; 61

00000242 <__do_copy_data>:
 242:	11 e0       	ldi	r17, 0x01	; 1
 244:	a0 e0       	ldi	r26, 0x00	; 0
 246:	b1 e0       	ldi	r27, 0x01	; 1
 248:	ec e2       	ldi	r30, 0x2C	; 44
 24a:	fe e0       	ldi	r31, 0x0E	; 14
 24c:	02 c0       	rjmp	.+4      	; 0x252 <__do_copy_data+0x10>
 24e:	05 90       	lpm	r0, Z+
 250:	0d 92       	st	X+, r0
 252:	ae 32       	cpi	r26, 0x2E	; 46
 254:	b1 07       	cpc	r27, r17
 256:	d9 f7       	brne	.-10     	; 0x24e <__do_copy_data+0xc>

00000258 <__do_clear_bss>:
 258:	21 e0       	ldi	r18, 0x01	; 1
 25a:	ae e2       	ldi	r26, 0x2E	; 46
 25c:	b1 e0       	ldi	r27, 0x01	; 1
 25e:	01 c0       	rjmp	.+2      	; 0x262 <.do_clear_bss_start>

00000260 <.do_clear_bss_loop>:
 260:	1d 92       	st	X+, r1

00000262 <.do_clear_bss_start>:
 262:	a5 33       	cpi	r26, 0x35	; 53
 264:	b2 07       	cpc	r27, r18
 266:	e1 f7       	brne	.-8      	; 0x260 <.do_clear_bss_loop>
 268:	0e 94 7d 03 	call	0x6fa	; 0x6fa <main>
 26c:	0c 94 14 07 	jmp	0xe28	; 0xe28 <_exit>

00000270 <__bad_interrupt>:
 270:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000274 <uart_putchar>:
	UCSR0C = (1 << UCSZ01 | 1 << UCSZ00);

	stdout = &uart_stdout;
}

int uart_putchar(char chr, FILE *stream) {
 274:	cf 93       	push	r28
 276:	c8 2f       	mov	r28, r24
	if (chr == '\n') {
 278:	8a 30       	cpi	r24, 0x0A	; 10
 27a:	51 f0       	breq	.+20     	; 0x290 <uart_putchar+0x1c>
		uart_putchar('\r', NULL);
	}
	while (!(UCSR0A & (1 << UDRE0)))
 27c:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
 280:	85 ff       	sbrs	r24, 5
 282:	fc cf       	rjmp	.-8      	; 0x27c <uart_putchar+0x8>
		;
	UDR0 = chr;
 284:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
	return 0;
}
 288:	80 e0       	ldi	r24, 0x00	; 0
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	cf 91       	pop	r28
 28e:	08 95       	ret
	stdout = &uart_stdout;
}

int uart_putchar(char chr, FILE *stream) {
	if (chr == '\n') {
		uart_putchar('\r', NULL);
 290:	60 e0       	ldi	r22, 0x00	; 0
 292:	70 e0       	ldi	r23, 0x00	; 0
 294:	8d e0       	ldi	r24, 0x0D	; 13
 296:	0e 94 3a 01 	call	0x274	; 0x274 <uart_putchar>
 29a:	f0 cf       	rjmp	.-32     	; 0x27c <uart_putchar+0x8>

0000029c <uart_init>:
#include "serial.h"

static FILE uart_stdout = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);

void uart_init(void) {
	UBRR0H = (unsigned char)(UBRR >> 8);
 29c:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
	UBRR0L = (unsigned char)(UBRR);
 2a0:	89 e1       	ldi	r24, 0x19	; 25
 2a2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
	UCSR0A = 0;
 2a6:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
	UCSR0B = (1 << TXEN0 | 1 << RXEN0);
 2aa:	88 e1       	ldi	r24, 0x18	; 24
 2ac:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
	UCSR0C = (1 << UCSZ01 | 1 << UCSZ00);
 2b0:	86 e0       	ldi	r24, 0x06	; 6
 2b2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>

	stdout = &uart_stdout;
 2b6:	80 e0       	ldi	r24, 0x00	; 0
 2b8:	91 e0       	ldi	r25, 0x01	; 1
 2ba:	90 93 32 01 	sts	0x0132, r25	; 0x800132 <__iob+0x3>
 2be:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <__iob+0x2>
 2c2:	08 95       	ret

000002c4 <uart_getchar>:
	UDR0 = chr;
	return 0;
}

char uart_getchar(void) {
	while (!(UCSR0A & (1 << RXC0)))
 2c4:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
 2c8:	87 ff       	sbrs	r24, 7
 2ca:	fc cf       	rjmp	.-8      	; 0x2c4 <uart_getchar>
		;
	return UDR0;
 2cc:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
}
 2d0:	08 95       	ret

000002d2 <gpio_init>:
#include <avr/pgmspace.h>
#include <stdio.h>

#include "gpio.h"

void gpio_init() {
 2d2:	08 95       	ret

000002d4 <adc_init>:
	/*
	 * - Reference voltage = AVcc (5V) (REFS[1:0]=0b01)
	 * - Left adjusted data (ADLAR=1)
	 * - Using channel ADC0 (MUX[3:0]=0b0000)
	 */
	ADMUX = (1 << REFS0 | 1 << ADLAR);
 2d4:	ec e7       	ldi	r30, 0x7C	; 124
 2d6:	f0 e0       	ldi	r31, 0x00	; 0
 2d8:	80 e6       	ldi	r24, 0x60	; 96
 2da:	80 83       	st	Z, r24
	ADMUX |= (0 << MUX3 | 0 << MUX2 | 0 << MUX1 | 0 << MUX0);
 2dc:	80 81       	ld	r24, Z
 2de:	80 83       	st	Z, r24
	/*
	 * - ADC enabled
	 * - Interrupts enabled
	 * - Prescaler set to 8 (ADPS[2:0]=0b011)
	 */
	ADCSRA = (1 << ADEN | 1 << ADIE | 0 << ADPS2 | 1 << ADPS1 | 1 << ADPS0);
 2e0:	8b e8       	ldi	r24, 0x8B	; 139
 2e2:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
 2e6:	08 95       	ret

000002e8 <set_adc_value>:
}

void set_adc_value(uint8_t val) {
	adc_value = val;
 2e8:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <__data_end>
 2ec:	08 95       	ret

000002ee <get_adc_value>:
}

uint8_t get_adc_value(void) {
	return adc_value;
 2ee:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <__data_end>
}
 2f2:	08 95       	ret

000002f4 <timer_init>:
#include <avr/io.h>

#include "timer.h"

void timer_init() {
 2f4:	08 95       	ret

000002f6 <i2c_init>:

	/* TWSR – TWI Status Register
	   TWPS1  TWPS0   Prescaler Value
       0      0         1
    */
	TWSR |= (0 << TWPS1); // setting presclar value to 4
 2f6:	e9 eb       	ldi	r30, 0xB9	; 185
 2f8:	f0 e0       	ldi	r31, 0x00	; 0
 2fa:	80 81       	ld	r24, Z
 2fc:	80 83       	st	Z, r24
	TWSR |= (1 << TWPS0); // setting bit rate
 2fe:	80 81       	ld	r24, Z
 300:	81 60       	ori	r24, 0x01	; 1
 302:	80 83       	st	Z, r24
	//TWSR = 0x00;
	TWBR = 0x12; //set SCL to 100KHz; from calculating;  SCL frequency = CPU Clock frequency/16+ 2*(TWBR) (prescalar) =72( decimal value)
 304:	82 e1       	ldi	r24, 0x12	; 18
 306:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>

	TWCR = (1 << TWEN); // enabling TWI (two wire interface)
 30a:	84 e0       	ldi	r24, 0x04	; 4
 30c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 310:	08 95       	ret

00000312 <i2c_meaningful_status>:
}

void i2c_meaningful_status(uint8_t status)
{
	switch (status)
 312:	48 2f       	mov	r20, r24
 314:	50 e0       	ldi	r21, 0x00	; 0
 316:	fa 01       	movw	r30, r20
 318:	38 97       	sbiw	r30, 0x08	; 8
 31a:	e1 35       	cpi	r30, 0x51	; 81
 31c:	f1 05       	cpc	r31, r1
 31e:	68 f0       	brcs	.+26     	; 0x33a <i2c_meaningful_status+0x28>
		break;
	case 0x58: // DATA received, NAK sent
		printf_P(PSTR("MR DATA+R, NAK\n"));
		break;
	default:
		printf_P(PSTR("N/A %02X\n"), status);
 320:	1f 92       	push	r1
 322:	8f 93       	push	r24
 324:	85 e9       	ldi	r24, 0x95	; 149
 326:	91 e0       	ldi	r25, 0x01	; 1
 328:	9f 93       	push	r25
 32a:	8f 93       	push	r24
 32c:	0e 94 26 04 	call	0x84c	; 0x84c <printf_P>
		break;
 330:	0f 90       	pop	r0
 332:	0f 90       	pop	r0
 334:	0f 90       	pop	r0
 336:	0f 90       	pop	r0
 338:	08 95       	ret
	TWCR = (1 << TWEN); // enabling TWI (two wire interface)
}

void i2c_meaningful_status(uint8_t status)
{
	switch (status)
 33a:	ec 5c       	subi	r30, 0xCC	; 204
 33c:	ff 4f       	sbci	r31, 0xFF	; 255
 33e:	0c 94 20 04 	jmp	0x840	; 0x840 <__tablejump2__>
		break;
	case 0x50: // DATA received, ACK sent
		printf_P(PSTR("MR DATA+R, ACK\n"));
		break;
	case 0x58: // DATA received, NAK sent
		printf_P(PSTR("MR DATA+R, NAK\n"));
 342:	8f e9       	ldi	r24, 0x9F	; 159
 344:	91 e0       	ldi	r25, 0x01	; 1
 346:	9f 93       	push	r25
 348:	8f 93       	push	r24
 34a:	0e 94 26 04 	call	0x84c	; 0x84c <printf_P>
		break;
 34e:	0f 90       	pop	r0
 350:	0f 90       	pop	r0
 352:	08 95       	ret
void i2c_meaningful_status(uint8_t status)
{
	switch (status)
	{
	case 0x08: // START transmitted, proceed to load SLA+W/R
		printf_P(PSTR("START\n"));
 354:	8f e2       	ldi	r24, 0x2F	; 47
 356:	92 e0       	ldi	r25, 0x02	; 2
 358:	9f 93       	push	r25
 35a:	8f 93       	push	r24
 35c:	0e 94 26 04 	call	0x84c	; 0x84c <printf_P>
		break;
 360:	0f 90       	pop	r0
 362:	0f 90       	pop	r0
 364:	08 95       	ret
	case 0x10: // repeated START transmitted, proceed to load SLA+W/R
		printf_P(PSTR("RESTART\n"));
 366:	86 e2       	ldi	r24, 0x26	; 38
 368:	92 e0       	ldi	r25, 0x02	; 2
 36a:	9f 93       	push	r25
 36c:	8f 93       	push	r24
 36e:	0e 94 26 04 	call	0x84c	; 0x84c <printf_P>
		break;
 372:	0f 90       	pop	r0
 374:	0f 90       	pop	r0
 376:	08 95       	ret
	case 0x38: // NAK or DATA ARBITRATION LOST
		printf_P(PSTR("NOARB/NAK\n"));
		break;
	// MASTER TRANSMIT
	case 0x18: // SLA+W transmitted, ACK received
		printf_P(PSTR("MT SLA+W, ACK\n"));
 378:	8c e0       	ldi	r24, 0x0C	; 12
 37a:	92 e0       	ldi	r25, 0x02	; 2
 37c:	9f 93       	push	r25
 37e:	8f 93       	push	r24
 380:	0e 94 26 04 	call	0x84c	; 0x84c <printf_P>
		break;
 384:	0f 90       	pop	r0
 386:	0f 90       	pop	r0
 388:	08 95       	ret
	case 0x20: // SLA+W transmitted, NAK received
		printf_P(PSTR("MT SLA+W, NAK\n"));
 38a:	8d ef       	ldi	r24, 0xFD	; 253
 38c:	91 e0       	ldi	r25, 0x01	; 1
 38e:	9f 93       	push	r25
 390:	8f 93       	push	r24
 392:	0e 94 26 04 	call	0x84c	; 0x84c <printf_P>
		break;
 396:	0f 90       	pop	r0
 398:	0f 90       	pop	r0
 39a:	08 95       	ret
	case 0x28: // DATA transmitted, ACK received
		printf_P(PSTR("MT DATA+W, ACK\n"));
 39c:	8d ee       	ldi	r24, 0xED	; 237
 39e:	91 e0       	ldi	r25, 0x01	; 1
 3a0:	9f 93       	push	r25
 3a2:	8f 93       	push	r24
 3a4:	0e 94 26 04 	call	0x84c	; 0x84c <printf_P>
		break;
 3a8:	0f 90       	pop	r0
 3aa:	0f 90       	pop	r0
 3ac:	08 95       	ret
	case 0x30: // DATA transmitted, NAK received
		printf_P(PSTR("MT DATA+W, NAK\n"));
 3ae:	8d ed       	ldi	r24, 0xDD	; 221
 3b0:	91 e0       	ldi	r25, 0x01	; 1
 3b2:	9f 93       	push	r25
 3b4:	8f 93       	push	r24
 3b6:	0e 94 26 04 	call	0x84c	; 0x84c <printf_P>
		break;
 3ba:	0f 90       	pop	r0
 3bc:	0f 90       	pop	r0
 3be:	08 95       	ret
		break;
	case 0x10: // repeated START transmitted, proceed to load SLA+W/R
		printf_P(PSTR("RESTART\n"));
		break;
	case 0x38: // NAK or DATA ARBITRATION LOST
		printf_P(PSTR("NOARB/NAK\n"));
 3c0:	8b e1       	ldi	r24, 0x1B	; 27
 3c2:	92 e0       	ldi	r25, 0x02	; 2
 3c4:	9f 93       	push	r25
 3c6:	8f 93       	push	r24
 3c8:	0e 94 26 04 	call	0x84c	; 0x84c <printf_P>
		break;
 3cc:	0f 90       	pop	r0
 3ce:	0f 90       	pop	r0
 3d0:	08 95       	ret
	case 0x30: // DATA transmitted, NAK received
		printf_P(PSTR("MT DATA+W, NAK\n"));
		break;
	// MASTER RECEIVE
	case 0x40: // SLA+R transmitted, ACK received
		printf_P(PSTR("MR SLA+R, ACK\n"));
 3d2:	8e ec       	ldi	r24, 0xCE	; 206
 3d4:	91 e0       	ldi	r25, 0x01	; 1
 3d6:	9f 93       	push	r25
 3d8:	8f 93       	push	r24
 3da:	0e 94 26 04 	call	0x84c	; 0x84c <printf_P>
		break;
 3de:	0f 90       	pop	r0
 3e0:	0f 90       	pop	r0
 3e2:	08 95       	ret
	case 0x48: // SLA+R transmitted, NAK received
		printf_P(PSTR("MR SLA+R, NAK\n"));
 3e4:	8f eb       	ldi	r24, 0xBF	; 191
 3e6:	91 e0       	ldi	r25, 0x01	; 1
 3e8:	9f 93       	push	r25
 3ea:	8f 93       	push	r24
 3ec:	0e 94 26 04 	call	0x84c	; 0x84c <printf_P>
		break;
 3f0:	0f 90       	pop	r0
 3f2:	0f 90       	pop	r0
 3f4:	08 95       	ret
	case 0x50: // DATA received, ACK sent
		printf_P(PSTR("MR DATA+R, ACK\n"));
 3f6:	8f ea       	ldi	r24, 0xAF	; 175
 3f8:	91 e0       	ldi	r25, 0x01	; 1
 3fa:	9f 93       	push	r25
 3fc:	8f 93       	push	r24
 3fe:	0e 94 26 04 	call	0x84c	; 0x84c <printf_P>
		break;
 402:	0f 90       	pop	r0
 404:	0f 90       	pop	r0
 406:	08 95       	ret

00000408 <i2c_start>:
//Generate start condition
/*We need to set TWSTA and stop TWSTO bits along with TWINT and TWEN bits for a start.
 After the start signal is sent, we need to wait for status (until TWINT resets zero).*/
inline void i2c_start()
{
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN); //Two wire control register TWCR
 408:	84 ea       	ldi	r24, 0xA4	; 164
 40a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (!(TWCR & (1 << TWINT)))
 40e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 412:	87 ff       	sbrs	r24, 7
 414:	fc cf       	rjmp	.-8      	; 0x40e <i2c_start+0x6>
		;
}
 416:	08 95       	ret

00000418 <i2c_stop>:

//Generate stop condition
inline void i2c_stop()
{
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
 418:	84 e9       	ldi	r24, 0x94	; 148
 41a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (TWCR & (1 << TWSTO))
 41e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 422:	84 fd       	sbrc	r24, 4
 424:	fc cf       	rjmp	.-8      	; 0x41e <i2c_stop+0x6>
		;
	//TWCR = (1 << TWINT) | (0 << TWSTO) | (1 << TWEN) | (1 << TWINT); //bus realeased
	//while (!(TWCR & (1 << TWINT))){}
}
 426:	08 95       	ret

00000428 <i2c_get_status>:
//Return status of ongoing operation
inline uint8_t i2c_get_status(void)
{
	uint8_t status;
	//mask status
	status = TWSR & 0xF8; //Two wire status register
 428:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
	return status;
}
 42c:	88 7f       	andi	r24, 0xF8	; 248
 42e:	08 95       	ret

00000430 <i2c_xmit_addr>:

//Send SLA+ R/W (Address Pkt consisting of slave address and READ and WRITE bit)
inline void i2c_xmit_addr(uint8_t address, uint8_t rw)
{
	TWDR = (address & 0xfe) | (rw & 0x1); //load SLA_W into register TWDR
 430:	8e 7f       	andi	r24, 0xFE	; 254
 432:	61 70       	andi	r22, 0x01	; 1
 434:	68 2b       	or	r22, r24
 436:	60 93 bb 00 	sts	0x00BB, r22	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1 << TWINT) | (1 << TWEN);	  // Clear TWINT bit in TWCR to start transmission of address
 43a:	84 e8       	ldi	r24, 0x84	; 132
 43c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 440:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 444:	87 ff       	sbrs	r24, 7
 446:	fc cf       	rjmp	.-8      	; 0x440 <i2c_xmit_addr+0x10>
		; //kames sure that PKt has been sent
}
 448:	08 95       	ret

0000044a <i2c_xmit_byte>:

//Send/write just one byte
void i2c_xmit_byte(uint8_t data)
{
	TWDR = data; //Two Wire Data Register TWDR
 44a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1 << TWINT) | (1 << TWEN);
 44e:	84 e8       	ldi	r24, 0x84	; 132
 450:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 454:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 458:	87 ff       	sbrs	r24, 7
 45a:	fc cf       	rjmp	.-8      	; 0x454 <i2c_xmit_byte+0xa>
		; //This indicates that the DATA has been transmitted, and ACK/NACK has been received.
}
 45c:	08 95       	ret

0000045e <i2c_read_ACK>:

//Read just one byte with ACK //for more bytes
uint8_t i2c_read_ACK()
{
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA); //TWEA enable ack
 45e:	84 ec       	ldi	r24, 0xC4	; 196
 460:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 464:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 468:	87 ff       	sbrs	r24, 7
 46a:	fc cf       	rjmp	.-8      	; 0x464 <i2c_read_ACK+0x6>
		;
	return TWDR;
 46c:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
}
 470:	08 95       	ret

00000472 <i2c_read_NAK>:

//Read just one byte without ACK //for the last byte
uint8_t i2c_read_NAK()
{
	TWCR = (1 << TWINT) | (1 << TWEN); //ack bit not set
 472:	84 e8       	ldi	r24, 0x84	; 132
 474:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 478:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 47c:	87 ff       	sbrs	r24, 7
 47e:	fc cf       	rjmp	.-8      	; 0x478 <i2c_read_NAK+0x6>
		;
	return TWDR;
 480:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
}
 484:	08 95       	ret

00000486 <eeprom_wait_until_write_complete>:
//Generate start condition
/*We need to set TWSTA and stop TWSTO bits along with TWINT and TWEN bits for a start.
 After the start signal is sent, we need to wait for status (until TWINT resets zero).*/
inline void i2c_start()
{
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN); //Two wire control register TWCR
 486:	34 ea       	ldi	r19, 0xA4	; 164
}

//Send SLA+ R/W (Address Pkt consisting of slave address and READ and WRITE bit)
inline void i2c_xmit_addr(uint8_t address, uint8_t rw)
{
	TWDR = (address & 0xfe) | (rw & 0x1); //load SLA_W into register TWDR
 488:	20 ea       	ldi	r18, 0xA0	; 160
	TWCR = (1 << TWINT) | (1 << TWEN);	  // Clear TWINT bit in TWCR to start transmission of address
 48a:	94 e8       	ldi	r25, 0x84	; 132
//Generate start condition
/*We need to set TWSTA and stop TWSTO bits along with TWINT and TWEN bits for a start.
 After the start signal is sent, we need to wait for status (until TWINT resets zero).*/
inline void i2c_start()
{
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN); //Two wire control register TWCR
 48c:	30 93 bc 00 	sts	0x00BC, r19	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (!(TWCR & (1 << TWINT)))
 490:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 494:	87 ff       	sbrs	r24, 7
 496:	fc cf       	rjmp	.-8      	; 0x490 <eeprom_wait_until_write_complete+0xa>
}

//Send SLA+ R/W (Address Pkt consisting of slave address and READ and WRITE bit)
inline void i2c_xmit_addr(uint8_t address, uint8_t rw)
{
	TWDR = (address & 0xfe) | (rw & 0x1); //load SLA_W into register TWDR
 498:	20 93 bb 00 	sts	0x00BB, r18	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1 << TWINT) | (1 << TWEN);	  // Clear TWINT bit in TWCR to start transmission of address
 49c:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 4a0:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 4a4:	87 ff       	sbrs	r24, 7
 4a6:	fc cf       	rjmp	.-8      	; 0x4a0 <eeprom_wait_until_write_complete+0x1a>
//Return status of ongoing operation
inline uint8_t i2c_get_status(void)
{
	uint8_t status;
	//mask status
	status = TWSR & 0xF8; //Two wire status register
 4a8:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
}

inline void eeprom_wait_until_write_complete()
{
	uint8_t status = 0;
	while (status != 0x18)
 4ac:	88 7f       	andi	r24, 0xF8	; 248
 4ae:	88 31       	cpi	r24, 0x18	; 24
 4b0:	69 f7       	brne	.-38     	; 0x48c <eeprom_wait_until_write_complete+0x6>
	{ //check if slave is sending ACK, if no ACK writing is in progress so wait
		i2c_start();
		i2c_xmit_addr(EEPROM_addr, 0);
		status = i2c_get_status();
	}
}
 4b2:	08 95       	ret

000004b4 <eeprom_read_byte>:
//Generate start condition
/*We need to set TWSTA and stop TWSTO bits along with TWINT and TWEN bits for a start.
 After the start signal is sent, we need to wait for status (until TWINT resets zero).*/
inline void i2c_start()
{
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN); //Two wire control register TWCR
 4b4:	94 ea       	ldi	r25, 0xA4	; 164
 4b6:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (!(TWCR & (1 << TWINT)))
 4ba:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 4be:	97 ff       	sbrs	r25, 7
 4c0:	fc cf       	rjmp	.-8      	; 0x4ba <eeprom_read_byte+0x6>
}

//Send SLA+ R/W (Address Pkt consisting of slave address and READ and WRITE bit)
inline void i2c_xmit_addr(uint8_t address, uint8_t rw)
{
	TWDR = (address & 0xfe) | (rw & 0x1); //load SLA_W into register TWDR
 4c2:	90 ea       	ldi	r25, 0xA0	; 160
 4c4:	90 93 bb 00 	sts	0x00BB, r25	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1 << TWINT) | (1 << TWEN);	  // Clear TWINT bit in TWCR to start transmission of address
 4c8:	94 e8       	ldi	r25, 0x84	; 132
 4ca:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 4ce:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 4d2:	97 ff       	sbrs	r25, 7
 4d4:	fc cf       	rjmp	.-8      	; 0x4ce <eeprom_read_byte+0x1a>
}

//Send/write just one byte
void i2c_xmit_byte(uint8_t data)
{
	TWDR = data; //Two Wire Data Register TWDR
 4d6:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1 << TWINT) | (1 << TWEN);
 4da:	84 e8       	ldi	r24, 0x84	; 132
 4dc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 4e0:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 4e4:	87 ff       	sbrs	r24, 7
 4e6:	fc cf       	rjmp	.-8      	; 0x4e0 <eeprom_read_byte+0x2c>
//Generate start condition
/*We need to set TWSTA and stop TWSTO bits along with TWINT and TWEN bits for a start.
 After the start signal is sent, we need to wait for status (until TWINT resets zero).*/
inline void i2c_start()
{
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN); //Two wire control register TWCR
 4e8:	84 ea       	ldi	r24, 0xA4	; 164
 4ea:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (!(TWCR & (1 << TWINT)))
 4ee:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 4f2:	87 ff       	sbrs	r24, 7
 4f4:	fc cf       	rjmp	.-8      	; 0x4ee <eeprom_read_byte+0x3a>
}

//Send SLA+ R/W (Address Pkt consisting of slave address and READ and WRITE bit)
inline void i2c_xmit_addr(uint8_t address, uint8_t rw)
{
	TWDR = (address & 0xfe) | (rw & 0x1); //load SLA_W into register TWDR
 4f6:	81 ea       	ldi	r24, 0xA1	; 161
 4f8:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1 << TWINT) | (1 << TWEN);	  // Clear TWINT bit in TWCR to start transmission of address
 4fc:	84 e8       	ldi	r24, 0x84	; 132
 4fe:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 502:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 506:	87 ff       	sbrs	r24, 7
 508:	fc cf       	rjmp	.-8      	; 0x502 <eeprom_read_byte+0x4e>
}

//Read just one byte without ACK //for the last byte
uint8_t i2c_read_NAK()
{
	TWCR = (1 << TWINT) | (1 << TWEN); //ack bit not set
 50a:	84 e8       	ldi	r24, 0x84	; 132
 50c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 510:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 514:	87 ff       	sbrs	r24, 7
 516:	fc cf       	rjmp	.-8      	; 0x510 <eeprom_read_byte+0x5c>
		;
	return TWDR;
 518:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
}

//Generate stop condition
inline void i2c_stop()
{
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
 51c:	94 e9       	ldi	r25, 0x94	; 148
 51e:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (TWCR & (1 << TWSTO))
 522:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 526:	94 fd       	sbrc	r25, 4
 528:	fc cf       	rjmp	.-8      	; 0x522 <eeprom_read_byte+0x6e>
	uint8_t received = i2c_read_NAK();

	//Generate stop condition
	i2c_stop();
	return received;
}
 52a:	08 95       	ret

0000052c <eeprom_write_byte>:
//Generate start condition
/*We need to set TWSTA and stop TWSTO bits along with TWINT and TWEN bits for a start.
 After the start signal is sent, we need to wait for status (until TWINT resets zero).*/
inline void i2c_start()
{
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN); //Two wire control register TWCR
 52c:	94 ea       	ldi	r25, 0xA4	; 164
 52e:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (!(TWCR & (1 << TWINT)))
 532:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 536:	97 ff       	sbrs	r25, 7
 538:	fc cf       	rjmp	.-8      	; 0x532 <eeprom_write_byte+0x6>
}

//Send SLA+ R/W (Address Pkt consisting of slave address and READ and WRITE bit)
inline void i2c_xmit_addr(uint8_t address, uint8_t rw)
{
	TWDR = (address & 0xfe) | (rw & 0x1); //load SLA_W into register TWDR
 53a:	90 ea       	ldi	r25, 0xA0	; 160
 53c:	90 93 bb 00 	sts	0x00BB, r25	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1 << TWINT) | (1 << TWEN);	  // Clear TWINT bit in TWCR to start transmission of address
 540:	94 e8       	ldi	r25, 0x84	; 132
 542:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 546:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 54a:	97 ff       	sbrs	r25, 7
 54c:	fc cf       	rjmp	.-8      	; 0x546 <eeprom_write_byte+0x1a>
}

//Send/write just one byte
void i2c_xmit_byte(uint8_t data)
{
	TWDR = data; //Two Wire Data Register TWDR
 54e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1 << TWINT) | (1 << TWEN);
 552:	84 e8       	ldi	r24, 0x84	; 132
 554:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 558:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 55c:	87 ff       	sbrs	r24, 7
 55e:	fc cf       	rjmp	.-8      	; 0x558 <eeprom_write_byte+0x2c>
}

//Send/write just one byte
void i2c_xmit_byte(uint8_t data)
{
	TWDR = data; //Two Wire Data Register TWDR
 560:	60 93 bb 00 	sts	0x00BB, r22	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1 << TWINT) | (1 << TWEN);
 564:	84 e8       	ldi	r24, 0x84	; 132
 566:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 56a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 56e:	87 ff       	sbrs	r24, 7
 570:	fc cf       	rjmp	.-8      	; 0x56a <eeprom_write_byte+0x3e>
}

//Generate stop condition
inline void i2c_stop()
{
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
 572:	84 e9       	ldi	r24, 0x94	; 148
 574:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (TWCR & (1 << TWSTO))
 578:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 57c:	84 fd       	sbrc	r24, 4
 57e:	fc cf       	rjmp	.-8      	; 0x578 <eeprom_write_byte+0x4c>
//Generate start condition
/*We need to set TWSTA and stop TWSTO bits along with TWINT and TWEN bits for a start.
 After the start signal is sent, we need to wait for status (until TWINT resets zero).*/
inline void i2c_start()
{
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN); //Two wire control register TWCR
 580:	34 ea       	ldi	r19, 0xA4	; 164
}

//Send SLA+ R/W (Address Pkt consisting of slave address and READ and WRITE bit)
inline void i2c_xmit_addr(uint8_t address, uint8_t rw)
{
	TWDR = (address & 0xfe) | (rw & 0x1); //load SLA_W into register TWDR
 582:	20 ea       	ldi	r18, 0xA0	; 160
	TWCR = (1 << TWINT) | (1 << TWEN);	  // Clear TWINT bit in TWCR to start transmission of address
 584:	94 e8       	ldi	r25, 0x84	; 132
//Generate start condition
/*We need to set TWSTA and stop TWSTO bits along with TWINT and TWEN bits for a start.
 After the start signal is sent, we need to wait for status (until TWINT resets zero).*/
inline void i2c_start()
{
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN); //Two wire control register TWCR
 586:	30 93 bc 00 	sts	0x00BC, r19	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (!(TWCR & (1 << TWINT)))
 58a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 58e:	87 ff       	sbrs	r24, 7
 590:	fc cf       	rjmp	.-8      	; 0x58a <eeprom_write_byte+0x5e>
}

//Send SLA+ R/W (Address Pkt consisting of slave address and READ and WRITE bit)
inline void i2c_xmit_addr(uint8_t address, uint8_t rw)
{
	TWDR = (address & 0xfe) | (rw & 0x1); //load SLA_W into register TWDR
 592:	20 93 bb 00 	sts	0x00BB, r18	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1 << TWINT) | (1 << TWEN);	  // Clear TWINT bit in TWCR to start transmission of address
 596:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 59a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 59e:	87 ff       	sbrs	r24, 7
 5a0:	fc cf       	rjmp	.-8      	; 0x59a <eeprom_write_byte+0x6e>
//Return status of ongoing operation
inline uint8_t i2c_get_status(void)
{
	uint8_t status;
	//mask status
	status = TWSR & 0xF8; //Two wire status register
 5a2:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
}

inline void eeprom_wait_until_write_complete()
{
	uint8_t status = 0;
	while (status != 0x18)
 5a6:	88 7f       	andi	r24, 0xF8	; 248
 5a8:	88 31       	cpi	r24, 0x18	; 24
 5aa:	69 f7       	brne	.-38     	; 0x586 <eeprom_write_byte+0x5a>
	i2c_stop();

	//wait until write has finished
	eeprom_wait_until_write_complete();
	//i2c_meaningful_status(i2c_get_status());
}
 5ac:	08 95       	ret

000005ae <eeprom_write_page>:

void eeprom_write_page(uint8_t addr, uint8_t *data)
{
	uint8_t chardata = *data;
 5ae:	fb 01       	movw	r30, r22
 5b0:	20 81       	ld	r18, Z
//Generate start condition
/*We need to set TWSTA and stop TWSTO bits along with TWINT and TWEN bits for a start.
 After the start signal is sent, we need to wait for status (until TWINT resets zero).*/
inline void i2c_start()
{
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN); //Two wire control register TWCR
 5b2:	94 ea       	ldi	r25, 0xA4	; 164
 5b4:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (!(TWCR & (1 << TWINT)))
 5b8:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 5bc:	97 ff       	sbrs	r25, 7
 5be:	fc cf       	rjmp	.-8      	; 0x5b8 <eeprom_write_page+0xa>
}

//Send SLA+ R/W (Address Pkt consisting of slave address and READ and WRITE bit)
inline void i2c_xmit_addr(uint8_t address, uint8_t rw)
{
	TWDR = (address & 0xfe) | (rw & 0x1); //load SLA_W into register TWDR
 5c0:	90 ea       	ldi	r25, 0xA0	; 160
 5c2:	90 93 bb 00 	sts	0x00BB, r25	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1 << TWINT) | (1 << TWEN);	  // Clear TWINT bit in TWCR to start transmission of address
 5c6:	94 e8       	ldi	r25, 0x84	; 132
 5c8:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 5cc:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 5d0:	97 ff       	sbrs	r25, 7
 5d2:	fc cf       	rjmp	.-8      	; 0x5cc <eeprom_write_page+0x1e>
}

//Send/write just one byte
void i2c_xmit_byte(uint8_t data)
{
	TWDR = data; //Two Wire Data Register TWDR
 5d4:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1 << TWINT) | (1 << TWEN);
 5d8:	84 e8       	ldi	r24, 0x84	; 132
 5da:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 5de:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 5e2:	87 ff       	sbrs	r24, 7
 5e4:	fc cf       	rjmp	.-8      	; 0x5de <eeprom_write_page+0x30>
 5e6:	fb 01       	movw	r30, r22
 5e8:	31 96       	adiw	r30, 0x01	; 1
 5ea:	67 5f       	subi	r22, 0xF7	; 247
 5ec:	7f 4f       	sbci	r23, 0xFF	; 255

//Send/write just one byte
void i2c_xmit_byte(uint8_t data)
{
	TWDR = data; //Two Wire Data Register TWDR
	TWCR = (1 << TWINT) | (1 << TWEN);
 5ee:	94 e8       	ldi	r25, 0x84	; 132
}

//Send/write just one byte
void i2c_xmit_byte(uint8_t data)
{
	TWDR = data; //Two Wire Data Register TWDR
 5f0:	20 93 bb 00 	sts	0x00BB, r18	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1 << TWINT) | (1 << TWEN);
 5f4:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 5f8:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 5fc:	87 ff       	sbrs	r24, 7
 5fe:	fc cf       	rjmp	.-8      	; 0x5f8 <eeprom_write_page+0x4a>
	{
		//Send/write just one byte
		i2c_xmit_byte(chardata); //Upon receipt of each word, the 3 lower-order Address Pointer bits are internally incremented by ‘1’.
		//The higher-order five bits of the word address remain constant.

		chardata = *(++data); //PreIncrementing the pointer to next char
 600:	21 91       	ld	r18, Z+

	//send the address to be written to
	i2c_xmit_byte(addr);
	//i2c_meaningful_status(i2c_get_status());

	for (int j = 0; j < Pagesize; j++) //length of string,pagesize = 8
 602:	e6 17       	cp	r30, r22
 604:	f7 07       	cpc	r31, r23
 606:	a1 f7       	brne	.-24     	; 0x5f0 <eeprom_write_page+0x42>
}

//Generate stop condition
inline void i2c_stop()
{
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
 608:	84 e9       	ldi	r24, 0x94	; 148
 60a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (TWCR & (1 << TWSTO))
 60e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 612:	84 fd       	sbrc	r24, 4
 614:	fc cf       	rjmp	.-8      	; 0x60e <eeprom_write_page+0x60>
//Generate start condition
/*We need to set TWSTA and stop TWSTO bits along with TWINT and TWEN bits for a start.
 After the start signal is sent, we need to wait for status (until TWINT resets zero).*/
inline void i2c_start()
{
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN); //Two wire control register TWCR
 616:	34 ea       	ldi	r19, 0xA4	; 164
}

//Send SLA+ R/W (Address Pkt consisting of slave address and READ and WRITE bit)
inline void i2c_xmit_addr(uint8_t address, uint8_t rw)
{
	TWDR = (address & 0xfe) | (rw & 0x1); //load SLA_W into register TWDR
 618:	20 ea       	ldi	r18, 0xA0	; 160
	TWCR = (1 << TWINT) | (1 << TWEN);	  // Clear TWINT bit in TWCR to start transmission of address
 61a:	94 e8       	ldi	r25, 0x84	; 132
//Generate start condition
/*We need to set TWSTA and stop TWSTO bits along with TWINT and TWEN bits for a start.
 After the start signal is sent, we need to wait for status (until TWINT resets zero).*/
inline void i2c_start()
{
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN); //Two wire control register TWCR
 61c:	30 93 bc 00 	sts	0x00BC, r19	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (!(TWCR & (1 << TWINT)))
 620:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 624:	87 ff       	sbrs	r24, 7
 626:	fc cf       	rjmp	.-8      	; 0x620 <eeprom_write_page+0x72>
}

//Send SLA+ R/W (Address Pkt consisting of slave address and READ and WRITE bit)
inline void i2c_xmit_addr(uint8_t address, uint8_t rw)
{
	TWDR = (address & 0xfe) | (rw & 0x1); //load SLA_W into register TWDR
 628:	20 93 bb 00 	sts	0x00BB, r18	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1 << TWINT) | (1 << TWEN);	  // Clear TWINT bit in TWCR to start transmission of address
 62c:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 630:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 634:	87 ff       	sbrs	r24, 7
 636:	fc cf       	rjmp	.-8      	; 0x630 <eeprom_write_page+0x82>
//Return status of ongoing operation
inline uint8_t i2c_get_status(void)
{
	uint8_t status;
	//mask status
	status = TWSR & 0xF8; //Two wire status register
 638:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
}

inline void eeprom_wait_until_write_complete()
{
	uint8_t status = 0;
	while (status != 0x18)
 63c:	88 7f       	andi	r24, 0xF8	; 248
 63e:	88 31       	cpi	r24, 0x18	; 24
 640:	69 f7       	brne	.-38     	; 0x61c <eeprom_write_page+0x6e>
		//i2c_meaningful_status(i2c_get_status());
	}

	i2c_stop();
	eeprom_wait_until_write_complete(); //wait until write has finished
}
 642:	08 95       	ret

00000644 <eeprom_sequential_read>:
 644:	24 ea       	ldi	r18, 0xA4	; 164
 646:	20 93 bc 00 	sts	0x00BC, r18	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 64a:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 64e:	27 ff       	sbrs	r18, 7
 650:	fc cf       	rjmp	.-8      	; 0x64a <eeprom_sequential_read+0x6>
 652:	20 ea       	ldi	r18, 0xA0	; 160
 654:	20 93 bb 00 	sts	0x00BB, r18	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
 658:	24 e8       	ldi	r18, 0x84	; 132
 65a:	20 93 bc 00 	sts	0x00BC, r18	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 65e:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 662:	27 ff       	sbrs	r18, 7
 664:	fc cf       	rjmp	.-8      	; 0x65e <eeprom_sequential_read+0x1a>
 666:	60 93 bb 00 	sts	0x00BB, r22	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
 66a:	24 e8       	ldi	r18, 0x84	; 132
 66c:	20 93 bc 00 	sts	0x00BC, r18	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 670:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 674:	27 ff       	sbrs	r18, 7
 676:	fc cf       	rjmp	.-8      	; 0x670 <eeprom_sequential_read+0x2c>
 678:	24 ea       	ldi	r18, 0xA4	; 164
 67a:	20 93 bc 00 	sts	0x00BC, r18	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 67e:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 682:	27 ff       	sbrs	r18, 7
 684:	fc cf       	rjmp	.-8      	; 0x67e <eeprom_sequential_read+0x3a>
 686:	21 ea       	ldi	r18, 0xA1	; 161
 688:	20 93 bb 00 	sts	0x00BB, r18	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
 68c:	24 e8       	ldi	r18, 0x84	; 132
 68e:	20 93 bc 00 	sts	0x00BC, r18	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 692:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 696:	27 ff       	sbrs	r18, 7
 698:	fc cf       	rjmp	.-8      	; 0x692 <eeprom_sequential_read+0x4e>
 69a:	50 e0       	ldi	r21, 0x00	; 0
 69c:	41 15       	cp	r20, r1
 69e:	51 05       	cpc	r21, r1
 6a0:	d1 f0       	breq	.+52     	; 0x6d6 <eeprom_sequential_read+0x92>
 6a2:	ba 01       	movw	r22, r20
 6a4:	61 50       	subi	r22, 0x01	; 1
 6a6:	71 09       	sbc	r23, r1
 6a8:	fc 01       	movw	r30, r24
 6aa:	20 e0       	ldi	r18, 0x00	; 0
 6ac:	30 e0       	ldi	r19, 0x00	; 0
 6ae:	94 ec       	ldi	r25, 0xC4	; 196
 6b0:	a4 e8       	ldi	r26, 0x84	; 132
 6b2:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 6b6:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 6ba:	87 ff       	sbrs	r24, 7
 6bc:	fc cf       	rjmp	.-8      	; 0x6b6 <eeprom_sequential_read+0x72>
 6be:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
 6c2:	26 17       	cp	r18, r22
 6c4:	37 07       	cpc	r19, r23
 6c6:	79 f0       	breq	.+30     	; 0x6e6 <eeprom_sequential_read+0xa2>
 6c8:	80 83       	st	Z, r24
 6ca:	2f 5f       	subi	r18, 0xFF	; 255
 6cc:	3f 4f       	sbci	r19, 0xFF	; 255
 6ce:	31 96       	adiw	r30, 0x01	; 1
 6d0:	24 17       	cp	r18, r20
 6d2:	35 07       	cpc	r19, r21
 6d4:	71 f7       	brne	.-36     	; 0x6b2 <eeprom_sequential_read+0x6e>
 6d6:	84 e9       	ldi	r24, 0x94	; 148
 6d8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 6dc:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 6e0:	84 fd       	sbrc	r24, 4
 6e2:	fc cf       	rjmp	.-8      	; 0x6dc <eeprom_sequential_read+0x98>
 6e4:	08 95       	ret
 6e6:	a0 93 bc 00 	sts	0x00BC, r26	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 6ea:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 6ee:	87 ff       	sbrs	r24, 7
 6f0:	fc cf       	rjmp	.-8      	; 0x6ea <eeprom_sequential_read+0xa6>
 6f2:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
 6f6:	80 83       	st	Z, r24
 6f8:	e8 cf       	rjmp	.-48     	; 0x6ca <eeprom_sequential_read+0x86>

000006fa <main>:
#include "i2c.h"
#include "serial.h"
#include "timer.h"

void main(void)
{
 6fa:	cf 93       	push	r28
 6fc:	df 93       	push	r29
 6fe:	cd b7       	in	r28, 0x3d	; 61
 700:	de b7       	in	r29, 0x3e	; 62
 702:	ee 97       	sbiw	r28, 0x3e	; 62
 704:	0f b6       	in	r0, 0x3f	; 63
 706:	f8 94       	cli
 708:	de bf       	out	0x3e, r29	; 62
 70a:	0f be       	out	0x3f, r0	; 63
 70c:	cd bf       	out	0x3d, r28	; 61

	i2c_init();
 70e:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <i2c_init>
	uart_init();
 712:	0e 94 4e 01 	call	0x29c	; 0x29c <uart_init>

	sei();
 716:	78 94       	sei
		printf_P(PSTR("%X "), Read_string[i]);
	}*/

	//----------------------VG DELUPPGIFT PART 3 ---------------------------------------

	uint8_t New_array[] = "Here i am studying IOT program";
 718:	8f e1       	ldi	r24, 0x1F	; 31
 71a:	ee e0       	ldi	r30, 0x0E	; 14
 71c:	f1 e0       	ldi	r31, 0x01	; 1
 71e:	de 01       	movw	r26, r28
 720:	90 96       	adiw	r26, 0x20	; 32
 722:	01 90       	ld	r0, Z+
 724:	0d 92       	st	X+, r0
 726:	8a 95       	dec	r24
 728:	e1 f7       	brne	.-8      	; 0x722 <main+0x28>
	uint8_t len_of_string = sizeof(New_array);
	uint8_t No_of_pages = len_of_string / Pagesize;
	uint8_t Initial_addr = 0x10;

	printf_P(PSTR("size of new_array= %d\n"), sizeof(New_array));					// length is 31 as per the New_array declared above
 72a:	1f 92       	push	r1
 72c:	8f e1       	ldi	r24, 0x1F	; 31
 72e:	8f 93       	push	r24
 730:	8e e7       	ldi	r24, 0x7E	; 126
 732:	91 e0       	ldi	r25, 0x01	; 1
 734:	9f 93       	push	r25
 736:	8f 93       	push	r24
 738:	0e 94 26 04 	call	0x84c	; 0x84c <printf_P>
	printf_P(PSTR("excess char (out of boundry chars) = %d\n"), len_of_string % 8); // 7 excess chars
 73c:	1f 92       	push	r1
 73e:	87 e0       	ldi	r24, 0x07	; 7
 740:	8f 93       	push	r24
 742:	85 e5       	ldi	r24, 0x55	; 85
 744:	91 e0       	ldi	r25, 0x01	; 1
 746:	9f 93       	push	r25
 748:	8f 93       	push	r24
 74a:	0e 94 26 04 	call	0x84c	; 0x84c <printf_P>
	printf_P(PSTR("No of pages= %d\n"), No_of_pages);								//   31/8 = 3
 74e:	1f 92       	push	r1
 750:	83 e0       	ldi	r24, 0x03	; 3
 752:	8f 93       	push	r24
 754:	84 e4       	ldi	r24, 0x44	; 68
 756:	91 e0       	ldi	r25, 0x01	; 1
 758:	9f 93       	push	r25
 75a:	8f 93       	push	r24
 75c:	0e 94 26 04 	call	0x84c	; 0x84c <printf_P>

	for (int i = 0; i < No_of_pages; i++)
	{
		uint8_t *ch;
		ch = &New_array[i * Pagesize]; //assigning the address to the pointer
		eeprom_write_page(Initial_addr, ch);
 760:	be 01       	movw	r22, r28
 762:	60 5e       	subi	r22, 0xE0	; 224
 764:	7f 4f       	sbci	r23, 0xFF	; 255
 766:	80 e1       	ldi	r24, 0x10	; 16
 768:	0e 94 d7 02 	call	0x5ae	; 0x5ae <eeprom_write_page>
 76c:	be 01       	movw	r22, r28
 76e:	68 5d       	subi	r22, 0xD8	; 216
 770:	7f 4f       	sbci	r23, 0xFF	; 255
 772:	88 e1       	ldi	r24, 0x18	; 24
 774:	0e 94 d7 02 	call	0x5ae	; 0x5ae <eeprom_write_page>
 778:	be 01       	movw	r22, r28
 77a:	60 5d       	subi	r22, 0xD0	; 208
 77c:	7f 4f       	sbci	r23, 0xFF	; 255
 77e:	80 e2       	ldi	r24, 0x20	; 32
 780:	0e 94 d7 02 	call	0x5ae	; 0x5ae <eeprom_write_page>
 784:	7e 01       	movw	r14, r28
 786:	88 e3       	ldi	r24, 0x38	; 56
 788:	e8 0e       	add	r14, r24
 78a:	f1 1c       	adc	r15, r1
 78c:	0f b6       	in	r0, 0x3f	; 63
 78e:	f8 94       	cli
 790:	de bf       	out	0x3e, r29	; 62
 792:	0f be       	out	0x3f, r0	; 63
 794:	cd bf       	out	0x3d, r28	; 61
 796:	08 e2       	ldi	r16, 0x28	; 40
 798:	10 e0       	ldi	r17, 0x00	; 0
		Initial_addr += Pagesize;
	}

	for (int i = (len_of_string - excess_char); i < len_of_string; i++) // writing the out of boundary chars
	{
		eeprom_write_byte(Initial_addr, New_array[i]);
 79a:	f7 01       	movw	r30, r14
 79c:	61 91       	ld	r22, Z+
 79e:	7f 01       	movw	r14, r30
 7a0:	70 e0       	ldi	r23, 0x00	; 0
 7a2:	c8 01       	movw	r24, r16
 7a4:	0e 94 96 02 	call	0x52c	; 0x52c <eeprom_write_byte>
 7a8:	0f 5f       	subi	r16, 0xFF	; 255
 7aa:	1f 4f       	sbci	r17, 0xFF	; 255
		ch = &New_array[i * Pagesize]; //assigning the address to the pointer
		eeprom_write_page(Initial_addr, ch);
		Initial_addr += Pagesize;
	}

	for (int i = (len_of_string - excess_char); i < len_of_string; i++) // writing the out of boundary chars
 7ac:	0f 32       	cpi	r16, 0x2F	; 47
 7ae:	11 05       	cpc	r17, r1
 7b0:	a1 f7       	brne	.-24     	; 0x79a <main+0xa0>
	//variables to read the data
	uint8_t Read_string[len_of_string]; // array to read the chars

	Initial_addr = 0x10; //re-initializing the start address

	eeprom_sequential_read(Read_string, Initial_addr, len_of_string);
 7b2:	4f e1       	ldi	r20, 0x1F	; 31
 7b4:	60 e1       	ldi	r22, 0x10	; 16
 7b6:	ce 01       	movw	r24, r28
 7b8:	01 96       	adiw	r24, 0x01	; 1
 7ba:	0e 94 22 03 	call	0x644	; 0x644 <eeprom_sequential_read>

	//To print the string the text
	printf_P(PSTR("\n My string in  ASCII char \n"));
 7be:	87 e2       	ldi	r24, 0x27	; 39
 7c0:	91 e0       	ldi	r25, 0x01	; 1
 7c2:	9f 93       	push	r25
 7c4:	8f 93       	push	r24
 7c6:	0e 94 26 04 	call	0x84c	; 0x84c <printf_P>
 7ca:	8e 01       	movw	r16, r28
 7cc:	0f 5f       	subi	r16, 0xFF	; 255
 7ce:	1f 4f       	sbci	r17, 0xFF	; 255
 7d0:	6e 01       	movw	r12, r28
 7d2:	ff e1       	ldi	r31, 0x1F	; 31
 7d4:	cf 0e       	add	r12, r31
 7d6:	d1 1c       	adc	r13, r1
 7d8:	0f 90       	pop	r0
 7da:	0f 90       	pop	r0
 7dc:	78 01       	movw	r14, r16
	for (int i = 0; i < len_of_string - 1; i++)
	{
		printf_P(PSTR("%c  "), Read_string[i]);
 7de:	92 e2       	ldi	r25, 0x22	; 34
 7e0:	a9 2e       	mov	r10, r25
 7e2:	91 e0       	ldi	r25, 0x01	; 1
 7e4:	b9 2e       	mov	r11, r25
 7e6:	f7 01       	movw	r30, r14
 7e8:	81 91       	ld	r24, Z+
 7ea:	7f 01       	movw	r14, r30
 7ec:	1f 92       	push	r1
 7ee:	8f 93       	push	r24
 7f0:	bf 92       	push	r11
 7f2:	af 92       	push	r10
 7f4:	0e 94 26 04 	call	0x84c	; 0x84c <printf_P>

	eeprom_sequential_read(Read_string, Initial_addr, len_of_string);

	//To print the string the text
	printf_P(PSTR("\n My string in  ASCII char \n"));
	for (int i = 0; i < len_of_string - 1; i++)
 7f8:	0f 90       	pop	r0
 7fa:	0f 90       	pop	r0
 7fc:	0f 90       	pop	r0
 7fe:	0f 90       	pop	r0
 800:	ce 14       	cp	r12, r14
 802:	df 04       	cpc	r13, r15
 804:	81 f7       	brne	.-32     	; 0x7e6 <main+0xec>
	{
		printf_P(PSTR("%c  "), Read_string[i]);
	}

	//To print the hexadecimal values of the chars printed above
	printf_P(PSTR("\n My HEX  string  \n"));
 806:	8e e0       	ldi	r24, 0x0E	; 14
 808:	91 e0       	ldi	r25, 0x01	; 1
 80a:	9f 93       	push	r25
 80c:	8f 93       	push	r24
 80e:	0e 94 26 04 	call	0x84c	; 0x84c <printf_P>
 812:	0f 90       	pop	r0
 814:	0f 90       	pop	r0
	for (int i = 0; i < len_of_string - 1; i++)
	{
		printf_P(PSTR("%X "), Read_string[i]);
 816:	8a e0       	ldi	r24, 0x0A	; 10
 818:	e8 2e       	mov	r14, r24
 81a:	81 e0       	ldi	r24, 0x01	; 1
 81c:	f8 2e       	mov	r15, r24
 81e:	f8 01       	movw	r30, r16
 820:	81 91       	ld	r24, Z+
 822:	8f 01       	movw	r16, r30
 824:	1f 92       	push	r1
 826:	8f 93       	push	r24
 828:	ff 92       	push	r15
 82a:	ef 92       	push	r14
 82c:	0e 94 26 04 	call	0x84c	; 0x84c <printf_P>
		printf_P(PSTR("%c  "), Read_string[i]);
	}

	//To print the hexadecimal values of the chars printed above
	printf_P(PSTR("\n My HEX  string  \n"));
	for (int i = 0; i < len_of_string - 1; i++)
 830:	0f 90       	pop	r0
 832:	0f 90       	pop	r0
 834:	0f 90       	pop	r0
 836:	0f 90       	pop	r0
 838:	c0 16       	cp	r12, r16
 83a:	d1 06       	cpc	r13, r17
 83c:	81 f7       	brne	.-32     	; 0x81e <main+0x124>
 83e:	ff cf       	rjmp	.-2      	; 0x83e <main+0x144>

00000840 <__tablejump2__>:
 840:	ee 0f       	add	r30, r30
 842:	ff 1f       	adc	r31, r31
 844:	05 90       	lpm	r0, Z+
 846:	f4 91       	lpm	r31, Z
 848:	e0 2d       	mov	r30, r0
 84a:	09 94       	ijmp

0000084c <printf_P>:
 84c:	a0 e0       	ldi	r26, 0x00	; 0
 84e:	b0 e0       	ldi	r27, 0x00	; 0
 850:	ec e2       	ldi	r30, 0x2C	; 44
 852:	f4 e0       	ldi	r31, 0x04	; 4
 854:	0c 94 eb 06 	jmp	0xdd6	; 0xdd6 <__prologue_saves__+0x1c>
 858:	ae 01       	movw	r20, r28
 85a:	49 5f       	subi	r20, 0xF9	; 249
 85c:	5f 4f       	sbci	r21, 0xFF	; 255
 85e:	da 01       	movw	r26, r20
 860:	6d 91       	ld	r22, X+
 862:	7d 91       	ld	r23, X+
 864:	ad 01       	movw	r20, r26
 866:	0f e2       	ldi	r16, 0x2F	; 47
 868:	11 e0       	ldi	r17, 0x01	; 1
 86a:	f8 01       	movw	r30, r16
 86c:	82 81       	ldd	r24, Z+2	; 0x02
 86e:	93 81       	ldd	r25, Z+3	; 0x03
 870:	dc 01       	movw	r26, r24
 872:	13 96       	adiw	r26, 0x03	; 3
 874:	2c 91       	ld	r18, X
 876:	13 97       	sbiw	r26, 0x03	; 3
 878:	28 60       	ori	r18, 0x08	; 8
 87a:	13 96       	adiw	r26, 0x03	; 3
 87c:	2c 93       	st	X, r18
 87e:	0e 94 4c 04 	call	0x898	; 0x898 <vfprintf>
 882:	d8 01       	movw	r26, r16
 884:	12 96       	adiw	r26, 0x02	; 2
 886:	ed 91       	ld	r30, X+
 888:	fc 91       	ld	r31, X
 88a:	13 97       	sbiw	r26, 0x03	; 3
 88c:	23 81       	ldd	r18, Z+3	; 0x03
 88e:	27 7f       	andi	r18, 0xF7	; 247
 890:	23 83       	std	Z+3, r18	; 0x03
 892:	e4 e0       	ldi	r30, 0x04	; 4
 894:	0c 94 07 07 	jmp	0xe0e	; 0xe0e <__epilogue_restores__+0x1c>

00000898 <vfprintf>:
 898:	ab e0       	ldi	r26, 0x0B	; 11
 89a:	b0 e0       	ldi	r27, 0x00	; 0
 89c:	e2 e5       	ldi	r30, 0x52	; 82
 89e:	f4 e0       	ldi	r31, 0x04	; 4
 8a0:	0c 94 dd 06 	jmp	0xdba	; 0xdba <__prologue_saves__>
 8a4:	6c 01       	movw	r12, r24
 8a6:	7b 01       	movw	r14, r22
 8a8:	8a 01       	movw	r16, r20
 8aa:	fc 01       	movw	r30, r24
 8ac:	17 82       	std	Z+7, r1	; 0x07
 8ae:	16 82       	std	Z+6, r1	; 0x06
 8b0:	83 81       	ldd	r24, Z+3	; 0x03
 8b2:	81 ff       	sbrs	r24, 1
 8b4:	cc c1       	rjmp	.+920    	; 0xc4e <__stack+0x34f>
 8b6:	ce 01       	movw	r24, r28
 8b8:	01 96       	adiw	r24, 0x01	; 1
 8ba:	3c 01       	movw	r6, r24
 8bc:	f6 01       	movw	r30, r12
 8be:	93 81       	ldd	r25, Z+3	; 0x03
 8c0:	f7 01       	movw	r30, r14
 8c2:	93 fd       	sbrc	r25, 3
 8c4:	85 91       	lpm	r24, Z+
 8c6:	93 ff       	sbrs	r25, 3
 8c8:	81 91       	ld	r24, Z+
 8ca:	7f 01       	movw	r14, r30
 8cc:	88 23       	and	r24, r24
 8ce:	09 f4       	brne	.+2      	; 0x8d2 <vfprintf+0x3a>
 8d0:	ba c1       	rjmp	.+884    	; 0xc46 <__stack+0x347>
 8d2:	85 32       	cpi	r24, 0x25	; 37
 8d4:	39 f4       	brne	.+14     	; 0x8e4 <vfprintf+0x4c>
 8d6:	93 fd       	sbrc	r25, 3
 8d8:	85 91       	lpm	r24, Z+
 8da:	93 ff       	sbrs	r25, 3
 8dc:	81 91       	ld	r24, Z+
 8de:	7f 01       	movw	r14, r30
 8e0:	85 32       	cpi	r24, 0x25	; 37
 8e2:	29 f4       	brne	.+10     	; 0x8ee <vfprintf+0x56>
 8e4:	b6 01       	movw	r22, r12
 8e6:	90 e0       	ldi	r25, 0x00	; 0
 8e8:	0e 94 43 06 	call	0xc86	; 0xc86 <fputc>
 8ec:	e7 cf       	rjmp	.-50     	; 0x8bc <vfprintf+0x24>
 8ee:	91 2c       	mov	r9, r1
 8f0:	21 2c       	mov	r2, r1
 8f2:	31 2c       	mov	r3, r1
 8f4:	ff e1       	ldi	r31, 0x1F	; 31
 8f6:	f3 15       	cp	r31, r3
 8f8:	d8 f0       	brcs	.+54     	; 0x930 <__stack+0x31>
 8fa:	8b 32       	cpi	r24, 0x2B	; 43
 8fc:	79 f0       	breq	.+30     	; 0x91c <__stack+0x1d>
 8fe:	38 f4       	brcc	.+14     	; 0x90e <__stack+0xf>
 900:	80 32       	cpi	r24, 0x20	; 32
 902:	79 f0       	breq	.+30     	; 0x922 <__stack+0x23>
 904:	83 32       	cpi	r24, 0x23	; 35
 906:	a1 f4       	brne	.+40     	; 0x930 <__stack+0x31>
 908:	23 2d       	mov	r18, r3
 90a:	20 61       	ori	r18, 0x10	; 16
 90c:	1d c0       	rjmp	.+58     	; 0x948 <__stack+0x49>
 90e:	8d 32       	cpi	r24, 0x2D	; 45
 910:	61 f0       	breq	.+24     	; 0x92a <__stack+0x2b>
 912:	80 33       	cpi	r24, 0x30	; 48
 914:	69 f4       	brne	.+26     	; 0x930 <__stack+0x31>
 916:	23 2d       	mov	r18, r3
 918:	21 60       	ori	r18, 0x01	; 1
 91a:	16 c0       	rjmp	.+44     	; 0x948 <__stack+0x49>
 91c:	83 2d       	mov	r24, r3
 91e:	82 60       	ori	r24, 0x02	; 2
 920:	38 2e       	mov	r3, r24
 922:	e3 2d       	mov	r30, r3
 924:	e4 60       	ori	r30, 0x04	; 4
 926:	3e 2e       	mov	r3, r30
 928:	2a c0       	rjmp	.+84     	; 0x97e <__stack+0x7f>
 92a:	f3 2d       	mov	r31, r3
 92c:	f8 60       	ori	r31, 0x08	; 8
 92e:	1d c0       	rjmp	.+58     	; 0x96a <__stack+0x6b>
 930:	37 fc       	sbrc	r3, 7
 932:	2d c0       	rjmp	.+90     	; 0x98e <__stack+0x8f>
 934:	20 ed       	ldi	r18, 0xD0	; 208
 936:	28 0f       	add	r18, r24
 938:	2a 30       	cpi	r18, 0x0A	; 10
 93a:	40 f0       	brcs	.+16     	; 0x94c <__stack+0x4d>
 93c:	8e 32       	cpi	r24, 0x2E	; 46
 93e:	b9 f4       	brne	.+46     	; 0x96e <__stack+0x6f>
 940:	36 fc       	sbrc	r3, 6
 942:	81 c1       	rjmp	.+770    	; 0xc46 <__stack+0x347>
 944:	23 2d       	mov	r18, r3
 946:	20 64       	ori	r18, 0x40	; 64
 948:	32 2e       	mov	r3, r18
 94a:	19 c0       	rjmp	.+50     	; 0x97e <__stack+0x7f>
 94c:	36 fe       	sbrs	r3, 6
 94e:	06 c0       	rjmp	.+12     	; 0x95c <__stack+0x5d>
 950:	8a e0       	ldi	r24, 0x0A	; 10
 952:	98 9e       	mul	r9, r24
 954:	20 0d       	add	r18, r0
 956:	11 24       	eor	r1, r1
 958:	92 2e       	mov	r9, r18
 95a:	11 c0       	rjmp	.+34     	; 0x97e <__stack+0x7f>
 95c:	ea e0       	ldi	r30, 0x0A	; 10
 95e:	2e 9e       	mul	r2, r30
 960:	20 0d       	add	r18, r0
 962:	11 24       	eor	r1, r1
 964:	22 2e       	mov	r2, r18
 966:	f3 2d       	mov	r31, r3
 968:	f0 62       	ori	r31, 0x20	; 32
 96a:	3f 2e       	mov	r3, r31
 96c:	08 c0       	rjmp	.+16     	; 0x97e <__stack+0x7f>
 96e:	8c 36       	cpi	r24, 0x6C	; 108
 970:	21 f4       	brne	.+8      	; 0x97a <__stack+0x7b>
 972:	83 2d       	mov	r24, r3
 974:	80 68       	ori	r24, 0x80	; 128
 976:	38 2e       	mov	r3, r24
 978:	02 c0       	rjmp	.+4      	; 0x97e <__stack+0x7f>
 97a:	88 36       	cpi	r24, 0x68	; 104
 97c:	41 f4       	brne	.+16     	; 0x98e <__stack+0x8f>
 97e:	f7 01       	movw	r30, r14
 980:	93 fd       	sbrc	r25, 3
 982:	85 91       	lpm	r24, Z+
 984:	93 ff       	sbrs	r25, 3
 986:	81 91       	ld	r24, Z+
 988:	7f 01       	movw	r14, r30
 98a:	81 11       	cpse	r24, r1
 98c:	b3 cf       	rjmp	.-154    	; 0x8f4 <vfprintf+0x5c>
 98e:	98 2f       	mov	r25, r24
 990:	9f 7d       	andi	r25, 0xDF	; 223
 992:	95 54       	subi	r25, 0x45	; 69
 994:	93 30       	cpi	r25, 0x03	; 3
 996:	28 f4       	brcc	.+10     	; 0x9a2 <__stack+0xa3>
 998:	0c 5f       	subi	r16, 0xFC	; 252
 99a:	1f 4f       	sbci	r17, 0xFF	; 255
 99c:	9f e3       	ldi	r25, 0x3F	; 63
 99e:	99 83       	std	Y+1, r25	; 0x01
 9a0:	0d c0       	rjmp	.+26     	; 0x9bc <__stack+0xbd>
 9a2:	83 36       	cpi	r24, 0x63	; 99
 9a4:	31 f0       	breq	.+12     	; 0x9b2 <__stack+0xb3>
 9a6:	83 37       	cpi	r24, 0x73	; 115
 9a8:	71 f0       	breq	.+28     	; 0x9c6 <__stack+0xc7>
 9aa:	83 35       	cpi	r24, 0x53	; 83
 9ac:	09 f0       	breq	.+2      	; 0x9b0 <__stack+0xb1>
 9ae:	59 c0       	rjmp	.+178    	; 0xa62 <__stack+0x163>
 9b0:	21 c0       	rjmp	.+66     	; 0x9f4 <__stack+0xf5>
 9b2:	f8 01       	movw	r30, r16
 9b4:	80 81       	ld	r24, Z
 9b6:	89 83       	std	Y+1, r24	; 0x01
 9b8:	0e 5f       	subi	r16, 0xFE	; 254
 9ba:	1f 4f       	sbci	r17, 0xFF	; 255
 9bc:	88 24       	eor	r8, r8
 9be:	83 94       	inc	r8
 9c0:	91 2c       	mov	r9, r1
 9c2:	53 01       	movw	r10, r6
 9c4:	13 c0       	rjmp	.+38     	; 0x9ec <__stack+0xed>
 9c6:	28 01       	movw	r4, r16
 9c8:	f2 e0       	ldi	r31, 0x02	; 2
 9ca:	4f 0e       	add	r4, r31
 9cc:	51 1c       	adc	r5, r1
 9ce:	f8 01       	movw	r30, r16
 9d0:	a0 80       	ld	r10, Z
 9d2:	b1 80       	ldd	r11, Z+1	; 0x01
 9d4:	36 fe       	sbrs	r3, 6
 9d6:	03 c0       	rjmp	.+6      	; 0x9de <__stack+0xdf>
 9d8:	69 2d       	mov	r22, r9
 9da:	70 e0       	ldi	r23, 0x00	; 0
 9dc:	02 c0       	rjmp	.+4      	; 0x9e2 <__stack+0xe3>
 9de:	6f ef       	ldi	r22, 0xFF	; 255
 9e0:	7f ef       	ldi	r23, 0xFF	; 255
 9e2:	c5 01       	movw	r24, r10
 9e4:	0e 94 38 06 	call	0xc70	; 0xc70 <strnlen>
 9e8:	4c 01       	movw	r8, r24
 9ea:	82 01       	movw	r16, r4
 9ec:	f3 2d       	mov	r31, r3
 9ee:	ff 77       	andi	r31, 0x7F	; 127
 9f0:	3f 2e       	mov	r3, r31
 9f2:	16 c0       	rjmp	.+44     	; 0xa20 <__stack+0x121>
 9f4:	28 01       	movw	r4, r16
 9f6:	22 e0       	ldi	r18, 0x02	; 2
 9f8:	42 0e       	add	r4, r18
 9fa:	51 1c       	adc	r5, r1
 9fc:	f8 01       	movw	r30, r16
 9fe:	a0 80       	ld	r10, Z
 a00:	b1 80       	ldd	r11, Z+1	; 0x01
 a02:	36 fe       	sbrs	r3, 6
 a04:	03 c0       	rjmp	.+6      	; 0xa0c <__stack+0x10d>
 a06:	69 2d       	mov	r22, r9
 a08:	70 e0       	ldi	r23, 0x00	; 0
 a0a:	02 c0       	rjmp	.+4      	; 0xa10 <__stack+0x111>
 a0c:	6f ef       	ldi	r22, 0xFF	; 255
 a0e:	7f ef       	ldi	r23, 0xFF	; 255
 a10:	c5 01       	movw	r24, r10
 a12:	0e 94 2d 06 	call	0xc5a	; 0xc5a <strnlen_P>
 a16:	4c 01       	movw	r8, r24
 a18:	f3 2d       	mov	r31, r3
 a1a:	f0 68       	ori	r31, 0x80	; 128
 a1c:	3f 2e       	mov	r3, r31
 a1e:	82 01       	movw	r16, r4
 a20:	33 fc       	sbrc	r3, 3
 a22:	1b c0       	rjmp	.+54     	; 0xa5a <__stack+0x15b>
 a24:	82 2d       	mov	r24, r2
 a26:	90 e0       	ldi	r25, 0x00	; 0
 a28:	88 16       	cp	r8, r24
 a2a:	99 06       	cpc	r9, r25
 a2c:	b0 f4       	brcc	.+44     	; 0xa5a <__stack+0x15b>
 a2e:	b6 01       	movw	r22, r12
 a30:	80 e2       	ldi	r24, 0x20	; 32
 a32:	90 e0       	ldi	r25, 0x00	; 0
 a34:	0e 94 43 06 	call	0xc86	; 0xc86 <fputc>
 a38:	2a 94       	dec	r2
 a3a:	f4 cf       	rjmp	.-24     	; 0xa24 <__stack+0x125>
 a3c:	f5 01       	movw	r30, r10
 a3e:	37 fc       	sbrc	r3, 7
 a40:	85 91       	lpm	r24, Z+
 a42:	37 fe       	sbrs	r3, 7
 a44:	81 91       	ld	r24, Z+
 a46:	5f 01       	movw	r10, r30
 a48:	b6 01       	movw	r22, r12
 a4a:	90 e0       	ldi	r25, 0x00	; 0
 a4c:	0e 94 43 06 	call	0xc86	; 0xc86 <fputc>
 a50:	21 10       	cpse	r2, r1
 a52:	2a 94       	dec	r2
 a54:	21 e0       	ldi	r18, 0x01	; 1
 a56:	82 1a       	sub	r8, r18
 a58:	91 08       	sbc	r9, r1
 a5a:	81 14       	cp	r8, r1
 a5c:	91 04       	cpc	r9, r1
 a5e:	71 f7       	brne	.-36     	; 0xa3c <__stack+0x13d>
 a60:	e8 c0       	rjmp	.+464    	; 0xc32 <__stack+0x333>
 a62:	84 36       	cpi	r24, 0x64	; 100
 a64:	11 f0       	breq	.+4      	; 0xa6a <__stack+0x16b>
 a66:	89 36       	cpi	r24, 0x69	; 105
 a68:	41 f5       	brne	.+80     	; 0xaba <__stack+0x1bb>
 a6a:	f8 01       	movw	r30, r16
 a6c:	37 fe       	sbrs	r3, 7
 a6e:	07 c0       	rjmp	.+14     	; 0xa7e <__stack+0x17f>
 a70:	60 81       	ld	r22, Z
 a72:	71 81       	ldd	r23, Z+1	; 0x01
 a74:	82 81       	ldd	r24, Z+2	; 0x02
 a76:	93 81       	ldd	r25, Z+3	; 0x03
 a78:	0c 5f       	subi	r16, 0xFC	; 252
 a7a:	1f 4f       	sbci	r17, 0xFF	; 255
 a7c:	08 c0       	rjmp	.+16     	; 0xa8e <__stack+0x18f>
 a7e:	60 81       	ld	r22, Z
 a80:	71 81       	ldd	r23, Z+1	; 0x01
 a82:	07 2e       	mov	r0, r23
 a84:	00 0c       	add	r0, r0
 a86:	88 0b       	sbc	r24, r24
 a88:	99 0b       	sbc	r25, r25
 a8a:	0e 5f       	subi	r16, 0xFE	; 254
 a8c:	1f 4f       	sbci	r17, 0xFF	; 255
 a8e:	f3 2d       	mov	r31, r3
 a90:	ff 76       	andi	r31, 0x6F	; 111
 a92:	3f 2e       	mov	r3, r31
 a94:	97 ff       	sbrs	r25, 7
 a96:	09 c0       	rjmp	.+18     	; 0xaaa <__stack+0x1ab>
 a98:	90 95       	com	r25
 a9a:	80 95       	com	r24
 a9c:	70 95       	com	r23
 a9e:	61 95       	neg	r22
 aa0:	7f 4f       	sbci	r23, 0xFF	; 255
 aa2:	8f 4f       	sbci	r24, 0xFF	; 255
 aa4:	9f 4f       	sbci	r25, 0xFF	; 255
 aa6:	f0 68       	ori	r31, 0x80	; 128
 aa8:	3f 2e       	mov	r3, r31
 aaa:	2a e0       	ldi	r18, 0x0A	; 10
 aac:	30 e0       	ldi	r19, 0x00	; 0
 aae:	a3 01       	movw	r20, r6
 ab0:	0e 94 7f 06 	call	0xcfe	; 0xcfe <__ultoa_invert>
 ab4:	88 2e       	mov	r8, r24
 ab6:	86 18       	sub	r8, r6
 ab8:	45 c0       	rjmp	.+138    	; 0xb44 <__stack+0x245>
 aba:	85 37       	cpi	r24, 0x75	; 117
 abc:	31 f4       	brne	.+12     	; 0xaca <__stack+0x1cb>
 abe:	23 2d       	mov	r18, r3
 ac0:	2f 7e       	andi	r18, 0xEF	; 239
 ac2:	b2 2e       	mov	r11, r18
 ac4:	2a e0       	ldi	r18, 0x0A	; 10
 ac6:	30 e0       	ldi	r19, 0x00	; 0
 ac8:	25 c0       	rjmp	.+74     	; 0xb14 <__stack+0x215>
 aca:	93 2d       	mov	r25, r3
 acc:	99 7f       	andi	r25, 0xF9	; 249
 ace:	b9 2e       	mov	r11, r25
 ad0:	8f 36       	cpi	r24, 0x6F	; 111
 ad2:	c1 f0       	breq	.+48     	; 0xb04 <__stack+0x205>
 ad4:	18 f4       	brcc	.+6      	; 0xadc <__stack+0x1dd>
 ad6:	88 35       	cpi	r24, 0x58	; 88
 ad8:	79 f0       	breq	.+30     	; 0xaf8 <__stack+0x1f9>
 ada:	b5 c0       	rjmp	.+362    	; 0xc46 <__stack+0x347>
 adc:	80 37       	cpi	r24, 0x70	; 112
 ade:	19 f0       	breq	.+6      	; 0xae6 <__stack+0x1e7>
 ae0:	88 37       	cpi	r24, 0x78	; 120
 ae2:	21 f0       	breq	.+8      	; 0xaec <__stack+0x1ed>
 ae4:	b0 c0       	rjmp	.+352    	; 0xc46 <__stack+0x347>
 ae6:	e9 2f       	mov	r30, r25
 ae8:	e0 61       	ori	r30, 0x10	; 16
 aea:	be 2e       	mov	r11, r30
 aec:	b4 fe       	sbrs	r11, 4
 aee:	0d c0       	rjmp	.+26     	; 0xb0a <__stack+0x20b>
 af0:	fb 2d       	mov	r31, r11
 af2:	f4 60       	ori	r31, 0x04	; 4
 af4:	bf 2e       	mov	r11, r31
 af6:	09 c0       	rjmp	.+18     	; 0xb0a <__stack+0x20b>
 af8:	34 fe       	sbrs	r3, 4
 afa:	0a c0       	rjmp	.+20     	; 0xb10 <__stack+0x211>
 afc:	29 2f       	mov	r18, r25
 afe:	26 60       	ori	r18, 0x06	; 6
 b00:	b2 2e       	mov	r11, r18
 b02:	06 c0       	rjmp	.+12     	; 0xb10 <__stack+0x211>
 b04:	28 e0       	ldi	r18, 0x08	; 8
 b06:	30 e0       	ldi	r19, 0x00	; 0
 b08:	05 c0       	rjmp	.+10     	; 0xb14 <__stack+0x215>
 b0a:	20 e1       	ldi	r18, 0x10	; 16
 b0c:	30 e0       	ldi	r19, 0x00	; 0
 b0e:	02 c0       	rjmp	.+4      	; 0xb14 <__stack+0x215>
 b10:	20 e1       	ldi	r18, 0x10	; 16
 b12:	32 e0       	ldi	r19, 0x02	; 2
 b14:	f8 01       	movw	r30, r16
 b16:	b7 fe       	sbrs	r11, 7
 b18:	07 c0       	rjmp	.+14     	; 0xb28 <__stack+0x229>
 b1a:	60 81       	ld	r22, Z
 b1c:	71 81       	ldd	r23, Z+1	; 0x01
 b1e:	82 81       	ldd	r24, Z+2	; 0x02
 b20:	93 81       	ldd	r25, Z+3	; 0x03
 b22:	0c 5f       	subi	r16, 0xFC	; 252
 b24:	1f 4f       	sbci	r17, 0xFF	; 255
 b26:	06 c0       	rjmp	.+12     	; 0xb34 <__stack+0x235>
 b28:	60 81       	ld	r22, Z
 b2a:	71 81       	ldd	r23, Z+1	; 0x01
 b2c:	80 e0       	ldi	r24, 0x00	; 0
 b2e:	90 e0       	ldi	r25, 0x00	; 0
 b30:	0e 5f       	subi	r16, 0xFE	; 254
 b32:	1f 4f       	sbci	r17, 0xFF	; 255
 b34:	a3 01       	movw	r20, r6
 b36:	0e 94 7f 06 	call	0xcfe	; 0xcfe <__ultoa_invert>
 b3a:	88 2e       	mov	r8, r24
 b3c:	86 18       	sub	r8, r6
 b3e:	fb 2d       	mov	r31, r11
 b40:	ff 77       	andi	r31, 0x7F	; 127
 b42:	3f 2e       	mov	r3, r31
 b44:	36 fe       	sbrs	r3, 6
 b46:	0d c0       	rjmp	.+26     	; 0xb62 <__stack+0x263>
 b48:	23 2d       	mov	r18, r3
 b4a:	2e 7f       	andi	r18, 0xFE	; 254
 b4c:	a2 2e       	mov	r10, r18
 b4e:	89 14       	cp	r8, r9
 b50:	58 f4       	brcc	.+22     	; 0xb68 <__stack+0x269>
 b52:	34 fe       	sbrs	r3, 4
 b54:	0b c0       	rjmp	.+22     	; 0xb6c <__stack+0x26d>
 b56:	32 fc       	sbrc	r3, 2
 b58:	09 c0       	rjmp	.+18     	; 0xb6c <__stack+0x26d>
 b5a:	83 2d       	mov	r24, r3
 b5c:	8e 7e       	andi	r24, 0xEE	; 238
 b5e:	a8 2e       	mov	r10, r24
 b60:	05 c0       	rjmp	.+10     	; 0xb6c <__stack+0x26d>
 b62:	b8 2c       	mov	r11, r8
 b64:	a3 2c       	mov	r10, r3
 b66:	03 c0       	rjmp	.+6      	; 0xb6e <__stack+0x26f>
 b68:	b8 2c       	mov	r11, r8
 b6a:	01 c0       	rjmp	.+2      	; 0xb6e <__stack+0x26f>
 b6c:	b9 2c       	mov	r11, r9
 b6e:	a4 fe       	sbrs	r10, 4
 b70:	0f c0       	rjmp	.+30     	; 0xb90 <__stack+0x291>
 b72:	fe 01       	movw	r30, r28
 b74:	e8 0d       	add	r30, r8
 b76:	f1 1d       	adc	r31, r1
 b78:	80 81       	ld	r24, Z
 b7a:	80 33       	cpi	r24, 0x30	; 48
 b7c:	21 f4       	brne	.+8      	; 0xb86 <__stack+0x287>
 b7e:	9a 2d       	mov	r25, r10
 b80:	99 7e       	andi	r25, 0xE9	; 233
 b82:	a9 2e       	mov	r10, r25
 b84:	09 c0       	rjmp	.+18     	; 0xb98 <__stack+0x299>
 b86:	a2 fe       	sbrs	r10, 2
 b88:	06 c0       	rjmp	.+12     	; 0xb96 <__stack+0x297>
 b8a:	b3 94       	inc	r11
 b8c:	b3 94       	inc	r11
 b8e:	04 c0       	rjmp	.+8      	; 0xb98 <__stack+0x299>
 b90:	8a 2d       	mov	r24, r10
 b92:	86 78       	andi	r24, 0x86	; 134
 b94:	09 f0       	breq	.+2      	; 0xb98 <__stack+0x299>
 b96:	b3 94       	inc	r11
 b98:	a3 fc       	sbrc	r10, 3
 b9a:	11 c0       	rjmp	.+34     	; 0xbbe <__stack+0x2bf>
 b9c:	a0 fe       	sbrs	r10, 0
 b9e:	06 c0       	rjmp	.+12     	; 0xbac <__stack+0x2ad>
 ba0:	b2 14       	cp	r11, r2
 ba2:	88 f4       	brcc	.+34     	; 0xbc6 <__stack+0x2c7>
 ba4:	28 0c       	add	r2, r8
 ba6:	92 2c       	mov	r9, r2
 ba8:	9b 18       	sub	r9, r11
 baa:	0e c0       	rjmp	.+28     	; 0xbc8 <__stack+0x2c9>
 bac:	b2 14       	cp	r11, r2
 bae:	60 f4       	brcc	.+24     	; 0xbc8 <__stack+0x2c9>
 bb0:	b6 01       	movw	r22, r12
 bb2:	80 e2       	ldi	r24, 0x20	; 32
 bb4:	90 e0       	ldi	r25, 0x00	; 0
 bb6:	0e 94 43 06 	call	0xc86	; 0xc86 <fputc>
 bba:	b3 94       	inc	r11
 bbc:	f7 cf       	rjmp	.-18     	; 0xbac <__stack+0x2ad>
 bbe:	b2 14       	cp	r11, r2
 bc0:	18 f4       	brcc	.+6      	; 0xbc8 <__stack+0x2c9>
 bc2:	2b 18       	sub	r2, r11
 bc4:	02 c0       	rjmp	.+4      	; 0xbca <__stack+0x2cb>
 bc6:	98 2c       	mov	r9, r8
 bc8:	21 2c       	mov	r2, r1
 bca:	a4 fe       	sbrs	r10, 4
 bcc:	10 c0       	rjmp	.+32     	; 0xbee <__stack+0x2ef>
 bce:	b6 01       	movw	r22, r12
 bd0:	80 e3       	ldi	r24, 0x30	; 48
 bd2:	90 e0       	ldi	r25, 0x00	; 0
 bd4:	0e 94 43 06 	call	0xc86	; 0xc86 <fputc>
 bd8:	a2 fe       	sbrs	r10, 2
 bda:	17 c0       	rjmp	.+46     	; 0xc0a <__stack+0x30b>
 bdc:	a1 fc       	sbrc	r10, 1
 bde:	03 c0       	rjmp	.+6      	; 0xbe6 <__stack+0x2e7>
 be0:	88 e7       	ldi	r24, 0x78	; 120
 be2:	90 e0       	ldi	r25, 0x00	; 0
 be4:	02 c0       	rjmp	.+4      	; 0xbea <__stack+0x2eb>
 be6:	88 e5       	ldi	r24, 0x58	; 88
 be8:	90 e0       	ldi	r25, 0x00	; 0
 bea:	b6 01       	movw	r22, r12
 bec:	0c c0       	rjmp	.+24     	; 0xc06 <__stack+0x307>
 bee:	8a 2d       	mov	r24, r10
 bf0:	86 78       	andi	r24, 0x86	; 134
 bf2:	59 f0       	breq	.+22     	; 0xc0a <__stack+0x30b>
 bf4:	a1 fe       	sbrs	r10, 1
 bf6:	02 c0       	rjmp	.+4      	; 0xbfc <__stack+0x2fd>
 bf8:	8b e2       	ldi	r24, 0x2B	; 43
 bfa:	01 c0       	rjmp	.+2      	; 0xbfe <__stack+0x2ff>
 bfc:	80 e2       	ldi	r24, 0x20	; 32
 bfe:	a7 fc       	sbrc	r10, 7
 c00:	8d e2       	ldi	r24, 0x2D	; 45
 c02:	b6 01       	movw	r22, r12
 c04:	90 e0       	ldi	r25, 0x00	; 0
 c06:	0e 94 43 06 	call	0xc86	; 0xc86 <fputc>
 c0a:	89 14       	cp	r8, r9
 c0c:	38 f4       	brcc	.+14     	; 0xc1c <__stack+0x31d>
 c0e:	b6 01       	movw	r22, r12
 c10:	80 e3       	ldi	r24, 0x30	; 48
 c12:	90 e0       	ldi	r25, 0x00	; 0
 c14:	0e 94 43 06 	call	0xc86	; 0xc86 <fputc>
 c18:	9a 94       	dec	r9
 c1a:	f7 cf       	rjmp	.-18     	; 0xc0a <__stack+0x30b>
 c1c:	8a 94       	dec	r8
 c1e:	f3 01       	movw	r30, r6
 c20:	e8 0d       	add	r30, r8
 c22:	f1 1d       	adc	r31, r1
 c24:	80 81       	ld	r24, Z
 c26:	b6 01       	movw	r22, r12
 c28:	90 e0       	ldi	r25, 0x00	; 0
 c2a:	0e 94 43 06 	call	0xc86	; 0xc86 <fputc>
 c2e:	81 10       	cpse	r8, r1
 c30:	f5 cf       	rjmp	.-22     	; 0xc1c <__stack+0x31d>
 c32:	22 20       	and	r2, r2
 c34:	09 f4       	brne	.+2      	; 0xc38 <__stack+0x339>
 c36:	42 ce       	rjmp	.-892    	; 0x8bc <vfprintf+0x24>
 c38:	b6 01       	movw	r22, r12
 c3a:	80 e2       	ldi	r24, 0x20	; 32
 c3c:	90 e0       	ldi	r25, 0x00	; 0
 c3e:	0e 94 43 06 	call	0xc86	; 0xc86 <fputc>
 c42:	2a 94       	dec	r2
 c44:	f6 cf       	rjmp	.-20     	; 0xc32 <__stack+0x333>
 c46:	f6 01       	movw	r30, r12
 c48:	86 81       	ldd	r24, Z+6	; 0x06
 c4a:	97 81       	ldd	r25, Z+7	; 0x07
 c4c:	02 c0       	rjmp	.+4      	; 0xc52 <__stack+0x353>
 c4e:	8f ef       	ldi	r24, 0xFF	; 255
 c50:	9f ef       	ldi	r25, 0xFF	; 255
 c52:	2b 96       	adiw	r28, 0x0b	; 11
 c54:	e2 e1       	ldi	r30, 0x12	; 18
 c56:	0c 94 f9 06 	jmp	0xdf2	; 0xdf2 <__epilogue_restores__>

00000c5a <strnlen_P>:
 c5a:	fc 01       	movw	r30, r24
 c5c:	05 90       	lpm	r0, Z+
 c5e:	61 50       	subi	r22, 0x01	; 1
 c60:	70 40       	sbci	r23, 0x00	; 0
 c62:	01 10       	cpse	r0, r1
 c64:	d8 f7       	brcc	.-10     	; 0xc5c <strnlen_P+0x2>
 c66:	80 95       	com	r24
 c68:	90 95       	com	r25
 c6a:	8e 0f       	add	r24, r30
 c6c:	9f 1f       	adc	r25, r31
 c6e:	08 95       	ret

00000c70 <strnlen>:
 c70:	fc 01       	movw	r30, r24
 c72:	61 50       	subi	r22, 0x01	; 1
 c74:	70 40       	sbci	r23, 0x00	; 0
 c76:	01 90       	ld	r0, Z+
 c78:	01 10       	cpse	r0, r1
 c7a:	d8 f7       	brcc	.-10     	; 0xc72 <strnlen+0x2>
 c7c:	80 95       	com	r24
 c7e:	90 95       	com	r25
 c80:	8e 0f       	add	r24, r30
 c82:	9f 1f       	adc	r25, r31
 c84:	08 95       	ret

00000c86 <fputc>:
 c86:	0f 93       	push	r16
 c88:	1f 93       	push	r17
 c8a:	cf 93       	push	r28
 c8c:	df 93       	push	r29
 c8e:	fb 01       	movw	r30, r22
 c90:	23 81       	ldd	r18, Z+3	; 0x03
 c92:	21 fd       	sbrc	r18, 1
 c94:	03 c0       	rjmp	.+6      	; 0xc9c <fputc+0x16>
 c96:	8f ef       	ldi	r24, 0xFF	; 255
 c98:	9f ef       	ldi	r25, 0xFF	; 255
 c9a:	2c c0       	rjmp	.+88     	; 0xcf4 <fputc+0x6e>
 c9c:	22 ff       	sbrs	r18, 2
 c9e:	16 c0       	rjmp	.+44     	; 0xccc <fputc+0x46>
 ca0:	46 81       	ldd	r20, Z+6	; 0x06
 ca2:	57 81       	ldd	r21, Z+7	; 0x07
 ca4:	24 81       	ldd	r18, Z+4	; 0x04
 ca6:	35 81       	ldd	r19, Z+5	; 0x05
 ca8:	42 17       	cp	r20, r18
 caa:	53 07       	cpc	r21, r19
 cac:	44 f4       	brge	.+16     	; 0xcbe <fputc+0x38>
 cae:	a0 81       	ld	r26, Z
 cb0:	b1 81       	ldd	r27, Z+1	; 0x01
 cb2:	9d 01       	movw	r18, r26
 cb4:	2f 5f       	subi	r18, 0xFF	; 255
 cb6:	3f 4f       	sbci	r19, 0xFF	; 255
 cb8:	31 83       	std	Z+1, r19	; 0x01
 cba:	20 83       	st	Z, r18
 cbc:	8c 93       	st	X, r24
 cbe:	26 81       	ldd	r18, Z+6	; 0x06
 cc0:	37 81       	ldd	r19, Z+7	; 0x07
 cc2:	2f 5f       	subi	r18, 0xFF	; 255
 cc4:	3f 4f       	sbci	r19, 0xFF	; 255
 cc6:	37 83       	std	Z+7, r19	; 0x07
 cc8:	26 83       	std	Z+6, r18	; 0x06
 cca:	14 c0       	rjmp	.+40     	; 0xcf4 <fputc+0x6e>
 ccc:	8b 01       	movw	r16, r22
 cce:	ec 01       	movw	r28, r24
 cd0:	fb 01       	movw	r30, r22
 cd2:	00 84       	ldd	r0, Z+8	; 0x08
 cd4:	f1 85       	ldd	r31, Z+9	; 0x09
 cd6:	e0 2d       	mov	r30, r0
 cd8:	09 95       	icall
 cda:	89 2b       	or	r24, r25
 cdc:	e1 f6       	brne	.-72     	; 0xc96 <fputc+0x10>
 cde:	d8 01       	movw	r26, r16
 ce0:	16 96       	adiw	r26, 0x06	; 6
 ce2:	8d 91       	ld	r24, X+
 ce4:	9c 91       	ld	r25, X
 ce6:	17 97       	sbiw	r26, 0x07	; 7
 ce8:	01 96       	adiw	r24, 0x01	; 1
 cea:	17 96       	adiw	r26, 0x07	; 7
 cec:	9c 93       	st	X, r25
 cee:	8e 93       	st	-X, r24
 cf0:	16 97       	sbiw	r26, 0x06	; 6
 cf2:	ce 01       	movw	r24, r28
 cf4:	df 91       	pop	r29
 cf6:	cf 91       	pop	r28
 cf8:	1f 91       	pop	r17
 cfa:	0f 91       	pop	r16
 cfc:	08 95       	ret

00000cfe <__ultoa_invert>:
 cfe:	fa 01       	movw	r30, r20
 d00:	aa 27       	eor	r26, r26
 d02:	28 30       	cpi	r18, 0x08	; 8
 d04:	51 f1       	breq	.+84     	; 0xd5a <__ultoa_invert+0x5c>
 d06:	20 31       	cpi	r18, 0x10	; 16
 d08:	81 f1       	breq	.+96     	; 0xd6a <__ultoa_invert+0x6c>
 d0a:	e8 94       	clt
 d0c:	6f 93       	push	r22
 d0e:	6e 7f       	andi	r22, 0xFE	; 254
 d10:	6e 5f       	subi	r22, 0xFE	; 254
 d12:	7f 4f       	sbci	r23, 0xFF	; 255
 d14:	8f 4f       	sbci	r24, 0xFF	; 255
 d16:	9f 4f       	sbci	r25, 0xFF	; 255
 d18:	af 4f       	sbci	r26, 0xFF	; 255
 d1a:	b1 e0       	ldi	r27, 0x01	; 1
 d1c:	3e d0       	rcall	.+124    	; 0xd9a <__ultoa_invert+0x9c>
 d1e:	b4 e0       	ldi	r27, 0x04	; 4
 d20:	3c d0       	rcall	.+120    	; 0xd9a <__ultoa_invert+0x9c>
 d22:	67 0f       	add	r22, r23
 d24:	78 1f       	adc	r23, r24
 d26:	89 1f       	adc	r24, r25
 d28:	9a 1f       	adc	r25, r26
 d2a:	a1 1d       	adc	r26, r1
 d2c:	68 0f       	add	r22, r24
 d2e:	79 1f       	adc	r23, r25
 d30:	8a 1f       	adc	r24, r26
 d32:	91 1d       	adc	r25, r1
 d34:	a1 1d       	adc	r26, r1
 d36:	6a 0f       	add	r22, r26
 d38:	71 1d       	adc	r23, r1
 d3a:	81 1d       	adc	r24, r1
 d3c:	91 1d       	adc	r25, r1
 d3e:	a1 1d       	adc	r26, r1
 d40:	20 d0       	rcall	.+64     	; 0xd82 <__ultoa_invert+0x84>
 d42:	09 f4       	brne	.+2      	; 0xd46 <__ultoa_invert+0x48>
 d44:	68 94       	set
 d46:	3f 91       	pop	r19
 d48:	2a e0       	ldi	r18, 0x0A	; 10
 d4a:	26 9f       	mul	r18, r22
 d4c:	11 24       	eor	r1, r1
 d4e:	30 19       	sub	r19, r0
 d50:	30 5d       	subi	r19, 0xD0	; 208
 d52:	31 93       	st	Z+, r19
 d54:	de f6       	brtc	.-74     	; 0xd0c <__ultoa_invert+0xe>
 d56:	cf 01       	movw	r24, r30
 d58:	08 95       	ret
 d5a:	46 2f       	mov	r20, r22
 d5c:	47 70       	andi	r20, 0x07	; 7
 d5e:	40 5d       	subi	r20, 0xD0	; 208
 d60:	41 93       	st	Z+, r20
 d62:	b3 e0       	ldi	r27, 0x03	; 3
 d64:	0f d0       	rcall	.+30     	; 0xd84 <__ultoa_invert+0x86>
 d66:	c9 f7       	brne	.-14     	; 0xd5a <__ultoa_invert+0x5c>
 d68:	f6 cf       	rjmp	.-20     	; 0xd56 <__ultoa_invert+0x58>
 d6a:	46 2f       	mov	r20, r22
 d6c:	4f 70       	andi	r20, 0x0F	; 15
 d6e:	40 5d       	subi	r20, 0xD0	; 208
 d70:	4a 33       	cpi	r20, 0x3A	; 58
 d72:	18 f0       	brcs	.+6      	; 0xd7a <__ultoa_invert+0x7c>
 d74:	49 5d       	subi	r20, 0xD9	; 217
 d76:	31 fd       	sbrc	r19, 1
 d78:	40 52       	subi	r20, 0x20	; 32
 d7a:	41 93       	st	Z+, r20
 d7c:	02 d0       	rcall	.+4      	; 0xd82 <__ultoa_invert+0x84>
 d7e:	a9 f7       	brne	.-22     	; 0xd6a <__ultoa_invert+0x6c>
 d80:	ea cf       	rjmp	.-44     	; 0xd56 <__ultoa_invert+0x58>
 d82:	b4 e0       	ldi	r27, 0x04	; 4
 d84:	a6 95       	lsr	r26
 d86:	97 95       	ror	r25
 d88:	87 95       	ror	r24
 d8a:	77 95       	ror	r23
 d8c:	67 95       	ror	r22
 d8e:	ba 95       	dec	r27
 d90:	c9 f7       	brne	.-14     	; 0xd84 <__ultoa_invert+0x86>
 d92:	00 97       	sbiw	r24, 0x00	; 0
 d94:	61 05       	cpc	r22, r1
 d96:	71 05       	cpc	r23, r1
 d98:	08 95       	ret
 d9a:	9b 01       	movw	r18, r22
 d9c:	ac 01       	movw	r20, r24
 d9e:	0a 2e       	mov	r0, r26
 da0:	06 94       	lsr	r0
 da2:	57 95       	ror	r21
 da4:	47 95       	ror	r20
 da6:	37 95       	ror	r19
 da8:	27 95       	ror	r18
 daa:	ba 95       	dec	r27
 dac:	c9 f7       	brne	.-14     	; 0xda0 <__ultoa_invert+0xa2>
 dae:	62 0f       	add	r22, r18
 db0:	73 1f       	adc	r23, r19
 db2:	84 1f       	adc	r24, r20
 db4:	95 1f       	adc	r25, r21
 db6:	a0 1d       	adc	r26, r0
 db8:	08 95       	ret

00000dba <__prologue_saves__>:
 dba:	2f 92       	push	r2
 dbc:	3f 92       	push	r3
 dbe:	4f 92       	push	r4
 dc0:	5f 92       	push	r5
 dc2:	6f 92       	push	r6
 dc4:	7f 92       	push	r7
 dc6:	8f 92       	push	r8
 dc8:	9f 92       	push	r9
 dca:	af 92       	push	r10
 dcc:	bf 92       	push	r11
 dce:	cf 92       	push	r12
 dd0:	df 92       	push	r13
 dd2:	ef 92       	push	r14
 dd4:	ff 92       	push	r15
 dd6:	0f 93       	push	r16
 dd8:	1f 93       	push	r17
 dda:	cf 93       	push	r28
 ddc:	df 93       	push	r29
 dde:	cd b7       	in	r28, 0x3d	; 61
 de0:	de b7       	in	r29, 0x3e	; 62
 de2:	ca 1b       	sub	r28, r26
 de4:	db 0b       	sbc	r29, r27
 de6:	0f b6       	in	r0, 0x3f	; 63
 de8:	f8 94       	cli
 dea:	de bf       	out	0x3e, r29	; 62
 dec:	0f be       	out	0x3f, r0	; 63
 dee:	cd bf       	out	0x3d, r28	; 61
 df0:	09 94       	ijmp

00000df2 <__epilogue_restores__>:
 df2:	2a 88       	ldd	r2, Y+18	; 0x12
 df4:	39 88       	ldd	r3, Y+17	; 0x11
 df6:	48 88       	ldd	r4, Y+16	; 0x10
 df8:	5f 84       	ldd	r5, Y+15	; 0x0f
 dfa:	6e 84       	ldd	r6, Y+14	; 0x0e
 dfc:	7d 84       	ldd	r7, Y+13	; 0x0d
 dfe:	8c 84       	ldd	r8, Y+12	; 0x0c
 e00:	9b 84       	ldd	r9, Y+11	; 0x0b
 e02:	aa 84       	ldd	r10, Y+10	; 0x0a
 e04:	b9 84       	ldd	r11, Y+9	; 0x09
 e06:	c8 84       	ldd	r12, Y+8	; 0x08
 e08:	df 80       	ldd	r13, Y+7	; 0x07
 e0a:	ee 80       	ldd	r14, Y+6	; 0x06
 e0c:	fd 80       	ldd	r15, Y+5	; 0x05
 e0e:	0c 81       	ldd	r16, Y+4	; 0x04
 e10:	1b 81       	ldd	r17, Y+3	; 0x03
 e12:	aa 81       	ldd	r26, Y+2	; 0x02
 e14:	b9 81       	ldd	r27, Y+1	; 0x01
 e16:	ce 0f       	add	r28, r30
 e18:	d1 1d       	adc	r29, r1
 e1a:	0f b6       	in	r0, 0x3f	; 63
 e1c:	f8 94       	cli
 e1e:	de bf       	out	0x3e, r29	; 62
 e20:	0f be       	out	0x3f, r0	; 63
 e22:	cd bf       	out	0x3d, r28	; 61
 e24:	ed 01       	movw	r28, r26
 e26:	08 95       	ret

00000e28 <_exit>:
 e28:	f8 94       	cli

00000e2a <__stop_program>:
 e2a:	ff cf       	rjmp	.-2      	; 0xe2a <__stop_program>
