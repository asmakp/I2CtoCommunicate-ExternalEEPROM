
lab4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000030  00800100  00000d72  00000e06  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d72  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  00800130  00800130  00000e36  2**0
                  ALLOC
  3 .stab         000023b8  00000000  00000000  00000e38  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000011e3  00000000  00000000  000031f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  000043d3  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000043e4  2**2
                  CONTENTS, READONLY
  7 .debug_info   000005f4  00000000  00000000  00004424  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000005a2  00000000  00000000  00004a18  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000001a  00000000  00000000  00004fba  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000208  00000000  00000000  00004fd4  2**0
                  CONTENTS, READONLY, DEBUGGING
Contents of section .data:
 800100 00000002 00000000 12010000 00001401  ................
 800110 1d012601 48617070 79202020 006e6577  ..&.Happy   .new
 800120 20202020 20007965 61722020 20200000       .year    ..
Contents of section .text:
 0000 0c94f300 0c941001 0c941001 0c941001  ................
 0010 0c941001 0c941001 0c941001 0c941001  ................
 0020 0c941001 0c941001 0c941001 0c941001  ................
 0030 0c941001 0c941001 0c941001 0c941001  ................
 0040 0c941001 0c941001 0c941001 0c941001  ................
 0050 0c941001 0c941001 0c941001 0c941001  ................
 0060 0c941001 0c941001 82016801 68016801  ..........h.h.h.
 0070 68016801 68016801 8b016801 68016801  h.h.h.h...h.h.h.
 0080 68016801 68016801 94016801 68016801  h.h.h.h...h.h.h.
 0090 68016801 68016801 9d016801 68016801  h.h.h.h...h.h.h.
 00a0 68016801 68016801 a6016801 68016801  h.h.h.h...h.h.h.
 00b0 68016801 68016801 af016801 68016801  h.h.h.h...h.h.h.
 00c0 68016801 68016801 b8016801 68016801  h.h.h.h...h.h.h.
 00d0 68016801 68016801 c1016801 68016801  h.h.h.h...h.h.h.
 00e0 68016801 68016801 ca016801 68016801  h.h.h.h...h.h.h.
 00f0 68016801 68016801 d3016801 68016801  h.h.h.h...h.h.h.
 0100 68016801 68016801 79012558 20000a20  h.h.h.h.y.%X .. 
 0110 4d792048 45582020 73747269 6e672020  My HEX  string  
 0120 0a002563 2020000a 204d7920 73747269  ..%c  .. My stri
 0130 6e672069 6e202041 53434949 20636861  ng in  ASCII cha
 0140 72200a00 4e2f4120 25303258 0a004d52  r ..N/A %02X..MR
 0150 20444154 412b522c 204e414b 0a004d52   DATA+R, NAK..MR
 0160 20444154 412b522c 2041434b 0a004d52   DATA+R, ACK..MR
 0170 20534c41 2b522c20 4e414b0a 004d5220   SLA+R, NAK..MR 
 0180 534c412b 522c2041 434b0a00 4d542044  SLA+R, ACK..MT D
 0190 4154412b 572c204e 414b0a00 4d542044  ATA+W, NAK..MT D
 01a0 4154412b 572c2041 434b0a00 4d542053  ATA+W, ACK..MT S
 01b0 4c412b57 2c204e41 4b0a004d 5420534c  LA+W, NAK..MT SL
 01c0 412b572c 2041434b 0a004e4f 4152422f  A+W, ACK..NOARB/
 01d0 4e414b0a 00524553 54415254 0a005354  NAK..RESTART..ST
 01e0 4152540a 00001124 1fbecfef d8e0debf  ART....$........
 01f0 cdbf11e0 a0e0b1e0 e2e7fde0 02c00590  ................
 0200 0d92a033 b107d9f7 21e0a0e3 b1e001c0  ...3....!.......
 0210 1d92a733 b207e1f7 0e945503 0c94b706  ...3......U.....
 0220 0c940000 cf93c82f 8a3051f0 8091c000  ......./.0Q.....
 0230 85fffccf c093c600 80e090e0 cf910895  ................
 0240 60e070e0 8de00e94 1201f0cf 1092c500  `.p.............
 0250 89e18093 c4001092 c00088e1 8093c100  ................
 0260 86e08093 c20080e0 91e09093 34018093  ............4...
 0270 33010895 8091c000 87fffccf 8091c600  3...............
 0280 08950895 ece7f0e0 80e68083 80818083  ................
 0290 8be88093 7a000895 80933001 08958091  ....z.....0.....
 02a0 30010895 0895e9eb f0e08081 80838081  0...............
 02b0 81608083 82e18093 b80084e0 8093bc00  .`..............
 02c0 0895482f 50e0fa01 3897e135 f10568f0  ..H/P...8..5..h.
 02d0 1f928f93 84e491e0 9f938f93 0e94c903  ................
 02e0 0f900f90 0f900f90 0895ec5c ff4f0c94  ...........\.O..
 02f0 c3038ee4 91e09f93 8f930e94 c9030f90  ................
 0300 0f900895 8eed91e0 9f938f93 0e94c903  ................
 0310 0f900f90 089585ed 91e09f93 8f930e94  ................
 0320 c9030f90 0f900895 8beb91e0 9f938f93  ................
 0330 0e94c903 0f900f90 08958cea 91e09f93  ................
 0340 8f930e94 c9030f90 0f900895 8ce991e0  ................
 0350 9f938f93 0e94c903 0f900f90 08958ce8  ................
 0360 91e09f93 8f930e94 c9030f90 0f900895  ................
 0370 8aec91e0 9f938f93 0e94c903 0f900f90  ................
 0380 08958de7 91e09f93 8f930e94 c9030f90  ................
 0390 0f900895 8ee691e0 9f938f93 0e94c903  ................
 03a0 0f900f90 08958ee5 91e09f93 8f930e94  ................
 03b0 c9030f90 0f900895 84ea8093 bc008091  ................
 03c0 bc0087ff fccf0895 84e98093 bc008091  ................
 03d0 bc0084fd fccf0895 8091b900 887f0895  ................
 03e0 8e7f6170 682b6093 bb0084e8 8093bc00  ..aph+`.........
 03f0 8091bc00 87fffccf 08958093 bb0084e8  ................
 0400 8093bc00 8091bc00 87fffccf 089584ec  ................
 0410 8093bc00 8091bc00 87fffccf 8091bb00  ................
 0420 089584e8 8093bc00 8091bc00 87fffccf  ................
 0430 8091bb00 089534ea 20ea94e8 3093bc00  ......4. ...0...
 0440 8091bc00 87fffccf 2093bb00 9093bc00  ........ .......
 0450 8091bc00 87fffccf 8091b900 887f8831  ...............1
 0460 69f70895 94ea9093 bc009091 bc0097ff  i...............
 0470 fccf90ea 9093bb00 94e89093 bc009091  ................
 0480 bc0097ff fccf8093 bb0084e8 8093bc00  ................
 0490 8091bc00 87fffccf 84ea8093 bc008091  ................
 04a0 bc0087ff fccf81ea 8093bb00 84e88093  ................
 04b0 bc008091 bc0087ff fccf84e8 8093bc00  ................
 04c0 8091bc00 87fffccf 8091bb00 94e99093  ................
 04d0 bc009091 bc0094fd fccf0895 94ea9093  ................
 04e0 bc009091 bc0097ff fccf90ea 9093bb00  ................
 04f0 94e89093 bc009091 bc0097ff fccf8093  ................
 0500 bb0084e8 8093bc00 8091bc00 87fffccf  ................
 0510 6093bb00 84e88093 bc008091 bc0087ff  `...............
 0520 fccf84e9 8093bc00 8091bc00 84fdfccf  ................
 0530 34ea20ea 94e83093 bc008091 bc0087ff  4. ...0.........
 0540 fccf2093 bb009093 bc008091 bc0087ff  .. .............
 0550 fccf8091 b900887f 883169f7 0895fb01  .........1i.....
 0560 208194ea 9093bc00 9091bc00 97fffccf   ...............
 0570 90ea9093 bb0094e8 9093bc00 9091bc00  ................
 0580 97fffccf 8093bb00 84e88093 bc008091  ................
 0590 bc0087ff fccffb01 3196675f 7f4f94e8  ........1.g_.O..
 05a0 2093bb00 9093bc00 8091bc00 87fffccf   ...............
 05b0 2191e617 f707a1f7 84e98093 bc008091  !...............
 05c0 bc0084fd fccf34ea 20ea94e8 3093bc00  ......4. ...0...
 05d0 8091bc00 87fffccf 2093bb00 9093bc00  ........ .......
 05e0 8091bc00 87fffccf 8091b900 887f8831  ...............1
 05f0 69f70895 24ea2093 bc002091 bc0027ff  i...$. ... ...'.
 0600 fccf20ea 2093bb00 24e82093 bc002091  .. . ...$. ... .
 0610 bc0027ff fccf6093 bb0024e8 2093bc00  ..'...`...$. ...
 0620 2091bc00 27fffccf 24ea2093 bc002091   ...'...$. ... .
 0630 bc0027ff fccf21ea 2093bb00 24e82093  ..'...!. ...$. .
 0640 bc002091 bc0027ff fccf50e0 41155105  .. ...'...P.A.Q.
 0650 d1f0ba01 61507109 fc0120e0 30e094ec  ....aPq... .0...
 0660 a4e89093 bc008091 bc0087ff fccf8091  ................
 0670 bb002617 370779f0 80832f5f 3f4f3196  ..&.7.y.../_?O1.
 0680 24173507 71f784e9 8093bc00 8091bc00  $.5.q...........
 0690 84fdfccf 0895a093 bc008091 bc0087ff  ................
 06a0 fccf8091 bb008083 e8cfcf93 df93cdb7  ................
 06b0 deb76e97 0fb6f894 debf0fbe cdbf0e94  ..n.............
 06c0 53010e94 26017894 86e0eee0 f1e0de01  S...&.x.........
 06d0 59960190 0d928a95 e1f7698d 7a8d80e1  Y.........i.z...
 06e0 0e94af02 6b8d7c8d 88e10e94 af026d8d  ....k.|.......m.
 06f0 7e8d80e2 0e94af02 48e160e1 ce010196  ~.......H.`.....
 0700 0e94fa02 87e291e0 9f938f93 0e94c903  ................
 0710 8e010f5f 1f4f6e01 88e1c80e d11c0f90  ..._.On.........
 0720 0f907801 92e2a92e 91e0b92e f7018191  ..x.............
 0730 7f011f92 8f93bf92 af920e94 c9030f90  ................
 0740 0f900f90 0f90ec14 fd0481f7 8ee091e0  ................
 0750 9f938f93 0e94c903 0f900f90 8ae0e82e  ................
 0760 81e0f82e f8018191 8f011f92 8f93ff92  ................
 0770 ef920e94 c9030f90 0f900f90 0f900c15  ................
 0780 1d0581f7 ffcfee0f ff1f0590 f491e02d  ...............-
 0790 0994a0e0 b0e0efec f3e00c94 8e06ae01  ................
 07a0 495f5f4f da016d91 7d91ad01 01e311e0  I__O..m.}.......
 07b0 f8018281 9381dc01 13962c91 13972860  ..........,...(`
 07c0 13962c93 0e94ef03 d8011296 ed91fc91  ..,.............
 07d0 13972381 277f2383 e4e00c94 aa06abe0  ..#.'.#.........
 07e0 b0e0e5ef f3e00c94 80066c01 7b018a01  ..........l.{...
 07f0 fc011782 16828381 81ffccc1 ce010196  ................
 0800 3c01f601 9381f701 93fd8591 93ff8191  <...............
 0810 7f018823 09f4bac1 853239f4 93fd8591  ...#.....29.....
 0820 93ff8191 7f018532 29f4b601 90e00e94  .......2).......
 0830 e605e7cf 912c212c 312cffe1 f315d8f0  .....,!,1,......
 0840 8b3279f0 38f48032 79f08332 a1f4232d  .2y.8..2y..2..#-
 0850 20611dc0 8d3261f0 803369f4 232d2160   a...2a..3i.#-!`
 0860 16c0832d 8260382e e32de460 3e2e2ac0  ...-.`8..-.`>.*.
 0870 f32df860 1dc037fc 2dc020ed 280f2a30  .-.`..7.-. .(.*0
 0880 40f08e32 b9f436fc 81c1232d 2064322e  @..2..6...#- d2.
 0890 19c036fe 06c08ae0 989e200d 1124922e  ..6....... ..$..
 08a0 11c0eae0 2e9e200d 1124222e f32df062  ...... ..$"..-.b
 08b0 3f2e08c0 8c3621f4 832d8068 382e02c0  ?....6!..-.h8...
 08c0 883641f4 f70193fd 859193ff 81917f01  .6A.............
 08d0 8111b3cf 982f9f7d 95549330 28f40c5f  ...../.}.T.0(.._
 08e0 1f4f9fe3 99830dc0 833631f0 833771f0  .O.......61..7q.
 08f0 833509f0 59c021c0 f8018081 89830e5f  .5..Y.!........_
 0900 1f4f8824 8394912c 530113c0 2801f2e0  .O.$...,S...(...
 0910 4f0e511c f801a080 b18036fe 03c0692d  O.Q.......6...i-
 0920 70e002c0 6fef7fef c5010e94 db054c01  p...o.........L.
 0930 8201f32d ff773f2e 16c02801 22e0420e  ...-.w?...(.".B.
 0940 511cf801 a080b180 36fe03c0 692d70e0  Q.......6...i-p.
 0950 02c06fef 7fefc501 0e94d005 4c01f32d  ..o.........L..-
 0960 f0683f2e 820133fc 1bc0822d 90e08816  .h?...3....-....
 0970 9906b0f4 b60180e2 90e00e94 e6052a94  ..............*.
 0980 f4cff501 37fc8591 37fe8191 5f01b601  ....7...7..._...
 0990 90e00e94 e6052110 2a9421e0 821a9108  ......!.*.!.....
 09a0 81149104 71f7e8c0 843611f0 893641f5  ....q....6...6A.
 09b0 f80137fe 07c06081 71818281 93810c5f  ..7...`.q......_
 09c0 1f4f08c0 60817181 072e000c 880b990b  .O..`.q.........
 09d0 0e5f1f4f f32dff76 3f2e97ff 09c09095  ._.O.-.v?.......
 09e0 80957095 61957f4f 8f4f9f4f f0683f2e  ..p.a..O.O.O.h?.
 09f0 2ae030e0 a3010e94 2206882e 861845c0  *.0.....".....E.
 0a00 853731f4 232d2f7e b22e2ae0 30e025c0  .71.#-/~..*.0.%.
 0a10 932d997f b92e8f36 c1f018f4 883579f0  .-.....6.....5y.
 0a20 b5c08037 19f08837 21f0b0c0 e92fe061  ...7...7!..../.a
 0a30 be2eb4fe 0dc0fb2d f460bf2e 09c034fe  .......-.`....4.
 0a40 0ac0292f 2660b22e 06c028e0 30e005c0  ..)/&`....(.0...
 0a50 20e130e0 02c020e1 32e0f801 b7fe07c0   .0... .2.......
 0a60 60817181 82819381 0c5f1f4f 06c06081  `.q......_.O..`.
 0a70 718180e0 90e00e5f 1f4fa301 0e942206  q......_.O....".
 0a80 882e8618 fb2dff77 3f2e36fe 0dc0232d  .....-.w?.6...#-
 0a90 2e7fa22e 891458f4 34fe0bc0 32fc09c0  ......X.4...2...
 0aa0 832d8e7e a82e05c0 b82ca32c 03c0b82c  .-.~.....,.,...,
 0ab0 01c0b92c a4fe0fc0 fe01e80d f11d8081  ...,............
 0ac0 803321f4 9a2d997e a92e09c0 a2fe06c0  .3!..-.~........
 0ad0 b394b394 04c08a2d 867809f0 b394a3fc  .......-.x......
 0ae0 11c0a0fe 06c0b214 88f4280c 922c9b18  ..........(..,..
 0af0 0ec0b214 60f4b601 80e290e0 0e94e605  ....`...........
 0b00 b394f7cf b21418f4 2b1802c0 982c212c  ........+....,!,
 0b10 a4fe10c0 b60180e3 90e00e94 e605a2fe  ................
 0b20 17c0a1fc 03c088e7 90e002c0 88e590e0  ................
 0b30 b6010cc0 8a2d8678 59f0a1fe 02c08be2  .....-.xY.......
 0b40 01c080e2 a7fc8de2 b60190e0 0e94e605  ................
 0b50 891438f4 b60180e3 90e00e94 e6059a94  ..8.............
 0b60 f7cf8a94 f301e80d f11d8081 b60190e0  ................
 0b70 0e94e605 8110f5cf 222009f4 42ceb601  ........" ..B...
 0b80 80e290e0 0e94e605 2a94f6cf f6018681  ........*.......
 0b90 978102c0 8fef9fef 2b96e2e1 0c949c06  ........+.......
 0ba0 fc010590 61507040 0110d8f7 80959095  ....aPp@........
 0bb0 8e0f9f1f 0895fc01 61507040 01900110  ........aPp@....
 0bc0 d8f78095 90958e0f 9f1f0895 0f931f93  ................
 0bd0 cf93df93 fb012381 21fd03c0 8fef9fef  ......#.!.......
 0be0 2cc022ff 16c04681 57812481 35814217  ,."...F.W.$.5.B.
 0bf0 530744f4 a081b181 9d012f5f 3f4f3183  S.D......./_?O1.
 0c00 20838c93 26813781 2f5f3f4f 37832683   ...&.7./_?O7.&.
 0c10 14c08b01 ec01fb01 0084f185 e02d0995  .............-..
 0c20 892be1f6 d8011696 8d919c91 17970196  .+..............
 0c30 17969c93 8e931697 ce01df91 cf911f91  ................
 0c40 0f910895 fa01aa27 283051f1 203181f1  .......'(0Q. 1..
 0c50 e8946f93 6e7f6e5f 7f4f8f4f 9f4faf4f  ..o.n.n_.O.O.O.O
 0c60 b1e03ed0 b4e03cd0 670f781f 891f9a1f  ..>...<.g.x.....
 0c70 a11d680f 791f8a1f 911da11d 6a0f711d  ..h.y.......j.q.
 0c80 811d911d a11d20d0 09f46894 3f912ae0  ...... ...h.?.*.
 0c90 269f1124 3019305d 3193def6 cf010895  &..$0.0]1.......
 0ca0 462f4770 405d4193 b3e00fd0 c9f7f6cf  F/Gp@]A.........
 0cb0 462f4f70 405d4a33 18f0495d 31fd4052  F/Op@]J3..I]1.@R
 0cc0 419302d0 a9f7eacf b4e0a695 97958795  A...............
 0cd0 77956795 ba95c9f7 00976105 71050895  w.g.......a.q...
 0ce0 9b01ac01 0a2e0694 57954795 37952795  ........W.G.7.'.
 0cf0 ba95c9f7 620f731f 841f951f a01d0895  ....b.s.........
 0d00 2f923f92 4f925f92 6f927f92 8f929f92  /.?.O._.o.......
 0d10 af92bf92 cf92df92 ef92ff92 0f931f93  ................
 0d20 cf93df93 cdb7deb7 ca1bdb0b 0fb6f894  ................
 0d30 debf0fbe cdbf0994 2a883988 48885f84  ........*.9.H._.
 0d40 6e847d84 8c849b84 aa84b984 c884df80  n.}.............
 0d50 ee80fd80 0c811b81 aa81b981 ce0fd11d  ................
 0d60 0fb6f894 debf0fbe cdbfed01 0895f894  ................
 0d70 ffcf                                 ..              
Contents of section .stab:
 0000 01000000 0000f902 e3110000 08000000  ................
 0010 64000200 24020000 01000000 64000200  d...$.......d...
 0020 24020000 65000000 3c000000 00000000  $...e...<.......
 0030 74000000 80000000 00000000 94000000  t...............
 0040 80000000 00000000 ae000000 80000000  ................
 0050 00000000 e5000000 80000000 00000000  ................
 0060 0b010000 80000000 00000000 40010000  ............@...
 0070 80000000 00000000 b8010000 80000000  ................
 0080 00000000 0e020000 80000000 00000000  ................
 0090 60020000 80000000 00000000 a5020000  `...............
 00a0 80000000 00000000 cd020000 80000000  ................
 00b0 00000000 fb020000 80000000 00000000  ................
 00c0 25030000 80000000 00000000 4e030000  %...........N...
 00d0 80000000 00000000 68030000 80000000  ........h.......
 00e0 00000000 83030000 80000000 00000000  ................
 00f0 a3030000 80000000 00000000 c4030000  ................
 0100 80000000 00000000 df030000 80000000  ................
 0110 00000000 ff030000 80000000 00000000  ................
 0120 24040000 80000000 00000000 4e040000  $...........N...
 0130 80000000 00000000 72040000 80000000  ........r.......
 0140 00000000 9b040000 80000000 00000000  ................
 0150 c9040000 80000000 00000000 ef040000  ................
 0160 80000000 00000000 0f050000 80000000  ................
 0170 00000000 34050000 80000000 00000000  ....4...........
 0180 5e050000 80000000 00000000 8d050000  ^...............
 0190 80000000 00000000 b6050000 80000000  ................
 01a0 00000000 e4050000 80000000 00000000  ................
 01b0 17060000 80000000 00000000 38060000  ............8...
 01c0 80000000 00000000 53060000 80000000  ........S.......
 01d0 00000000 73060000 80000000 00000000  ....s...........
 01e0 98060000 80000000 00000000 c2060000  ................
 01f0 80000000 00000000 e6060000 80000000  ................
 0200 00000000 0f070000 80000000 00000000  ................
 0210 3d070000 80000000 00000000 63070000  =...........c...
 0220 80000000 00000000 83070000 80000000  ................
 0230 00000000 a8070000 80000000 00000000  ................
 0240 d2070000 80000000 00000000 01080000  ................
 0250 80000000 00000000 2a080000 80000000  ........*.......
 0260 00000000 58080000 80000000 00000000  ....X...........
 0270 8b080000 80000000 00000000 9f080000  ................
 0280 82000000 00000000 c4080000 82000000  ................
 0290 00000000 e2080000 82000000 00000000  ................
 02a0 06090000 82000000 250f0000 26090000  ........%...&...
 02b0 82000000 00000000 4e090000 82000000  ........N.......
 02c0 3bb80000 6c090000 80007d00 00000000  ;...l.....}.....
 02d0 81090000 80007e00 00000000 97090000  ......~.........
 02e0 80007f00 00000000 ac090000 80008000  ................
 02f0 00000000 c2090000 80008100 00000000  ................
 0300 d7090000 80008200 00000000 ed090000  ................
 0310 80008400 00000000 020a0000 80008500  ................
 0320 00000000 180a0000 80009200 00000000  ................
 0330 2e0a0000 80009700 00000000 460a0000  ............F...
 0340 8000a300 00000000 610a0000 8000a800  ........a.......
 0350 00000000 7d0a0000 8000ad00 00000000  ....}...........
 0360 990a0000 8000b200 00000000 b60a0000  ................
 0370 8000b700 00000000 d20a0000 8000bc00  ................
 0380 00000000 ef0a0000 8000c400 00000000  ................
 0390 0b0b0000 8000cb00 00000000 280b0000  ............(...
 03a0 8000d900 00000000 420b0000 8000de00  ........B.......
 03b0 00000000 5d0b0000 8000e300 00000000  ....]...........
 03c0 780b0000 8000e800 00000000 940b0000  x...............
 03d0 8000ed00 00000000 af0b0000 8000f200  ................
 03e0 00000000 cb0b0000 8000fa00 00000000  ................
 03f0 e60b0000 80000101 00000000 020c0000  ................
 0400 80001501 00000000 190c0000 80001a01  ................
 0410 00000000 00000000 a2000000 00000000  ................
 0420 00000000 a2000000 00000000 310c0000  ............1...
 0430 80004d00 00000000 4b0c0000 80005100  ..M.....K.....Q.
 0440 00000000 00000000 a2000000 00000000  ................
 0450 00000000 a2000000 00000000 660c0000  ............f...
 0460 82000000 6e130000 860c0000 8000f400  ....n...........
 0470 00000000 00000000 a2000000 00000000  ................
 0480 00000000 a2000000 00000000 00000000  ................
 0490 a2000000 00000000 d40c0000 82000000  ................
 04a0 00000000 f80c0000 82000000 d8040000  ................
 04b0 200d0000 8000d800 00000000 00000000   ...............
 04c0 a2000000 00000000 00000000 a2000000  ................
 04d0 00000000 340d0000 82000000 85330000  ....4........3..
 04e0 510d0000 82000000 900e0000 790d0000  Q...........y...
 04f0 80002800 00000000 9f0d0000 80006200  ..(...........b.
 0500 00000000 00000000 a2000000 00000000  ................
 0510 b60d0000 80000000 00000000 800e0000  ................
 0520 80001501 00000000 940e0000 8000b603  ................
 0530 00000000 00000000 a2000000 00000000  ................
 0540 a90e0000 24001000 aa060000 00000000  ....$...........
 0550 2e000000 aa060000 00000000 44001100  ............D...
 0560 00000000 00000000 44001300 14000000  ........D.......
 0570 00000000 44001400 18000000 00000000  ....D...........
 0580 44001600 1c000000 00000000 44003700  D...........D.7.
 0590 1e000000 00000000 44004a00 30000000  ........D.J.0...
 05a0 00000000 44005a00 4e000000 00000000  ....D.Z.N.......
 05b0 44005d00 5a000000 00000000 44006000  D.].Z.......D.`.
 05c0 7a000000 00000000 44006000 82000000  z.......D.`.....
 05d0 00000000 44005e00 94000000 00000000  ....D.^.........
 05e0 44006400 a2000000 00000000 44006700  D.d.........D.g.
 05f0 b2000000 00000000 44006700 ba000000  ........D.g.....
 0600 00000000 44006500 cc000000 b60e0000  ....D.e.........
 0610 80003700 19000000 00000000 c0000000  ..7.............
 0620 00000000 00000000 e0000000 dc000000  ................
 0630 00000000 24000000 dc000000 00000000  ....$...........
 0640 4e000000 86070000 00000000 64000000  N...........d...
 0650 24020000 08000000 64000200 24020000  $.......d...$...
 0660 f10e0000 64000200 24020000 65000000  ....d...$...e...
 0670 3c000000 00000000 74000000 80000000  <.......t.......
 0680 00000000 94000000 80000000 00000000  ................
 0690 ae000000 80000000 00000000 e5000000  ................
 06a0 80000000 00000000 0b010000 80000000  ................
 06b0 00000000 40010000 80000000 00000000  ....@...........
 06c0 b8010000 80000000 00000000 0e020000  ................
 06d0 80000000 00000000 60020000 80000000  ........`.......
 06e0 00000000 a5020000 80000000 00000000  ................
 06f0 cd020000 80000000 00000000 fb020000  ................
 0700 80000000 00000000 25030000 80000000  ........%.......
 0710 00000000 4e030000 80000000 00000000  ....N...........
 0720 68030000 80000000 00000000 83030000  h...............
 0730 80000000 00000000 a3030000 80000000  ................
 0740 00000000 c4030000 80000000 00000000  ................
 0750 df030000 80000000 00000000 ff030000  ................
 0760 80000000 00000000 24040000 80000000  ........$.......
 0770 00000000 4e040000 80000000 00000000  ....N...........
 0780 72040000 80000000 00000000 9b040000  r...............
 0790 80000000 00000000 c9040000 80000000  ................
 07a0 00000000 ef040000 80000000 00000000  ................
 07b0 0f050000 80000000 00000000 34050000  ............4...
 07c0 80000000 00000000 5e050000 80000000  ........^.......
 07d0 00000000 8d050000 80000000 00000000  ................
 07e0 b6050000 80000000 00000000 e4050000  ................
 07f0 80000000 00000000 17060000 80000000  ................
 0800 00000000 38060000 80000000 00000000  ....8...........
 0810 53060000 80000000 00000000 73060000  S...........s...
 0820 80000000 00000000 98060000 80000000  ................
 0830 00000000 c2060000 80000000 00000000  ................
 0840 e6060000 80000000 00000000 0f070000  ................
 0850 80000000 00000000 3d070000 80000000  ........=.......
 0860 00000000 63070000 80000000 00000000  ....c...........
 0870 83070000 80000000 00000000 a8070000  ................
 0880 80000000 00000000 d2070000 80000000  ................
 0890 00000000 01080000 80000000 00000000  ................
 08a0 2a080000 80000000 00000000 58080000  *...........X...
 08b0 80000000 00000000 8b080000 80000000  ................
 08c0 00000000 c4080000 c2000000 00000000  ................
 08d0 e2080000 c2000000 00000000 06090000  ................
 08e0 c2000000 250f0000 26090000 c2000000  ....%...&.......
 08f0 00000000 4e090000 c2000000 3bb80000  ....N.......;...
 0900 660c0000 c2000000 6e130000 340d0000  f.......n...4...
 0910 c2000000 85330000 510d0000 c2000000  .....3..Q.......
 0920 900e0000 f80c0000 c2000000 d8040000  ................
 0930 fa0e0000 24001300 24020000 0e0f0000  ....$...$.......
 0940 40001300 1c000000 190f0000 40001300  @...........@...
 0950 16000000 00000000 2e000000 24020000  ............$...
 0960 00000000 44001300 00000000 00000000  ....D...........
 0970 44001400 04000000 00000000 44001700  D...........D...
 0980 08000000 00000000 44001900 10000000  ........D.......
 0990 00000000 44001b00 14000000 00000000  ....D...........
 09a0 44001500 1c000000 00000000 24000000  D...........$...
 09b0 28000000 00000000 4e000000 4c020000  (.......N...L...
 09c0 2f0f0000 24000900 4c020000 00000000  /...$...L.......
 09d0 2e000000 4c020000 00000000 44000900  ....L.......D...
 09e0 00000000 00000000 44000a00 00000000  ........D.......
 09f0 00000000 44000b00 04000000 00000000  ....D...........
 0a00 44000c00 0a000000 00000000 44000d00  D...........D...
 0a10 0e000000 00000000 44000e00 14000000  ........D.......
 0a20 00000000 44001000 1a000000 00000000  ....D...........
 0a30 24000000 28000000 00000000 4e000000  $...(.......N...
 0a40 74020000 410f0000 24001d00 74020000  t...A...$...t...
 0a50 00000000 2e000000 74020000 00000000  ........t.......
 0a60 44001d00 00000000 00000000 44001e00  D...........D...
 0a70 00000000 00000000 44002000 08000000  ........D. .....
 0a80 00000000 44002100 0c000000 00000000  ....D.!.........
 0a90 24000000 0e000000 00000000 4e000000  $...........N...
 0aa0 82020000 550f0000 26000700 00018000  ....U...&.......
 0ab0 00000000 64000000 82020000 08000000  ....d...........
 0ac0 64000200 82020000 680f0000 64000200  d.......h...d...
 0ad0 82020000 65000000 3c000000 00000000  ....e...<.......
 0ae0 74000000 80000000 00000000 94000000  t...............
 0af0 80000000 00000000 ae000000 80000000  ................
 0b00 00000000 e5000000 80000000 00000000  ................
 0b10 0b010000 80000000 00000000 40010000  ............@...
 0b20 80000000 00000000 b8010000 80000000  ................
 0b30 00000000 0e020000 80000000 00000000  ................
 0b40 60020000 80000000 00000000 a5020000  `...............
 0b50 80000000 00000000 cd020000 80000000  ................
 0b60 00000000 fb020000 80000000 00000000  ................
 0b70 25030000 80000000 00000000 4e030000  %...........N...
 0b80 80000000 00000000 68030000 80000000  ........h.......
 0b90 00000000 83030000 80000000 00000000  ................
 0ba0 a3030000 80000000 00000000 c4030000  ................
 0bb0 80000000 00000000 df030000 80000000  ................
 0bc0 00000000 ff030000 80000000 00000000  ................
 0bd0 24040000 80000000 00000000 4e040000  $...........N...
 0be0 80000000 00000000 72040000 80000000  ........r.......
 0bf0 00000000 9b040000 80000000 00000000  ................
 0c00 c9040000 80000000 00000000 ef040000  ................
 0c10 80000000 00000000 0f050000 80000000  ................
 0c20 00000000 34050000 80000000 00000000  ....4...........
 0c30 5e050000 80000000 00000000 8d050000  ^...............
 0c40 80000000 00000000 b6050000 80000000  ................
 0c50 00000000 e4050000 80000000 00000000  ................
 0c60 17060000 80000000 00000000 38060000  ............8...
 0c70 80000000 00000000 53060000 80000000  ........S.......
 0c80 00000000 73060000 80000000 00000000  ....s...........
 0c90 98060000 80000000 00000000 c2060000  ................
 0ca0 80000000 00000000 e6060000 80000000  ................
 0cb0 00000000 0f070000 80000000 00000000  ................
 0cc0 3d070000 80000000 00000000 63070000  =...........c...
 0cd0 80000000 00000000 83070000 80000000  ................
 0ce0 00000000 a8070000 80000000 00000000  ................
 0cf0 d2070000 80000000 00000000 01080000  ................
 0d00 80000000 00000000 2a080000 80000000  ........*.......
 0d10 00000000 58080000 80000000 00000000  ....X...........
 0d20 8b080000 80000000 00000000 c4080000  ................
 0d30 c2000000 00000000 e2080000 c2000000  ................
 0d40 00000000 06090000 c2000000 250f0000  ............%...
 0d50 26090000 c2000000 00000000 4e090000  &...........N...
 0d60 c2000000 3bb80000 660c0000 c2000000  ....;...f.......
 0d70 6e130000 d40c0000 c2000000 00000000  n...............
 0d80 f80c0000 c2000000 d8040000 340d0000  ............4...
 0d90 c2000000 85330000 510d0000 c2000000  .....3..Q.......
 0da0 900e0000 6f0f0000 24000700 82020000  ....o...$.......
 0db0 00000000 2e000000 82020000 00000000  ................
 0dc0 44000700 00000000 00000000 24000000  D...........$...
 0dd0 02000000 00000000 4e000000 84020000  ........N.......
 0de0 00000000 64000000 84020000 08000000  ....d...........
 0df0 64000200 84020000 810f0000 64000200  d...........d...
 0e00 84020000 65000000 3c000000 00000000  ....e...<.......
 0e10 74000000 80000000 00000000 94000000  t...............
 0e20 80000000 00000000 ae000000 80000000  ................
 0e30 00000000 e5000000 80000000 00000000  ................
 0e40 0b010000 80000000 00000000 40010000  ............@...
 0e50 80000000 00000000 b8010000 80000000  ................
 0e60 00000000 0e020000 80000000 00000000  ................
 0e70 60020000 80000000 00000000 a5020000  `...............
 0e80 80000000 00000000 cd020000 80000000  ................
 0e90 00000000 fb020000 80000000 00000000  ................
 0ea0 25030000 80000000 00000000 4e030000  %...........N...
 0eb0 80000000 00000000 68030000 80000000  ........h.......
 0ec0 00000000 83030000 80000000 00000000  ................
 0ed0 a3030000 80000000 00000000 c4030000  ................
 0ee0 80000000 00000000 df030000 80000000  ................
 0ef0 00000000 ff030000 80000000 00000000  ................
 0f00 24040000 80000000 00000000 4e040000  $...........N...
 0f10 80000000 00000000 72040000 80000000  ........r.......
 0f20 00000000 9b040000 80000000 00000000  ................
 0f30 c9040000 80000000 00000000 ef040000  ................
 0f40 80000000 00000000 0f050000 80000000  ................
 0f50 00000000 34050000 80000000 00000000  ....4...........
 0f60 5e050000 80000000 00000000 8d050000  ^...............
 0f70 80000000 00000000 b6050000 80000000  ................
 0f80 00000000 e4050000 80000000 00000000  ................
 0f90 17060000 80000000 00000000 38060000  ............8...
 0fa0 80000000 00000000 53060000 80000000  ........S.......
 0fb0 00000000 73060000 80000000 00000000  ....s...........
 0fc0 98060000 80000000 00000000 c2060000  ................
 0fd0 80000000 00000000 e6060000 80000000  ................
 0fe0 00000000 0f070000 80000000 00000000  ................
 0ff0 3d070000 80000000 00000000 63070000  =...........c...
 1000 80000000 00000000 83070000 80000000  ................
 1010 00000000 a8070000 80000000 00000000  ................
 1020 d2070000 80000000 00000000 01080000  ................
 1030 80000000 00000000 2a080000 80000000  ........*.......
 1040 00000000 58080000 80000000 00000000  ....X...........
 1050 8b080000 80000000 00000000 c4080000  ................
 1060 c2000000 00000000 e2080000 c2000000  ................
 1070 00000000 06090000 c2000000 250f0000  ............%...
 1080 26090000 c2000000 00000000 4e090000  &...........N...
 1090 c2000000 3bb80000 660c0000 c2000000  ....;...f.......
 10a0 6e130000 870f0000 24000600 84020000  n.......$.......
 10b0 00000000 2e000000 84020000 00000000  ................
 10c0 44000600 00000000 00000000 44000c00  D...........D...
 10d0 00000000 00000000 44000d00 08000000  ........D.......
 10e0 00000000 44001400 0c000000 00000000  ....D...........
 10f0 24000000 14000000 00000000 4e000000  $...........N...
 1100 98020000 980f0000 24001700 98020000  ........$.......
 1110 ae0f0000 40001700 18000000 00000000  ....@...........
 1120 2e000000 98020000 00000000 44001700  ............D...
 1130 00000000 00000000 44001800 00000000  ........D.......
 1140 00000000 24000000 06000000 00000000  ....$...........
 1150 4e000000 9e020000 b90f0000 24001b00  N...........$...
 1160 9e020000 00000000 2e000000 9e020000  ................
 1170 00000000 44001b00 00000000 00000000  ....D...........
 1180 44001c00 00000000 00000000 44001d00  D...........D...
 1190 04000000 00000000 24000000 06000000  ........$.......
 11a0 00000000 4e000000 a4020000 ce0f0000  ....N...........
 11b0 26000400 30018000 00000000 64000000  &...0.......d...
 11c0 a4020000 08000000 64000200 a4020000  ........d.......
 11d0 e70f0000 64000200 a4020000 65000000  ....d.......e...
 11e0 3c000000 00000000 74000000 80000000  <.......t.......
 11f0 00000000 94000000 80000000 00000000  ................
 1200 ae000000 80000000 00000000 e5000000  ................
 1210 80000000 00000000 0b010000 80000000  ................
 1220 00000000 40010000 80000000 00000000  ....@...........
 1230 b8010000 80000000 00000000 0e020000  ................
 1240 80000000 00000000 60020000 80000000  ........`.......
 1250 00000000 a5020000 80000000 00000000  ................
 1260 cd020000 80000000 00000000 fb020000  ................
 1270 80000000 00000000 25030000 80000000  ........%.......
 1280 00000000 4e030000 80000000 00000000  ....N...........
 1290 68030000 80000000 00000000 83030000  h...............
 12a0 80000000 00000000 a3030000 80000000  ................
 12b0 00000000 c4030000 80000000 00000000  ................
 12c0 df030000 80000000 00000000 ff030000  ................
 12d0 80000000 00000000 24040000 80000000  ........$.......
 12e0 00000000 4e040000 80000000 00000000  ....N...........
 12f0 72040000 80000000 00000000 9b040000  r...............
 1300 80000000 00000000 c9040000 80000000  ................
 1310 00000000 ef040000 80000000 00000000  ................
 1320 0f050000 80000000 00000000 34050000  ............4...
 1330 80000000 00000000 5e050000 80000000  ........^.......
 1340 00000000 8d050000 80000000 00000000  ................
 1350 b6050000 80000000 00000000 e4050000  ................
 1360 80000000 00000000 17060000 80000000  ................
 1370 00000000 38060000 80000000 00000000  ....8...........
 1380 53060000 80000000 00000000 73060000  S...........s...
 1390 80000000 00000000 98060000 80000000  ................
 13a0 00000000 c2060000 80000000 00000000  ................
 13b0 e6060000 80000000 00000000 0f070000  ................
 13c0 80000000 00000000 3d070000 80000000  ........=.......
 13d0 00000000 63070000 80000000 00000000  ....c...........
 13e0 83070000 80000000 00000000 a8070000  ................
 13f0 80000000 00000000 d2070000 80000000  ................
 1400 00000000 01080000 80000000 00000000  ................
 1410 2a080000 80000000 00000000 58080000  *...........X...
 1420 80000000 00000000 8b080000 80000000  ................
 1430 00000000 c4080000 c2000000 00000000  ................
 1440 e2080000 c2000000 00000000 06090000  ................
 1450 c2000000 250f0000 26090000 c2000000  ....%...&.......
 1460 00000000 4e090000 c2000000 3bb80000  ....N.......;...
 1470 660c0000 c2000000 6e130000 ef0f0000  f.......n.......
 1480 24000500 a4020000 00000000 2e000000  $...............
 1490 a4020000 00000000 44000500 00000000  ........D.......
 14a0 00000000 24000000 02000000 00000000  ....$...........
 14b0 4e000000 a6020000 00000000 64000000  N...........d...
 14c0 a6020000 08000000 64000200 a6020000  ........d.......
 14d0 02100000 64000200 a6020000 65000000  ....d.......e...
 14e0 3c000000 00000000 74000000 80000000  <.......t.......
 14f0 00000000 94000000 80000000 00000000  ................
 1500 ae000000 80000000 00000000 e5000000  ................
 1510 80000000 00000000 0b010000 80000000  ................
 1520 00000000 40010000 80000000 00000000  ....@...........
 1530 b8010000 80000000 00000000 0e020000  ................
 1540 80000000 00000000 60020000 80000000  ........`.......
 1550 00000000 a5020000 80000000 00000000  ................
 1560 cd020000 80000000 00000000 fb020000  ................
 1570 80000000 00000000 25030000 80000000  ........%.......
 1580 00000000 4e030000 80000000 00000000  ....N...........
 1590 68030000 80000000 00000000 83030000  h...............
 15a0 80000000 00000000 a3030000 80000000  ................
 15b0 00000000 c4030000 80000000 00000000  ................
 15c0 df030000 80000000 00000000 ff030000  ................
 15d0 80000000 00000000 24040000 80000000  ........$.......
 15e0 00000000 4e040000 80000000 00000000  ....N...........
 15f0 72040000 80000000 00000000 9b040000  r...............
 1600 80000000 00000000 c9040000 80000000  ................
 1610 00000000 ef040000 80000000 00000000  ................
 1620 0f050000 80000000 00000000 34050000  ............4...
 1630 80000000 00000000 5e050000 80000000  ........^.......
 1640 00000000 8d050000 80000000 00000000  ................
 1650 b6050000 80000000 00000000 e4050000  ................
 1660 80000000 00000000 17060000 80000000  ................
 1670 00000000 38060000 80000000 00000000  ....8...........
 1680 53060000 80000000 00000000 73060000  S...........s...
 1690 80000000 00000000 98060000 80000000  ................
 16a0 00000000 c2060000 80000000 00000000  ................
 16b0 e6060000 80000000 00000000 0f070000  ................
 16c0 80000000 00000000 3d070000 80000000  ........=.......
 16d0 00000000 63070000 80000000 00000000  ....c...........
 16e0 83070000 80000000 00000000 a8070000  ................
 16f0 80000000 00000000 d2070000 80000000  ................
 1700 00000000 01080000 80000000 00000000  ................
 1710 2a080000 80000000 00000000 58080000  *...........X...
 1720 80000000 00000000 8b080000 80000000  ................
 1730 00000000 c4080000 c2000000 00000000  ................
 1740 e2080000 c2000000 00000000 06090000  ................
 1750 c2000000 250f0000 26090000 c2000000  ....%...&.......
 1760 00000000 4e090000 c2000000 3bb80000  ....N.......;...
 1770 660c0000 c2000000 6e130000 d40c0000  f.......n.......
 1780 c2000000 00000000 f80c0000 c2000000  ................
 1790 d8040000 340d0000 c2000000 85330000  ....4........3..
 17a0 510d0000 c2000000 900e0000 08100000  Q...............
 17b0 24000c00 a6020000 00000000 2e000000  $...............
 17c0 a6020000 00000000 44000d00 00000000  ........D.......
 17d0 00000000 44001300 00000000 00000000  ....D...........
 17e0 44001400 08000000 00000000 44001600  D...........D...
 17f0 0e000000 00000000 44001800 14000000  ........D.......
 1800 00000000 24000000 1c000000 00000000  ....$...........
 1810 4e000000 c2020000 19100000 24001b00  N...........$...
 1820 c2020000 37100000 40001b00 18000000  ....7...@.......
 1830 00000000 2e000000 c2020000 00000000  ................
 1840 44001c00 00000000 00000000 44001d00  D...........D...
 1850 00000000 00000000 44004300 0e000000  ........D.C.....
 1860 00000000 44004400 1e000000 00000000  ....D.D.........
 1870 44001d00 28000000 00000000 44004000  D...(.......D.@.
 1880 30000000 00000000 44004100 3c000000  0.......D.A.<...
 1890 00000000 44002000 42000000 00000000  ....D. .B.......
 18a0 44002100 4e000000 00000000 44002300  D.!.N.......D.#.
 18b0 54000000 00000000 44002400 60000000  T.......D.$.`...
 18c0 00000000 44002a00 66000000 00000000  ....D.*.f.......
 18d0 44002b00 72000000 00000000 44002d00  D.+.r.......D.-.
 18e0 78000000 00000000 44002e00 84000000  x.......D.......
 18f0 00000000 44003000 8a000000 00000000  ....D.0.........
 1900 44003100 96000000 00000000 44003300  D.1.........D.3.
 1910 9c000000 00000000 44003400 a8000000  ........D.4.....
 1920 00000000 44002600 ae000000 00000000  ....D.&.........
 1930 44002700 ba000000 00000000 44003700  D.'.........D.7.
 1940 c0000000 00000000 44003800 cc000000  ........D.8.....
 1950 00000000 44003a00 d2000000 00000000  ....D.:.........
 1960 44003b00 de000000 00000000 44003d00  D.;.........D.=.
 1970 e4000000 00000000 44003e00 f0000000  ........D.>.....
 1980 00000000 24000000 f6000000 00000000  ....$...........
 1990 4e000000 b8030000 45100000 24004b00  N.......E...$.K.
 19a0 b8030000 00000000 2e000000 b8030000  ................
 19b0 00000000 44004c00 00000000 00000000  ....D.L.........
 19c0 44004d00 00000000 00000000 44004e00  D.M.........D.N.
 19d0 06000000 00000000 44005000 0e000000  ........D.P.....
 19e0 00000000 24000000 10000000 00000000  ....$...........
 19f0 4e000000 c8030000 57100000 24005300  N.......W...$.S.
 1a00 c8030000 00000000 2e000000 c8030000  ................
 1a10 00000000 44005400 00000000 00000000  ....D.T.........
 1a20 44005500 00000000 00000000 44005600  D.U.........D.V.
 1a30 06000000 00000000 44005a00 0e000000  ........D.Z.....
 1a40 00000000 24000000 10000000 00000000  ....$...........
 1a50 4e000000 d8030000 68100000 24005d00  N.......h...$.].
 1a60 d8030000 00000000 2e000000 d8030000  ................
 1a70 00000000 44005e00 00000000 00000000  ....D.^.........
 1a80 44006100 00000000 00000000 44006300  D.a.........D.c.
 1a90 04000000 00000000 24000000 08000000  ........$.......
 1aa0 00000000 4e000000 e0030000 7e100000  ....N.......~...
 1ab0 24006600 e0030000 94100000 40006600  $.f.........@.f.
 1ac0 18000000 a3100000 40006600 16000000  ........@.f.....
 1ad0 00000000 2e000000 e0030000 00000000  ................
 1ae0 44006700 00000000 00000000 44006800  D.g.........D.h.
 1af0 00000000 00000000 44006900 0a000000  ........D.i.....
 1b00 00000000 44006a00 10000000 00000000  ....D.j.........
 1b10 44006c00 18000000 00000000 24000000  D.l.........$...
 1b20 1a000000 00000000 4e000000 fa030000  ........N.......
 1b30 ad100000 24006f00 fa030000 c3100000  ....$.o.........
 1b40 40006f00 18000000 00000000 2e000000  @.o.............
 1b50 fa030000 00000000 44007000 00000000  ........D.p.....
 1b60 00000000 44007100 00000000 00000000  ....D.q.........
 1b70 44007200 04000000 00000000 44007300  D.r.........D.s.
 1b80 0a000000 00000000 44007500 12000000  ........D.u.....
 1b90 00000000 24000000 14000000 00000000  ....$...........
 1ba0 4e000000 0e040000 cf100000 24007800  N...........$.x.
 1bb0 0e040000 00000000 2e000000 0e040000  ................
 1bc0 00000000 44007900 00000000 00000000  ....D.y.........
 1bd0 44007a00 00000000 00000000 44007b00  D.z.........D.{.
 1be0 06000000 00000000 44007d00 0e000000  ........D.}.....
 1bf0 00000000 44007e00 12000000 00000000  ....D.~.........
 1c00 24000000 14000000 00000000 4e000000  $...........N...
 1c10 22040000 e3100000 24008100 22040000  ".......$..."...
 1c20 00000000 2e000000 22040000 00000000  ........".......
 1c30 44008200 00000000 00000000 44008300  D...........D...
 1c40 00000000 00000000 44008400 06000000  ........D.......
 1c50 00000000 44008600 0e000000 00000000  ....D...........
 1c60 44008700 12000000 00000000 24000000  D...........$...
 1c70 14000000 00000000 4e000000 36040000  ........N...6...
 1c80 f7100000 24008900 36040000 00000000  ....$...6.......
 1c90 2e000000 36040000 00000000 44008a00  ....6.......D...
 1ca0 00000000 00000000 44004d00 00000000  ........D.M.....
 1cb0 00000000 44006800 02000000 00000000  ....D.h.........
 1cc0 44006900 04000000 00000000 44004d00  D.i.........D.M.
 1cd0 06000000 00000000 44004e00 0a000000  ........D.N.....
 1ce0 00000000 44006800 12000000 00000000  ....D.h.........
 1cf0 44006900 16000000 00000000 44006a00  D.i.........D.j.
 1d00 1a000000 00000000 44006100 22000000  ........D.a."...
 1d10 00000000 44008c00 26000000 00000000  ....D...&.......
 1d20 44009200 2c000000 00000000 24000000  D...,.......$...
 1d30 2e000000 00000000 4e000000 64040000  ........N...d...
 1d40 20110000 24009400 64040000 38110000   ...$...d...8...
 1d50 40009400 18000000 00000000 2e000000  @...............
 1d60 64040000 00000000 44009500 00000000  d.......D.......
 1d70 00000000 44004d00 00000000 00000000  ....D.M.........
 1d80 44004e00 06000000 00000000 44006800  D.N.........D.h.
 1d90 0e000000 00000000 44006900 14000000  ........D.i.....
 1da0 00000000 44006a00 1a000000 00000000  ....D.j.........
 1db0 44007100 22000000 00000000 44007200  D.q.".......D.r.
 1dc0 26000000 00000000 44007300 2c000000  &.......D.s.,...
 1dd0 00000000 44004d00 34000000 00000000  ....D.M.4.......
 1de0 44004e00 3a000000 00000000 44006800  D.N.:.......D.h.
 1df0 42000000 00000000 44006900 48000000  B.......D.i.H...
 1e00 00000000 44006a00 4e000000 00000000  ....D.j.N.......
 1e10 44008300 56000000 00000000 44008400  D...V.......D...
 1e20 5c000000 00000000 44008600 64000000  \.......D...d...
 1e30 00000000 44005500 68000000 00000000  ....D.U.h.......
 1e40 44005600 6e000000 00000000 4400ab00  D.V.n.......D...
 1e50 76000000 00000000 24000000 78000000  v.......$...x...
 1e60 00000000 4e000000 dc040000 44110000  ....N.......D...
 1e70 2400ad00 dc040000 38110000 4000ad00  $.......8...@...
 1e80 18000000 c3100000 4000ad00 16000000  ........@.......
 1e90 00000000 2e000000 dc040000 00000000  ................
 1ea0 4400ae00 00000000 00000000 44004d00  D...........D.M.
 1eb0 00000000 00000000 44004e00 06000000  ........D.N.....
 1ec0 00000000 44006800 0e000000 00000000  ....D.h.........
 1ed0 44006900 14000000 00000000 44006a00  D.i.........D.j.
 1ee0 1a000000 00000000 44007100 22000000  ........D.q."...
 1ef0 00000000 44007200 26000000 00000000  ....D.r.&.......
 1f00 44007300 2c000000 00000000 44007100  D.s.,.......D.q.
 1f10 34000000 00000000 44007200 38000000  4.......D.r.8...
 1f20 00000000 44007300 3e000000 00000000  ....D.s.>.......
 1f30 44005500 46000000 00000000 44005600  D.U.F.......D.V.
 1f40 4c000000 00000000 44004d00 54000000  L.......D.M.T...
 1f50 00000000 44006800 56000000 00000000  ....D.h.V.......
 1f60 44006900 58000000 00000000 44004d00  D.i.X.......D.M.
 1f70 5a000000 00000000 44004e00 5e000000  Z.......D.N.^...
 1f80 00000000 44006800 66000000 00000000  ....D.h.f.......
 1f90 44006900 6a000000 00000000 44006a00  D.i.j.......D.j.
 1fa0 6e000000 00000000 44006100 76000000  n.......D.a.v...
 1fb0 00000000 44008c00 7a000000 00000000  ....D...z.......
 1fc0 4400c500 80000000 00000000 24000000  D...........$...
 1fd0 82000000 00000000 4e000000 5e050000  ........N...^...
 1fe0 5e110000 2400c700 5e050000 38110000  ^...$...^...8...
 1ff0 4000c700 18000000 78110000 4000c700  @.......x...@...
 2000 16000000 00000000 2e000000 5e050000  ............^...
 2010 00000000 4400c800 00000000 00000000  ....D...........
 2020 4400c900 00000000 00000000 44004d00  D...........D.M.
 2030 04000000 00000000 44004e00 0a000000  ........D.N.....
 2040 00000000 44006800 12000000 00000000  ....D.h.........
 2050 44006900 18000000 00000000 44006a00  D.i.........D.j.
 2060 1e000000 00000000 44007100 26000000  ........D.q.&...
 2070 00000000 44007200 2a000000 00000000  ....D.r.*.......
 2080 44007300 30000000 00000000 44007200  D.s.0.......D.r.
 2090 40000000 00000000 44007100 42000000  @.......D.q.B...
 20a0 00000000 44007200 46000000 00000000  ....D.r.F.......
 20b0 44007300 4a000000 00000000 4400de00  D.s.J.......D...
 20c0 52000000 00000000 4400d700 54000000  R.......D...T...
 20d0 00000000 44005500 5a000000 00000000  ....D.U.Z.......
 20e0 44005600 60000000 00000000 44004d00  D.V.`.......D.M.
 20f0 68000000 00000000 44006800 6a000000  h.......D.h.j...
 2100 00000000 44006900 6c000000 00000000  ....D.i.l.......
 2110 44004d00 6e000000 00000000 44004e00  D.M.n.......D.N.
 2120 72000000 00000000 44006800 7a000000  r.......D.h.z...
 2130 00000000 44006900 7e000000 00000000  ....D.i.~.......
 2140 44006a00 82000000 00000000 44006100  D.j.........D.a.
 2150 8a000000 00000000 44008c00 8e000000  ........D.......
 2160 00000000 4400e600 94000000 8c110000  ....D...........
 2170 4000c900 12000000 00000000 c0000000  @...............
 2180 00000000 00000000 e0000000 96000000  ................
 2190 00000000 24000000 96000000 00000000  ....$...........
 21a0 4e000000 f4050000 9c110000 2400e800  N...........$...
 21b0 f4050000 bb110000 4000e800 16000000  ........@.......
 21c0 cf110000 4000e800 14000000 00000000  ....@...........
 21d0 2e000000 f4050000 00000000 4400e900  ............D...
 21e0 00000000 00000000 44004d00 00000000  ........D.M.....
 21f0 00000000 44004e00 06000000 00000000  ....D.N.........
 2200 44006800 0e000000 00000000 44006900  D.h.........D.i.
 2210 14000000 00000000 44006a00 1a000000  ........D.j.....
 2220 00000000 44007100 22000000 00000000  ....D.q.".......
 2230 44007200 26000000 00000000 44007300  D.r.&.......D.s.
 2240 2c000000 00000000 44004d00 34000000  ,.......D.M.4...
 2250 00000000 44004e00 3a000000 00000000  ....D.N.:.......
 2260 44006800 42000000 00000000 44006900  D.h.B.......D.i.
 2270 48000000 00000000 44006a00 4e000000  H.......D.j.N...
 2280 00000000 4400ff00 56000000 00000000  ....D...V.......
 2290 4400ff00 66000000 00000000 44007a00  D...f.......D.z.
 22a0 6a000000 00000000 44008300 6c000000  j.......D...l...
 22b0 00000000 44007a00 6e000000 00000000  ....D.z.n.......
 22c0 44007b00 72000000 00000000 44007d00  D.{.r.......D.}.
 22d0 7a000000 00000000 44000501 7e000000  z.......D...~...
 22e0 00000000 44000d01 84000000 00000000  ....D...........
 22f0 4400ff00 86000000 00000000 44005500  D...........D.U.
 2300 92000000 00000000 44005600 98000000  ........D.V.....
 2310 00000000 44001201 a0000000 00000000  ....D...........
 2320 44008300 a2000000 00000000 44008400  D...........D...
 2330 a6000000 00000000 44008600 ae000000  ........D.......
 2340 00000000 44000901 b2000000 da110000  ....D...........
 2350 4000ff00 12000000 00000000 c0000000  @...............
 2360 56000000 00000000 e0000000 92000000  V...............
 2370 da110000 4000ff00 12000000 00000000  ....@...........
 2380 c0000000 a2000000 00000000 e0000000  ................
 2390 b6000000 00000000 24000000 b6000000  ........$.......
 23a0 00000000 4e000000 aa060000 00000000  ....N...........
 23b0 64000000 aa060000                    d.......        
Contents of section .stabstr:
 0000 006d6169 6e2e6300 2f6d6e74 2f632f55  .main.c./mnt/c/U
 0010 73657273 2f61736d 616b2f41 736d6145  sers/asmak/AsmaE
 0020 64752f42 75696c74 496e5379 7374656d  du/BuiltInSystem
 0030 41726368 69746563 74757265 4e646573  ArchitectureNdes
 0040 69676e2f 6c61622d 30345f62 6173656c  ign/lab-04_basel
 0050 696e652f 6c61622d 30345f62 6173656c  ine/lab-04_basel
 0060 696e652f 00676363 325f636f 6d70696c  ine/.gcc2_compil
 0070 65642e00 696e743a 7428302c 31293d72  ed..int:t(0,1)=r
 0080 28302c31 293b2d33 32373638 3b333237  (0,1);-32768;327
 0090 36373b00 63686172 3a742830 2c32293d  67;.char:t(0,2)=
 00a0 7228302c 32293b30 3b313237 3b006c6f  r(0,2);0;127;.lo
 00b0 6e672069 6e743a74 28302c33 293d4073  ng int:t(0,3)=@s
 00c0 33323b72 28302c33 293b3032 30303030  32;r(0,3);020000
 00d0 30303030 30303b30 31373737 37373737  000000;017777777
 00e0 3737373b 00756e73 69676e65 6420696e  777;.unsigned in
 00f0 743a7428 302c3429 3d722830 2c34293b  t:t(0,4)=r(0,4);
 0100 303b3031 37373737 373b006c 6f6e6720  0;0177777;.long 
 0110 756e7369 676e6564 20696e74 3a742830  unsigned int:t(0
 0120 2c35293d 40733332 3b722830 2c35293b  ,5)=@s32;r(0,5);
 0130 303b3033 37373737 37373737 37373b00  0;037777777777;.
 0140 5f5f696e 74313238 3a742830 2c36293d  __int128:t(0,6)=
 0150 40733132 383b7228 302c3629 3b303230  @s128;r(0,6);020
 0160 30303030 30303030 30303030 30303030  0000000000000000
 0170 30303030 30303030 30303030 30303030  0000000000000000
 0180 30303030 30303030 303b3031 37373737  000000000;017777
 0190 37373737 37373737 37373737 37373737  7777777777777777
 01a0 37373737 37373737 37373737 37373737  7777777777777777
 01b0 37373737 37373b00 5f5f696e 74313238  777777;.__int128
 01c0 20756e73 69676e65 643a7428 302c3729   unsigned:t(0,7)
 01d0 3d407331 32383b72 28302c37 293b303b  =@s128;r(0,7);0;
 01e0 30333737 37373737 37373737 37373737  0377777777777777
 01f0 37373737 37373737 37373737 37373737  7777777777777777
 0200 37373737 37373737 37373737 3b006c6f  777777777777;.lo
 0210 6e67206c 6f6e6720 696e743a 7428302c  ng long int:t(0,
 0220 38293d40 7336343b 7228302c 38293b30  8)=@s64;r(0,8);0
 0230 31303030 30303030 30303030 30303030  1000000000000000
 0240 30303030 30303b30 30373737 37373737  000000;007777777
 0250 37373737 37373737 37373737 37373b00  77777777777777;.
 0260 6c6f6e67 206c6f6e 6720756e 7369676e  long long unsign
 0270 65642069 6e743a74 28302c39 293d4073  ed int:t(0,9)=@s
 0280 36343b72 28302c39 293b303b 30313737  64;r(0,9);0;0177
 0290 37373737 37373737 37373737 37373737  7777777777777777
 02a0 3737373b 0073686f 72742069 6e743a74  777;.short int:t
 02b0 28302c31 30293d72 28302c31 30293b2d  (0,10)=r(0,10);-
 02c0 33323736 383b3332 3736373b 0073686f  32768;32767;.sho
 02d0 72742075 6e736967 6e656420 696e743a  rt unsigned int:
 02e0 7428302c 3131293d 7228302c 3131293b  t(0,11)=r(0,11);
 02f0 303b3031 37373737 373b0073 69676e65  0;0177777;.signe
 0300 64206368 61723a74 28302c31 32293d40  d char:t(0,12)=@
 0310 73383b72 28302c31 32293b2d 3132383b  s8;r(0,12);-128;
 0320 3132373b 00756e73 69676e65 64206368  127;.unsigned ch
 0330 61723a74 28302c31 33293d40 73383b72  ar:t(0,13)=@s8;r
 0340 28302c31 33293b30 3b323535 3b00666c  (0,13);0;255;.fl
 0350 6f61743a 7428302c 3134293d 7228302c  oat:t(0,14)=r(0,
 0360 31293b34 3b303b00 646f7562 6c653a74  1);4;0;.double:t
 0370 28302c31 35293d72 28302c31 293b343b  (0,15)=r(0,1);4;
 0380 303b006c 6f6e6720 646f7562 6c653a74  0;.long double:t
 0390 28302c31 36293d72 28302c31 293b343b  (0,16)=r(0,1);4;
 03a0 303b0073 686f7274 205f4672 6163743a  0;.short _Fract:
 03b0 7428302c 3137293d 7228302c 31293b31  t(0,17)=r(0,1);1
 03c0 3b303b00 5f467261 63743a74 28302c31  ;0;._Fract:t(0,1
 03d0 38293d72 28302c31 293b323b 303b006c  8)=r(0,1);2;0;.l
 03e0 6f6e6720 5f467261 63743a74 28302c31  ong _Fract:t(0,1
 03f0 39293d72 28302c31 293b343b 303b006c  9)=r(0,1);4;0;.l
 0400 6f6e6720 6c6f6e67 205f4672 6163743a  ong long _Fract:
 0410 7428302c 3230293d 7228302c 31293b38  t(0,20)=r(0,1);8
 0420 3b303b00 756e7369 676e6564 2073686f  ;0;.unsigned sho
 0430 7274205f 46726163 743a7428 302c3231  rt _Fract:t(0,21
 0440 293d7228 302c3129 3b313b30 3b00756e  )=r(0,1);1;0;.un
 0450 7369676e 6564205f 46726163 743a7428  signed _Fract:t(
 0460 302c3232 293d7228 302c3129 3b323b30  0,22)=r(0,1);2;0
 0470 3b00756e 7369676e 6564206c 6f6e6720  ;.unsigned long 
 0480 5f467261 63743a74 28302c32 33293d72  _Fract:t(0,23)=r
 0490 28302c31 293b343b 303b0075 6e736967  (0,1);4;0;.unsig
 04a0 6e656420 6c6f6e67 206c6f6e 67205f46  ned long long _F
 04b0 72616374 3a742830 2c323429 3d722830  ract:t(0,24)=r(0
 04c0 2c31293b 383b303b 005f5361 74207368  ,1);8;0;._Sat sh
 04d0 6f727420 5f467261 63743a74 28302c32  ort _Fract:t(0,2
 04e0 35293d72 28302c31 293b313b 303b005f  5)=r(0,1);1;0;._
 04f0 53617420 5f467261 63743a74 28302c32  Sat _Fract:t(0,2
 0500 36293d72 28302c31 293b323b 303b005f  6)=r(0,1);2;0;._
 0510 53617420 6c6f6e67 205f4672 6163743a  Sat long _Fract:
 0520 7428302c 3237293d 7228302c 31293b34  t(0,27)=r(0,1);4
 0530 3b303b00 5f536174 206c6f6e 67206c6f  ;0;._Sat long lo
 0540 6e67205f 46726163 743a7428 302c3238  ng _Fract:t(0,28
 0550 293d7228 302c3129 3b383b30 3b005f53  )=r(0,1);8;0;._S
 0560 61742075 6e736967 6e656420 73686f72  at unsigned shor
 0570 74205f46 72616374 3a742830 2c323929  t _Fract:t(0,29)
 0580 3d722830 2c31293b 313b303b 005f5361  =r(0,1);1;0;._Sa
 0590 7420756e 7369676e 6564205f 46726163  t unsigned _Frac
 05a0 743a7428 302c3330 293d7228 302c3129  t:t(0,30)=r(0,1)
 05b0 3b323b30 3b005f53 61742075 6e736967  ;2;0;._Sat unsig
 05c0 6e656420 6c6f6e67 205f4672 6163743a  ned long _Fract:
 05d0 7428302c 3331293d 7228302c 31293b34  t(0,31)=r(0,1);4
 05e0 3b303b00 5f536174 20756e73 69676e65  ;0;._Sat unsigne
 05f0 64206c6f 6e67206c 6f6e6720 5f467261  d long long _Fra
 0600 63743a74 28302c33 32293d72 28302c31  ct:t(0,32)=r(0,1
 0610 293b383b 303b0073 686f7274 205f4163  );8;0;.short _Ac
 0620 63756d3a 7428302c 3333293d 7228302c  cum:t(0,33)=r(0,
 0630 31293b32 3b303b00 5f416363 756d3a74  1);2;0;._Accum:t
 0640 28302c33 34293d72 28302c31 293b343b  (0,34)=r(0,1);4;
 0650 303b006c 6f6e6720 5f416363 756d3a74  0;.long _Accum:t
 0660 28302c33 35293d72 28302c31 293b383b  (0,35)=r(0,1);8;
 0670 303b006c 6f6e6720 6c6f6e67 205f4163  0;.long long _Ac
 0680 63756d3a 7428302c 3336293d 7228302c  cum:t(0,36)=r(0,
 0690 31293b38 3b303b00 756e7369 676e6564  1);8;0;.unsigned
 06a0 2073686f 7274205f 41636375 6d3a7428   short _Accum:t(
 06b0 302c3337 293d7228 302c3129 3b323b30  0,37)=r(0,1);2;0
 06c0 3b00756e 7369676e 6564205f 41636375  ;.unsigned _Accu
 06d0 6d3a7428 302c3338 293d7228 302c3129  m:t(0,38)=r(0,1)
 06e0 3b343b30 3b00756e 7369676e 6564206c  ;4;0;.unsigned l
 06f0 6f6e6720 5f416363 756d3a74 28302c33  ong _Accum:t(0,3
 0700 39293d72 28302c31 293b383b 303b0075  9)=r(0,1);8;0;.u
 0710 6e736967 6e656420 6c6f6e67 206c6f6e  nsigned long lon
 0720 67205f41 6363756d 3a742830 2c343029  g _Accum:t(0,40)
 0730 3d722830 2c31293b 383b303b 005f5361  =r(0,1);8;0;._Sa
 0740 74207368 6f727420 5f416363 756d3a74  t short _Accum:t
 0750 28302c34 31293d72 28302c31 293b323b  (0,41)=r(0,1);2;
 0760 303b005f 53617420 5f416363 756d3a74  0;._Sat _Accum:t
 0770 28302c34 32293d72 28302c31 293b343b  (0,42)=r(0,1);4;
 0780 303b005f 53617420 6c6f6e67 205f4163  0;._Sat long _Ac
 0790 63756d3a 7428302c 3433293d 7228302c  cum:t(0,43)=r(0,
 07a0 31293b38 3b303b00 5f536174 206c6f6e  1);8;0;._Sat lon
 07b0 67206c6f 6e67205f 41636375 6d3a7428  g long _Accum:t(
 07c0 302c3434 293d7228 302c3129 3b383b30  0,44)=r(0,1);8;0
 07d0 3b005f53 61742075 6e736967 6e656420  ;._Sat unsigned 
 07e0 73686f72 74205f41 6363756d 3a742830  short _Accum:t(0
 07f0 2c343529 3d722830 2c31293b 323b303b  ,45)=r(0,1);2;0;
 0800 005f5361 7420756e 7369676e 6564205f  ._Sat unsigned _
 0810 41636375 6d3a7428 302c3436 293d7228  Accum:t(0,46)=r(
 0820 302c3129 3b343b30 3b005f53 61742075  0,1);4;0;._Sat u
 0830 6e736967 6e656420 6c6f6e67 205f4163  nsigned long _Ac
 0840 63756d3a 7428302c 3437293d 7228302c  cum:t(0,47)=r(0,
 0850 31293b38 3b303b00 5f536174 20756e73  1);8;0;._Sat uns
 0860 69676e65 64206c6f 6e67206c 6f6e6720  igned long long 
 0870 5f416363 756d3a74 28302c34 38293d72  _Accum:t(0,48)=r
 0880 28302c31 293b383b 303b0076 6f69643a  (0,1);8;0;.void:
 0890 7428302c 3439293d 28302c34 3929002f  t(0,49)=(0,49)./
 08a0 7573722f 6c69622f 6176722f 696e636c  usr/lib/avr/incl
 08b0 7564652f 6176722f 696e7465 72727570  ude/avr/interrup
 08c0 742e6800 2f757372 2f6c6962 2f617672  t.h./usr/lib/avr
 08d0 2f696e63 6c756465 2f617672 2f696f2e  /include/avr/io.
 08e0 68002f75 73722f6c 69622f61 76722f69  h./usr/lib/avr/i
 08f0 6e636c75 64652f61 76722f73 66725f64  nclude/avr/sfr_d
 0900 6566732e 68002f75 73722f6c 69622f61  efs.h./usr/lib/a
 0910 76722f69 6e636c75 64652f69 6e747479  vr/include/intty
 0920 7065732e 68002f75 73722f6c 69622f67  pes.h./usr/lib/g
 0930 63632f61 76722f35 2e342e30 2f696e63  cc/avr/5.4.0/inc
 0940 6c756465 2f737464 696e742e 68002f75  lude/stdint.h./u
 0950 73722f6c 69622f61 76722f69 6e636c75  sr/lib/avr/inclu
 0960 64652f73 7464696e 742e6800 696e7438  de/stdint.h.int8
 0970 5f743a74 28362c31 293d2830 2c313229  _t:t(6,1)=(0,12)
 0980 0075696e 74385f74 3a742836 2c32293d  .uint8_t:t(6,2)=
 0990 28302c31 33290069 6e743136 5f743a74  (0,13).int16_t:t
 09a0 28362c33 293d2830 2c312900 75696e74  (6,3)=(0,1).uint
 09b0 31365f74 3a742836 2c34293d 28302c34  16_t:t(6,4)=(0,4
 09c0 2900696e 7433325f 743a7428 362c3529  ).int32_t:t(6,5)
 09d0 3d28302c 33290075 696e7433 325f743a  =(0,3).uint32_t:
 09e0 7428362c 36293d28 302c3529 00696e74  t(6,6)=(0,5).int
 09f0 36345f74 3a742836 2c37293d 28302c38  64_t:t(6,7)=(0,8
 0a00 29007569 6e743634 5f743a74 28362c38  ).uint64_t:t(6,8
 0a10 293d2830 2c392900 696e7470 74725f74  )=(0,9).intptr_t
 0a20 3a742836 2c39293d 28362c33 29007569  :t(6,9)=(6,3).ui
 0a30 6e747074 725f743a 7428362c 3130293d  ntptr_t:t(6,10)=
 0a40 28362c34 2900696e 745f6c65 61737438  (6,4).int_least8
 0a50 5f743a74 28362c31 31293d28 362c3129  _t:t(6,11)=(6,1)
 0a60 0075696e 745f6c65 61737438 5f743a74  .uint_least8_t:t
 0a70 28362c31 32293d28 362c3229 00696e74  (6,12)=(6,2).int
 0a80 5f6c6561 73743136 5f743a74 28362c31  _least16_t:t(6,1
 0a90 33293d28 362c3329 0075696e 745f6c65  3)=(6,3).uint_le
 0aa0 61737431 365f743a 7428362c 3134293d  ast16_t:t(6,14)=
 0ab0 28362c34 2900696e 745f6c65 61737433  (6,4).int_least3
 0ac0 325f743a 7428362c 3135293d 28362c35  2_t:t(6,15)=(6,5
 0ad0 29007569 6e745f6c 65617374 33325f74  ).uint_least32_t
 0ae0 3a742836 2c313629 3d28362c 36290069  :t(6,16)=(6,6).i
 0af0 6e745f6c 65617374 36345f74 3a742836  nt_least64_t:t(6
 0b00 2c313729 3d28362c 37290075 696e745f  ,17)=(6,7).uint_
 0b10 6c656173 7436345f 743a7428 362c3138  least64_t:t(6,18
 0b20 293d2836 2c382900 696e745f 66617374  )=(6,8).int_fast
 0b30 385f743a 7428362c 3139293d 28362c31  8_t:t(6,19)=(6,1
 0b40 29007569 6e745f66 61737438 5f743a74  ).uint_fast8_t:t
 0b50 28362c32 30293d28 362c3229 00696e74  (6,20)=(6,2).int
 0b60 5f666173 7431365f 743a7428 362c3231  _fast16_t:t(6,21
 0b70 293d2836 2c332900 75696e74 5f666173  )=(6,3).uint_fas
 0b80 7431365f 743a7428 362c3232 293d2836  t16_t:t(6,22)=(6
 0b90 2c342900 696e745f 66617374 33325f74  ,4).int_fast32_t
 0ba0 3a742836 2c323329 3d28362c 35290075  :t(6,23)=(6,5).u
 0bb0 696e745f 66617374 33325f74 3a742836  int_fast32_t:t(6
 0bc0 2c323429 3d28362c 36290069 6e745f66  ,24)=(6,6).int_f
 0bd0 61737436 345f743a 7428362c 3235293d  ast64_t:t(6,25)=
 0be0 28362c37 29007569 6e745f66 61737436  (6,7).uint_fast6
 0bf0 345f743a 7428362c 3236293d 28362c38  4_t:t(6,26)=(6,8
 0c00 2900696e 746d6178 5f743a74 28362c32  ).intmax_t:t(6,2
 0c10 37293d28 362c3729 0075696e 746d6178  7)=(6,7).uintmax
 0c20 5f743a74 28362c32 38293d28 362c3829  _t:t(6,28)=(6,8)
 0c30 00696e74 5f666172 7074725f 743a7428  .int_farptr_t:t(
 0c40 342c3129 3d28362c 35290075 696e745f  4,1)=(6,5).uint_
 0c50 66617270 74725f74 3a742834 2c32293d  farptr_t:t(4,2)=
 0c60 28362c36 29002f75 73722f6c 69622f61  (6,6)./usr/lib/a
 0c70 76722f69 6e636c75 64652f61 76722f66  vr/include/avr/f
 0c80 7573652e 68005f5f 66757365 5f743a74  use.h.__fuse_t:t
 0c90 28372c31 293d2837 2c32293d 73336c6f  (7,1)=(7,2)=s3lo
 0ca0 773a2830 2c313329 2c302c38 3b686967  w:(0,13),0,8;hig
 0cb0 683a2830 2c313329 2c382c38 3b657874  h:(0,13),8,8;ext
 0cc0 656e6465 643a2830 2c313329 2c31362c  ended:(0,13),16,
 0cd0 383b3b00 2f757372 2f6c6962 2f617672  8;;./usr/lib/avr
 0ce0 2f696e63 6c756465 2f617672 2f70676d  /include/avr/pgm
 0cf0 73706163 652e6800 2f757372 2f6c6962  space.h./usr/lib
 0d00 2f676363 2f617672 2f352e34 2e302f69  /gcc/avr/5.4.0/i
 0d10 6e636c75 64652f73 74646465 662e6800  nclude/stddef.h.
 0d20 73697a65 5f743a74 28392c31 293d2830  size_t:t(9,1)=(0
 0d30 2c342900 2f757372 2f6c6962 2f617672  ,4)./usr/lib/avr
 0d40 2f696e63 6c756465 2f737464 696f2e68  /include/stdio.h
 0d50 002f7573 722f6c69 622f6763 632f6176  ./usr/lib/gcc/av
 0d60 722f352e 342e302f 696e636c 7564652f  r/5.4.0/include/
 0d70 73746461 72672e68 005f5f67 6e75635f  stdarg.h.__gnuc_
 0d80 76615f6c 6973743a 74283131 2c31293d  va_list:t(11,1)=
 0d90 2831312c 32293d2a 28302c34 39290076  (11,2)=*(0,49).v
 0da0 615f6c69 73743a74 2831312c 33293d28  a_list:t(11,3)=(
 0db0 31312c31 29005f5f 66696c65 3a542831  11,1).__file:T(1
 0dc0 302c3129 3d733134 6275663a 2831302c  0,1)=s14buf:(10,
 0dd0 32293d2a 28302c32 292c302c 31363b75  2)=*(0,2),0,16;u
 0de0 6e676574 3a28302c 3133292c 31362c38  nget:(0,13),16,8
 0df0 3b666c61 67733a28 362c3229 2c32342c  ;flags:(6,2),24,
 0e00 383b7369 7a653a28 302c3129 2c33322c  8;size:(0,1),32,
 0e10 31363b6c 656e3a28 302c3129 2c34382c  16;len:(0,1),48,
 0e20 31363b70 75743a28 31302c33 293d2a28  16;put:(10,3)=*(
 0e30 31302c34 293d6628 302c3129 2c36342c  10,4)=f(0,1),64,
 0e40 31363b67 65743a28 31302c35 293d2a28  16;get:(10,5)=*(
 0e50 31302c36 293d6628 302c3129 2c38302c  10,6)=f(0,1),80,
 0e60 31363b75 64617461 3a283130 2c37293d  16;udata:(10,7)=
 0e70 2a28302c 3439292c 39362c31 363b3b00  *(0,49),96,16;;.
 0e80 46494c45 3a742831 302c3829 3d283130  FILE:t(10,8)=(10
 0e90 2c312900 66706f73 5f743a74 2831302c  ,1).fpos_t:t(10,
 0ea0 39293d28 302c3829 006d6169 6e3a4628  9)=(0,8).main:F(
 0eb0 302c3439 29006172 7261793a 28302c35  0,49).array:(0,5
 0ec0 30293d61 7228302c 3531293d 7228302c  0)=ar(0,51)=r(0,
 0ed0 3531293b 303b3031 37373737 373b3b30  51);0;0177777;;0
 0ee0 3b323b28 302c3532 293d2a28 362c3229  ;2;(0,52)=*(6,2)
 0ef0 00736572 69616c2e 63007561 72745f70  .serial.c.uart_p
 0f00 75746368 61723a46 28302c31 29006368  utchar:F(0,1).ch
 0f10 723a5028 302c3229 00737472 65616d3a  r:P(0,2).stream:
 0f20 5028302c 3530293d 2a28372c 38290075  P(0,50)=*(7,8).u
 0f30 6172745f 696e6974 3a462830 2c343929  art_init:F(0,49)
 0f40 00756172 745f6765 74636861 723a4628  .uart_getchar:F(
 0f50 302c3229 00756172 745f7374 646f7574  0,2).uart_stdout
 0f60 3a532837 2c382900 6770696f 2e630067  :S(7,8).gpio.c.g
 0f70 70696f5f 696e6974 3a462830 2c343929  pio_init:F(0,49)
 0f80 00616463 2e630061 64635f69 6e69743a  .adc.c.adc_init:
 0f90 4628302c 34392900 7365745f 6164635f  F(0,49).set_adc_
 0fa0 76616c75 653a4628 302c3439 29007661  value:F(0,49).va
 0fb0 6c3a5028 352c3229 00676574 5f616463  l:P(5,2).get_adc
 0fc0 5f76616c 75653a46 28352c32 29006164  _value:F(5,2).ad
 0fd0 635f7661 6c75653a 5328302c 3530293d  c_value:S(0,50)=
 0fe0 4228352c 32290074 696d6572 2e630074  B(5,2).timer.c.t
 0ff0 696d6572 5f696e69 743a4628 302c3439  imer_init:F(0,49
 1000 29006932 632e6300 6932635f 696e6974  ).i2c.c.i2c_init
 1010 3a462830 2c343929 00693263 5f6d6561  :F(0,49).i2c_mea
 1020 6e696e67 66756c5f 73746174 75733a46  ningful_status:F
 1030 28302c34 39290073 74617475 733a5028  (0,49).status:P(
 1040 352c3229 00693263 5f737461 72743a46  5,2).i2c_start:F
 1050 28302c34 39290069 32635f73 746f703a  (0,49).i2c_stop:
 1060 4628302c 34392900 6932635f 6765745f  F(0,49).i2c_get_
 1070 73746174 75733a46 28352c32 29006932  status:F(5,2).i2
 1080 635f786d 69745f61 6464723a 4628302c  c_xmit_addr:F(0,
 1090 34392900 61646472 6573733a 5028352c  49).address:P(5,
 10a0 32290072 773a5028 352c3229 00693263  2).rw:P(5,2).i2c
 10b0 5f786d69 745f6279 74653a46 28302c34  _xmit_byte:F(0,4
 10c0 39290064 6174613a 5028352c 32290069  9).data:P(5,2).i
 10d0 32635f72 6561645f 41434b3a 4628352c  2c_read_ACK:F(5,
 10e0 32290069 32635f72 6561645f 4e414b3a  2).i2c_read_NAK:
 10f0 4628352c 32290065 6570726f 6d5f7761  F(5,2).eeprom_wa
 1100 69745f75 6e74696c 5f777269 74655f63  it_until_write_c
 1110 6f6d706c 6574653a 4628302c 34392900  omplete:F(0,49).
 1120 65657072 6f6d5f72 6561645f 62797465  eeprom_read_byte
 1130 3a462835 2c322900 61646472 3a502835  :F(5,2).addr:P(5
 1140 2c322900 65657072 6f6d5f77 72697465  ,2).eeprom_write
 1150 5f627974 653a4628 302c3439 29006565  _byte:F(0,49).ee
 1160 70726f6d 5f777269 74655f70 6167653a  prom_write_page:
 1170 4628302c 34392900 64617461 3a502830  F(0,49).data:P(0
 1180 2c353029 3d2a2835 2c322900 63686172  ,50)=*(5,2).char
 1190 64617461 3a722835 2c322900 65657072  data:r(5,2).eepr
 11a0 6f6d5f73 65717565 6e746961 6c5f7265  om_sequential_re
 11b0 61643a46 28302c34 39290049 6e697469  ad:F(0,49).Initi
 11c0 616c5f61 6464723a 5028352c 3229006c  al_addr:P(5,2).l
 11d0 656e3a50 28352c32 2900693a 7228302c  en:P(5,2).i:r(0,
 11e0 312900                               1).             
Contents of section .comment:
 0000 4743433a 2028474e 55292035 2e342e30  GCC: (GNU) 5.4.0
 0010 00                                   .               
Contents of section .note.gnu.avr.deviceinfo:
 0000 04000000 2d000000 01000000 41565200  ....-.......AVR.
 0010 00000000 00800000 00010000 00080000  ................
 0020 00000000 00040000 08000000 01000000  ................
 0030 0061746d 65676133 32387000 00000000  .atmega328p.....
Contents of section .debug_info:
 0000 f0050000 02000000 00000401 00000000  ................
 0010 00000000 020f0000 00010803 17000000  ................
 0020 02070414 00000005 1b000000 ff030006  ................
 0030 20000000 00002200 00000105 03000081   .....".........
 0040 00072900 00000000 14000000 010503c6  ..).............
 0050 00800008 2e000000 00001400 00000105  ................
 0060 03c00080 00093500 00000000 14000000  ......5.........
 0070 010503c1 0080000a 3c000000 00001400  ........<.......
 0080 00000105 03c20080 000b4300 00000000  ..........C.....
 0090 1b000000 010503c4 0080000c 49000000  ............I...
 00a0 00001400 00000105 03bd0080 000d4f00  ..............O.
 00b0 00000000 14000000 010503b8 0080000e  ................
 00c0 54000000 00001400 00000105 03bc0080  T...............
 00d0 000f5900 00000000 14000000 010503b9  ..Y.............
 00e0 00800010 5e000000 00001400 00000105  ....^...........
 00f0 03bb0080 00116300 00000000 14000000  ......c.........
 0100 010503ba 00800012 68000000 00001400  ........h.......
 0110 00000105 036f0080 00136f00 00000000  .....o....o.....
 0120 14000000 01050336 00800014 75000000  .......6....u...
 0130 00001400 00000105 03800080 00157c00  ..............|.
 0140 00000000 14000000 01050381 00800016  ................
 0150 83000000 00001400 00000105 03820080  ................
 0160 00178a00 00000000 1b000000 01050384  ................
 0170 00800018 90000000 00001b00 00000105  ................
 0180 03880080 00199600 00000000 1b000000  ................
 0190 0105038a 0080001a 9c000000 00001b00  ................
 01a0 00000105 03860080 001ba100 00000000  ................
 01b0 14000000 01050343 0080001c a7000000  .......C........
 01c0 00001400 00000105 03700080 001dae00  .........p......
 01d0 00000000 14000000 01050337 0080001e  ...........7....
 01e0 b4000000 00001400 00000105 03b00080  ................
 01f0 001fbb00 00000000 14000000 010503b1  ................
 0200 00800020 c2000000 00001400 00000105  ... ............
 0210 03b20080 0021c800 00000000 14000000  .....!..........
 0220 010503b4 00800022 ce000000 00001400  ......."........
 0230 00000105 03b30080 0023d400 00000000  .........#......
 0240 14000000 010503b6 00800024 d9000000  ...........$....
 0250 00001400 00000105 03430080 0025df00  .........C...%..
 0260 00000000 14000000 0105037c 00800026  ...........|...&
 0270 e5000000 00001b00 00000105 03780080  .............x..
 0280 0027e900 00000000 14000000 0105037a  .'.............z
 0290 00800028 f0000000 00001400 00000105  ...(............
 02a0 037b0080 0029f700 00000000 14000000  .{...)..........
 02b0 0105037e 0080002a fd000000 00001400  ...~...*........
 02c0 00000105 03500080 002b0201 00000000  .....P...+......
 02d0 14000000 0105037f 0080002c 08010000  ...........,....
 02e0 00001400 00000105 03250080 002d0e01  .........%...-..
 02f0 00000000 14000000 01050324 0080002e  ...........$....
 0300 13010000 00001400 00000105 03230080  .............#..
 0310 002f1801 00000000 14000000 01050328  ./.............(
 0320 00800030 1e010000 00001400 00000105  ...0............
 0330 03270080 00312301 00000000 14000000  .'...1#.........
 0340 01050326 00800032 28010000 00001400  ...&...2(.......
 0350 00000105 032b0080 00332e01 00000000  .....+...3......
 0360 14000000 0105032a 00800034 33010000  .......*...43...
 0370 00001400 00000105 03290080 00353801  .........)...58.
 0380 00000000 14000000 01050348 00800036  ...........H...6
 0390 3e010000 00001400 00000105 03470080  >............G..
 03a0 00374401 00000000 14000000 01050346  .7D............F
 03b0 00800038 4a010000 00001400 00000105  ...8J...........
 03c0 03450080 00395101 00000000 14000000  .E...9Q.........
 03d0 01050344 0080003a 58010000 00001400  ...D...:X.......
 03e0 00000105 036e0080 003b5f01 00000000  .....n...;_.....
 03f0 14000000 01050335 0080003c 65010000  .......5...<e...
 0400 00001400 00000105 03430080 003d6b01  .........C...=k.
 0410 00000000 14000000 01050369 0080003e  ...........i...>
 0420 71010000 00001400 00000105 033d0080  q............=..
 0430 003f7701 00000000 14000000 0105033c  .?w............<
 0440 00800040 7c010000 00001400 00000105  ...@|...........
 0450 03680080 00418201 00000000 14000000  .h...A..........
 0460 0105036d 00800042 89010000 00001400  ...m...B........
 0470 00000105 036c0080 00439001 00000000  .....l...C......
 0480 14000000 0105036b 00800044 97010000  .......k...D....
 0490 00001400 00000105 033b0080 00459d01  .........;...E..
 04a0 00000000 14000000 0105034e 00800046  ...........N...F
 04b0 a2010000 00001400 00000105 034d0080  .............M..
 04c0 0047a701 00000000 14000000 0105034c  .G.............L
 04d0 00800048 ac010000 00001400 00000105  ...H............
 04e0 03600080 0049b301 00000000 14000000  .`...I..........
 04f0 01050364 0080004a b7010000 00001400  ...d...J........
 0500 00000105 03660080 004bbe01 00000000  .....f...K......
 0510 14000000 01050361 0080004c c4010000  .......a...L....
 0520 00001400 00000105 035f0080 004dc901  ........._...M..
 0530 00000000 1b000000 0105035d 0080004e  ...........]...N
 0540 cc010000 00001400 00000105 03570080  .............W..
 0550 004fd301 00000000 14000000 01050355  .O.............U
 0560 00800050 d9010000 00001400 00000105  ...P............
 0570 03540080 0051df01 00000000 14000000  .T...Q..........
 0580 01050353 00800052 e4010000 00001400  ...S...R........
 0590 00000105 034b0080 0053eb01 00000000  .....K...S......
 05a0 14000000 0105034a 00800054 f2010000  .......J...T....
 05b0 00001400 00000105 033e0080 0055f901  .........>...U..
 05c0 00000000 1b000000 01050341 00800056  ...........A...V
 05d0 fe010000 00001400 00000105 03400080  .............@..
 05e0 00570302 00000000 14000000 0105033f  .W.............?
 05f0 00800000                             ....            
Contents of section .debug_abbrev:
 0000 01110125 0e100600 00022400 030e0b0b  ...%......$.....
 0010 3e0b0000 03240003 0e0b0b3e 0b000004  >....$.....>....
 0020 01014913 00000521 0049132f 05000006  ..I....!.I./....
 0030 3400030e 3a0b3b0b 49133f0c 020a0000  4...:.;.I.?.....
 0040 07340003 0e3a0b3b 0b49133f 0c020a00  .4...:.;.I.?....
 0050 00083400 030e3a0b 3b0b4913 3f0c020a  ..4...:.;.I.?...
 0060 00000934 00030e3a 0b3b0b49 133f0c02  ...4...:.;.I.?..
 0070 0a00000a 3400030e 3a0b3b0b 49133f0c  ....4...:.;.I.?.
 0080 020a0000 0b340003 0e3a0b3b 0b49133f  .....4...:.;.I.?
 0090 0c020a00 000c3400 030e3a0b 3b0b4913  ......4...:.;.I.
 00a0 3f0c020a 00000d34 00030e3a 0b3b0b49  ?......4...:.;.I
 00b0 133f0c02 0a00000e 3400030e 3a0b3b0b  .?......4...:.;.
 00c0 49133f0c 020a0000 0f340003 0e3a0b3b  I.?......4...:.;
 00d0 0b49133f 0c020a00 00103400 030e3a0b  .I.?......4...:.
 00e0 3b0b4913 3f0c020a 00001134 00030e3a  ;.I.?......4...:
 00f0 0b3b0b49 133f0c02 0a000012 3400030e  .;.I.?......4...
 0100 3a0b3b0b 49133f0c 020a0000 13340003  :.;.I.?......4..
 0110 0e3a0b3b 0b49133f 0c020a00 00143400  .:.;.I.?......4.
 0120 030e3a0b 3b0b4913 3f0c020a 00001534  ..:.;.I.?......4
 0130 00030e3a 0b3b0b49 133f0c02 0a000016  ...:.;.I.?......
 0140 3400030e 3a0b3b0b 49133f0c 020a0000  4...:.;.I.?.....
 0150 17340003 0e3a0b3b 0b49133f 0c020a00  .4...:.;.I.?....
 0160 00183400 030e3a0b 3b0b4913 3f0c020a  ..4...:.;.I.?...
 0170 00001934 00030e3a 0b3b0b49 133f0c02  ...4...:.;.I.?..
 0180 0a00001a 3400030e 3a0b3b0b 49133f0c  ....4...:.;.I.?.
 0190 020a0000 1b340003 0e3a0b3b 0b49133f  .....4...:.;.I.?
 01a0 0c020a00 001c3400 030e3a0b 3b0b4913  ......4...:.;.I.
 01b0 3f0c020a 00001d34 00030e3a 0b3b0b49  ?......4...:.;.I
 01c0 133f0c02 0a00001e 3400030e 3a0b3b0b  .?......4...:.;.
 01d0 49133f0c 020a0000 1f340003 0e3a0b3b  I.?......4...:.;
 01e0 0b49133f 0c020a00 00203400 030e3a0b  .I.?..... 4...:.
 01f0 3b0b4913 3f0c020a 00002134 00030e3a  ;.I.?.....!4...:
 0200 0b3b0b49 133f0c02 0a000022 3400030e  .;.I.?....."4...
 0210 3a0b3b0b 49133f0c 020a0000 23340003  :.;.I.?.....#4..
 0220 0e3a0b3b 0b49133f 0c020a00 00243400  .:.;.I.?.....$4.
 0230 030e3a0b 3b0b4913 3f0c020a 00002534  ..:.;.I.?.....%4
 0240 00030e3a 0b3b0b49 133f0c02 0a000026  ...:.;.I.?.....&
 0250 3400030e 3a0b3b0b 49133f0c 020a0000  4...:.;.I.?.....
 0260 27340003 0e3a0b3b 0b49133f 0c020a00  '4...:.;.I.?....
 0270 00283400 030e3a0b 3b0b4913 3f0c020a  .(4...:.;.I.?...
 0280 00002934 00030e3a 0b3b0b49 133f0c02  ..)4...:.;.I.?..
 0290 0a00002a 3400030e 3a0b3b0b 49133f0c  ...*4...:.;.I.?.
 02a0 020a0000 2b340003 0e3a0b3b 0b49133f  ....+4...:.;.I.?
 02b0 0c020a00 002c3400 030e3a0b 3b0b4913  .....,4...:.;.I.
 02c0 3f0c020a 00002d34 00030e3a 0b3b0b49  ?.....-4...:.;.I
 02d0 133f0c02 0a00002e 3400030e 3a0b3b0b  .?......4...:.;.
 02e0 49133f0c 020a0000 2f340003 0e3a0b3b  I.?...../4...:.;
 02f0 0b49133f 0c020a00 00303400 030e3a0b  .I.?.....04...:.
 0300 3b0b4913 3f0c020a 00003134 00030e3a  ;.I.?.....14...:
 0310 0b3b0b49 133f0c02 0a000032 3400030e  .;.I.?.....24...
 0320 3a0b3b0b 49133f0c 020a0000 33340003  :.;.I.?.....34..
 0330 0e3a0b3b 0b49133f 0c020a00 00343400  .:.;.I.?.....44.
 0340 030e3a0b 3b0b4913 3f0c020a 00003534  ..:.;.I.?.....54
 0350 00030e3a 0b3b0b49 133f0c02 0a000036  ...:.;.I.?.....6
 0360 3400030e 3a0b3b0b 49133f0c 020a0000  4...:.;.I.?.....
 0370 37340003 0e3a0b3b 0b49133f 0c020a00  74...:.;.I.?....
 0380 00383400 030e3a0b 3b0b4913 3f0c020a  .84...:.;.I.?...
 0390 00003934 00030e3a 0b3b0b49 133f0c02  ..94...:.;.I.?..
 03a0 0a00003a 3400030e 3a0b3b0b 49133f0c  ...:4...:.;.I.?.
 03b0 020a0000 3b340003 0e3a0b3b 0b49133f  ....;4...:.;.I.?
 03c0 0c020a00 003c3400 030e3a0b 3b0b4913  .....<4...:.;.I.
 03d0 3f0c020a 00003d34 00030e3a 0b3b0b49  ?.....=4...:.;.I
 03e0 133f0c02 0a00003e 3400030e 3a0b3b0b  .?.....>4...:.;.
 03f0 49133f0c 020a0000 3f340003 0e3a0b3b  I.?.....?4...:.;
 0400 0b49133f 0c020a00 00403400 030e3a0b  .I.?.....@4...:.
 0410 3b0b4913 3f0c020a 00004134 00030e3a  ;.I.?.....A4...:
 0420 0b3b0b49 133f0c02 0a000042 3400030e  .;.I.?.....B4...
 0430 3a0b3b0b 49133f0c 020a0000 43340003  :.;.I.?.....C4..
 0440 0e3a0b3b 0b49133f 0c020a00 00443400  .:.;.I.?.....D4.
 0450 030e3a0b 3b0b4913 3f0c020a 00004534  ..:.;.I.?.....E4
 0460 00030e3a 0b3b0b49 133f0c02 0a000046  ...:.;.I.?.....F
 0470 3400030e 3a0b3b0b 49133f0c 020a0000  4...:.;.I.?.....
 0480 47340003 0e3a0b3b 0b49133f 0c020a00  G4...:.;.I.?....
 0490 00483400 030e3a0b 3b0b4913 3f0c020a  .H4...:.;.I.?...
 04a0 00004934 00030e3a 0b3b0b49 133f0c02  ..I4...:.;.I.?..
 04b0 0a00004a 3400030e 3a0b3b0b 49133f0c  ...J4...:.;.I.?.
 04c0 020a0000 4b340003 0e3a0b3b 0b49133f  ....K4...:.;.I.?
 04d0 0c020a00 004c3400 030e3a0b 3b0b4913  .....L4...:.;.I.
 04e0 3f0c020a 00004d34 00030e3a 0b3b0b49  ?.....M4...:.;.I
 04f0 133f0c02 0a00004e 3400030e 3a0b3b0b  .?.....N4...:.;.
 0500 49133f0c 020a0000 4f340003 0e3a0b3b  I.?.....O4...:.;
 0510 0b49133f 0c020a00 00503400 030e3a0b  .I.?.....P4...:.
 0520 3b0b4913 3f0c020a 00005134 00030e3a  ;.I.?.....Q4...:
 0530 0b3b0b49 133f0c02 0a000052 3400030e  .;.I.?.....R4...
 0540 3a0b3b0b 49133f0c 020a0000 53340003  :.;.I.?.....S4..
 0550 0e3a0b3b 0b49133f 0c020a00 00543400  .:.;.I.?.....T4.
 0560 030e3a0b 3b0b4913 3f0c020a 00005534  ..:.;.I.?.....U4
 0570 00030e3a 0b3b0b49 133f0c02 0a000056  ...:.;.I.?.....V
 0580 3400030e 3a0b3b0b 49133f0c 020a0000  4...:.;.I.?.....
 0590 57340003 0e3a0b3b 0b49133f 0c020a00  W4...:.;.I.?....
 05a0 0000                                 ..              
Contents of section .debug_line:
 0000 16000000 02001000 00000201 fb0e0a00  ................
 0010 01010101 00000001 0000               ..........      
Contents of section .debug_str:
 0000 6176722d 6c696263 20322e30 2e300075  avr-libc 2.0.0.u
 0010 696e7438 5f740075 696e7431 365f7400  int8_t.uint16_t.
 0020 5f5f6565 70726f6d 00554452 30005543  __eeprom.UDR0.UC
 0030 53523041 00554353 52304200 55435352  SR0A.UCSR0B.UCSR
 0040 30430055 42525230 00545741 4d520054  0C.UBRR0.TWAMR.T
 0050 57425200 54574352 00545753 52005457  WBR.TWCR.TWSR.TW
 0060 44520054 57415200 54494d53 4b310054  DR.TWAR.TIMSK1.T
 0070 49465231 00544343 52314100 54434352  IFR1.TCCR1A.TCCR
 0080 31420054 43435231 43005443 4e543100  1B.TCCR1C.TCNT1.
 0090 4f435231 41004f43 52314200 49435231  OCR1A.OCR1B.ICR1
 00a0 00475443 43520054 494d534b 32005449  .GTCCR.TIMSK2.TI
 00b0 46523200 54434352 32410054 43435232  FR2.TCCR2A.TCCR2
 00c0 42005443 4e543200 4f435232 42004f43  B.TCNT2.OCR2B.OC
 00d0 52324100 41535352 00475443 43520041  R2A.ASSR.GTCCR.A
 00e0 444d5558 00414443 00414443 53524100  DMUX.ADC.ADCSRA.
 00f0 41444353 52420044 49445230 00414353  ADCSRB.DIDR0.ACS
 0100 52004449 44523100 504f5254 42004444  R.DIDR1.PORTB.DD
 0110 52420050 494e4200 504f5254 43004444  RB.PINB.PORTC.DD
 0120 52430050 494e4300 504f5254 44004444  RC.PINC.PORTD.DD
 0130 52440050 494e4400 4f435230 42004f43  RD.PIND.OCR0B.OC
 0140 52304100 54434e54 30005443 43523042  R0A.TCNT0.TCCR0B
 0150 00544343 52304100 54494d53 4b300054  .TCCR0A.TIMSK0.T
 0160 49465230 00475443 43520045 49435241  IFR0.GTCCR.EICRA
 0170 0045494d 534b0045 49465200 50434943  .EIMSK.EIFR.PCIC
 0180 52005043 4d534b32 0050434d 534b3100  R.PCMSK2.PCMSK1.
 0190 50434d53 4b300050 43494652 00535044  PCMSK0.PCIFR.SPD
 01a0 52005350 53520053 50435200 57445443  R.SPSR.SPCR.WDTC
 01b0 53520050 5252004f 53434341 4c00434c  SR.PRR.OSCCAL.CL
 01c0 4b505200 53524547 00535000 53504d43  KPR.SREG.SP.SPMC
 01d0 5352004d 43554352 004d4355 53520053  SR.MCUCR.MCUSR.S
 01e0 4d435200 4750494f 52320047 50494f52  MCR.GPIOR2.GPIOR
 01f0 31004750 494f5230 00454541 52004545  1.GPIOR0.EEAR.EE
 0200 44520045 45435200                    DR.EECR.        

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__ctors_end>
   4:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
   8:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
   c:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
  10:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
  14:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
  18:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
  1c:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
  20:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
  24:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
  28:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
  2c:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
  30:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
  34:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
  38:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
  3c:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
  40:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
  44:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
  48:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
  4c:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
  50:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
  54:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
  58:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
  5c:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
  60:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
  64:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
  68:	82 01       	movw	r16, r4
  6a:	68 01       	movw	r12, r16
  6c:	68 01       	movw	r12, r16
  6e:	68 01       	movw	r12, r16
  70:	68 01       	movw	r12, r16
  72:	68 01       	movw	r12, r16
  74:	68 01       	movw	r12, r16
  76:	68 01       	movw	r12, r16
  78:	8b 01       	movw	r16, r22
  7a:	68 01       	movw	r12, r16
  7c:	68 01       	movw	r12, r16
  7e:	68 01       	movw	r12, r16
  80:	68 01       	movw	r12, r16
  82:	68 01       	movw	r12, r16
  84:	68 01       	movw	r12, r16
  86:	68 01       	movw	r12, r16
  88:	94 01       	movw	r18, r8
  8a:	68 01       	movw	r12, r16
  8c:	68 01       	movw	r12, r16
  8e:	68 01       	movw	r12, r16
  90:	68 01       	movw	r12, r16
  92:	68 01       	movw	r12, r16
  94:	68 01       	movw	r12, r16
  96:	68 01       	movw	r12, r16
  98:	9d 01       	movw	r18, r26
  9a:	68 01       	movw	r12, r16
  9c:	68 01       	movw	r12, r16
  9e:	68 01       	movw	r12, r16
  a0:	68 01       	movw	r12, r16
  a2:	68 01       	movw	r12, r16
  a4:	68 01       	movw	r12, r16
  a6:	68 01       	movw	r12, r16
  a8:	a6 01       	movw	r20, r12
  aa:	68 01       	movw	r12, r16
  ac:	68 01       	movw	r12, r16
  ae:	68 01       	movw	r12, r16
  b0:	68 01       	movw	r12, r16
  b2:	68 01       	movw	r12, r16
  b4:	68 01       	movw	r12, r16
  b6:	68 01       	movw	r12, r16
  b8:	af 01       	movw	r20, r30
  ba:	68 01       	movw	r12, r16
  bc:	68 01       	movw	r12, r16
  be:	68 01       	movw	r12, r16
  c0:	68 01       	movw	r12, r16
  c2:	68 01       	movw	r12, r16
  c4:	68 01       	movw	r12, r16
  c6:	68 01       	movw	r12, r16
  c8:	b8 01       	movw	r22, r16
  ca:	68 01       	movw	r12, r16
  cc:	68 01       	movw	r12, r16
  ce:	68 01       	movw	r12, r16
  d0:	68 01       	movw	r12, r16
  d2:	68 01       	movw	r12, r16
  d4:	68 01       	movw	r12, r16
  d6:	68 01       	movw	r12, r16
  d8:	c1 01       	movw	r24, r2
  da:	68 01       	movw	r12, r16
  dc:	68 01       	movw	r12, r16
  de:	68 01       	movw	r12, r16
  e0:	68 01       	movw	r12, r16
  e2:	68 01       	movw	r12, r16
  e4:	68 01       	movw	r12, r16
  e6:	68 01       	movw	r12, r16
  e8:	ca 01       	movw	r24, r20
  ea:	68 01       	movw	r12, r16
  ec:	68 01       	movw	r12, r16
  ee:	68 01       	movw	r12, r16
  f0:	68 01       	movw	r12, r16
  f2:	68 01       	movw	r12, r16
  f4:	68 01       	movw	r12, r16
  f6:	68 01       	movw	r12, r16
  f8:	d3 01       	movw	r26, r6
  fa:	68 01       	movw	r12, r16
  fc:	68 01       	movw	r12, r16
  fe:	68 01       	movw	r12, r16
 100:	68 01       	movw	r12, r16
 102:	68 01       	movw	r12, r16
 104:	68 01       	movw	r12, r16
 106:	68 01       	movw	r12, r16
 108:	79 01       	movw	r14, r18

0000010a <__trampolines_end>:
 10a:	25 58       	subi	r18, 0x85	; 133
 10c:	20 00       	.word	0x0020	; ????

0000010e <__c.2301>:
 10e:	0a 20 4d 79 20 48 45 58 20 20 73 74 72 69 6e 67     . My HEX  string
 11e:	20 20 0a 00                                           ..

00000122 <__c.2296>:
 122:	25 63 20 20 00                                      %c  .

00000127 <__c.2293>:
 127:	0a 20 4d 79 20 73 74 72 69 6e 67 20 69 6e 20 20     . My string in  
 137:	41 53 43 49 49 20 63 68 61 72 20 0a 00              ASCII char ..

00000144 <__c.2292>:
 144:	4e 2f 41 20 25 30 32 58 0a 00                       N/A %02X..

0000014e <__c.2289>:
 14e:	4d 52 20 44 41 54 41 2b 52 2c 20 4e 41 4b 0a 00     MR DATA+R, NAK..

0000015e <__c.2286>:
 15e:	4d 52 20 44 41 54 41 2b 52 2c 20 41 43 4b 0a 00     MR DATA+R, ACK..

0000016e <__c.2283>:
 16e:	4d 52 20 53 4c 41 2b 52 2c 20 4e 41 4b 0a 00        MR SLA+R, NAK..

0000017d <__c.2280>:
 17d:	4d 52 20 53 4c 41 2b 52 2c 20 41 43 4b 0a 00        MR SLA+R, ACK..

0000018c <__c.2277>:
 18c:	4d 54 20 44 41 54 41 2b 57 2c 20 4e 41 4b 0a 00     MT DATA+W, NAK..

0000019c <__c.2274>:
 19c:	4d 54 20 44 41 54 41 2b 57 2c 20 41 43 4b 0a 00     MT DATA+W, ACK..

000001ac <__c.2271>:
 1ac:	4d 54 20 53 4c 41 2b 57 2c 20 4e 41 4b 0a 00        MT SLA+W, NAK..

000001bb <__c.2268>:
 1bb:	4d 54 20 53 4c 41 2b 57 2c 20 41 43 4b 0a 00        MT SLA+W, ACK..

000001ca <__c.2265>:
 1ca:	4e 4f 41 52 42 2f 4e 41 4b 0a 00                    NOARB/NAK..

000001d5 <__c.2262>:
 1d5:	52 45 53 54 41 52 54 0a 00                          RESTART..

000001de <__c.2258>:
 1de:	53 54 41 52 54 0a 00 00                             START...

000001e6 <__ctors_end>:
 1e6:	11 24       	eor	r1, r1
 1e8:	1f be       	out	0x3f, r1	; 63
 1ea:	cf ef       	ldi	r28, 0xFF	; 255
 1ec:	d8 e0       	ldi	r29, 0x08	; 8
 1ee:	de bf       	out	0x3e, r29	; 62
 1f0:	cd bf       	out	0x3d, r28	; 61

000001f2 <__do_copy_data>:
 1f2:	11 e0       	ldi	r17, 0x01	; 1
 1f4:	a0 e0       	ldi	r26, 0x00	; 0
 1f6:	b1 e0       	ldi	r27, 0x01	; 1
 1f8:	e2 e7       	ldi	r30, 0x72	; 114
 1fa:	fd e0       	ldi	r31, 0x0D	; 13
 1fc:	02 c0       	rjmp	.+4      	; 0x202 <__do_copy_data+0x10>
 1fe:	05 90       	lpm	r0, Z+
 200:	0d 92       	st	X+, r0
 202:	a0 33       	cpi	r26, 0x30	; 48
 204:	b1 07       	cpc	r27, r17
 206:	d9 f7       	brne	.-10     	; 0x1fe <__do_copy_data+0xc>

00000208 <__do_clear_bss>:
 208:	21 e0       	ldi	r18, 0x01	; 1
 20a:	a0 e3       	ldi	r26, 0x30	; 48
 20c:	b1 e0       	ldi	r27, 0x01	; 1
 20e:	01 c0       	rjmp	.+2      	; 0x212 <.do_clear_bss_start>

00000210 <.do_clear_bss_loop>:
 210:	1d 92       	st	X+, r1

00000212 <.do_clear_bss_start>:
 212:	a7 33       	cpi	r26, 0x37	; 55
 214:	b2 07       	cpc	r27, r18
 216:	e1 f7       	brne	.-8      	; 0x210 <.do_clear_bss_loop>
 218:	0e 94 55 03 	call	0x6aa	; 0x6aa <main>
 21c:	0c 94 b7 06 	jmp	0xd6e	; 0xd6e <_exit>

00000220 <__bad_interrupt>:
 220:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000224 <uart_putchar>:
	UCSR0C = (1 << UCSZ01 | 1 << UCSZ00);

	stdout = &uart_stdout;
}

int uart_putchar(char chr, FILE *stream) {
 224:	cf 93       	push	r28
 226:	c8 2f       	mov	r28, r24
	if (chr == '\n') {
 228:	8a 30       	cpi	r24, 0x0A	; 10
 22a:	51 f0       	breq	.+20     	; 0x240 <uart_putchar+0x1c>
		uart_putchar('\r', NULL);
	}
	while (!(UCSR0A & (1 << UDRE0)))
 22c:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
 230:	85 ff       	sbrs	r24, 5
 232:	fc cf       	rjmp	.-8      	; 0x22c <uart_putchar+0x8>
		;
	UDR0 = chr;
 234:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
	return 0;
}
 238:	80 e0       	ldi	r24, 0x00	; 0
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	cf 91       	pop	r28
 23e:	08 95       	ret
	stdout = &uart_stdout;
}

int uart_putchar(char chr, FILE *stream) {
	if (chr == '\n') {
		uart_putchar('\r', NULL);
 240:	60 e0       	ldi	r22, 0x00	; 0
 242:	70 e0       	ldi	r23, 0x00	; 0
 244:	8d e0       	ldi	r24, 0x0D	; 13
 246:	0e 94 12 01 	call	0x224	; 0x224 <uart_putchar>
 24a:	f0 cf       	rjmp	.-32     	; 0x22c <uart_putchar+0x8>

0000024c <uart_init>:
#include "serial.h"

static FILE uart_stdout = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);

void uart_init(void) {
	UBRR0H = (unsigned char)(UBRR >> 8);
 24c:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
	UBRR0L = (unsigned char)(UBRR);
 250:	89 e1       	ldi	r24, 0x19	; 25
 252:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
	UCSR0A = 0;
 256:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
	UCSR0B = (1 << TXEN0 | 1 << RXEN0);
 25a:	88 e1       	ldi	r24, 0x18	; 24
 25c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
	UCSR0C = (1 << UCSZ01 | 1 << UCSZ00);
 260:	86 e0       	ldi	r24, 0x06	; 6
 262:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>

	stdout = &uart_stdout;
 266:	80 e0       	ldi	r24, 0x00	; 0
 268:	91 e0       	ldi	r25, 0x01	; 1
 26a:	90 93 34 01 	sts	0x0134, r25	; 0x800134 <__iob+0x3>
 26e:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <__iob+0x2>
 272:	08 95       	ret

00000274 <uart_getchar>:
	UDR0 = chr;
	return 0;
}

char uart_getchar(void) {
	while (!(UCSR0A & (1 << RXC0)))
 274:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
 278:	87 ff       	sbrs	r24, 7
 27a:	fc cf       	rjmp	.-8      	; 0x274 <uart_getchar>
		;
	return UDR0;
 27c:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
}
 280:	08 95       	ret

00000282 <gpio_init>:
#include <avr/pgmspace.h>
#include <stdio.h>

#include "gpio.h"

void gpio_init() {
 282:	08 95       	ret

00000284 <adc_init>:
	/*
	 * - Reference voltage = AVcc (5V) (REFS[1:0]=0b01)
	 * - Left adjusted data (ADLAR=1)
	 * - Using channel ADC0 (MUX[3:0]=0b0000)
	 */
	ADMUX = (1 << REFS0 | 1 << ADLAR);
 284:	ec e7       	ldi	r30, 0x7C	; 124
 286:	f0 e0       	ldi	r31, 0x00	; 0
 288:	80 e6       	ldi	r24, 0x60	; 96
 28a:	80 83       	st	Z, r24
	ADMUX |= (0 << MUX3 | 0 << MUX2 | 0 << MUX1 | 0 << MUX0);
 28c:	80 81       	ld	r24, Z
 28e:	80 83       	st	Z, r24
	/*
	 * - ADC enabled
	 * - Interrupts enabled
	 * - Prescaler set to 8 (ADPS[2:0]=0b011)
	 */
	ADCSRA = (1 << ADEN | 1 << ADIE | 0 << ADPS2 | 1 << ADPS1 | 1 << ADPS0);
 290:	8b e8       	ldi	r24, 0x8B	; 139
 292:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
 296:	08 95       	ret

00000298 <set_adc_value>:
}

void set_adc_value(uint8_t val) {
	adc_value = val;
 298:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <__data_end>
 29c:	08 95       	ret

0000029e <get_adc_value>:
}

uint8_t get_adc_value(void) {
	return adc_value;
 29e:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <__data_end>
}
 2a2:	08 95       	ret

000002a4 <timer_init>:
#include <avr/io.h>

#include "timer.h"

void timer_init() {
 2a4:	08 95       	ret

000002a6 <i2c_init>:

	/* TWSR – TWI Status Register
	   TWPS1  TWPS0   Prescaler Value
       0      0         1
    */
	TWSR |= (0 << TWPS1); // setting presclar value to 4
 2a6:	e9 eb       	ldi	r30, 0xB9	; 185
 2a8:	f0 e0       	ldi	r31, 0x00	; 0
 2aa:	80 81       	ld	r24, Z
 2ac:	80 83       	st	Z, r24
	TWSR |= (1 << TWPS0); // setting bit rate
 2ae:	80 81       	ld	r24, Z
 2b0:	81 60       	ori	r24, 0x01	; 1
 2b2:	80 83       	st	Z, r24
	//TWSR = 0x00;
	TWBR = 0x12; //set SCL to 100KHz; from calculating;  SCL frequency = CPU Clock frequency/16+ 2*(TWBR) (prescalar) =72( decimal value)
 2b4:	82 e1       	ldi	r24, 0x12	; 18
 2b6:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>

	TWCR = (1 << TWEN); // enabling TWI (two wire interface)
 2ba:	84 e0       	ldi	r24, 0x04	; 4
 2bc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 2c0:	08 95       	ret

000002c2 <i2c_meaningful_status>:
}

void i2c_meaningful_status(uint8_t status)
{
	switch (status)
 2c2:	48 2f       	mov	r20, r24
 2c4:	50 e0       	ldi	r21, 0x00	; 0
 2c6:	fa 01       	movw	r30, r20
 2c8:	38 97       	sbiw	r30, 0x08	; 8
 2ca:	e1 35       	cpi	r30, 0x51	; 81
 2cc:	f1 05       	cpc	r31, r1
 2ce:	68 f0       	brcs	.+26     	; 0x2ea <i2c_meaningful_status+0x28>
		break;
	case 0x58: // DATA received, NAK sent
		printf_P(PSTR("MR DATA+R, NAK\n"));
		break;
	default:
		printf_P(PSTR("N/A %02X\n"), status);
 2d0:	1f 92       	push	r1
 2d2:	8f 93       	push	r24
 2d4:	84 e4       	ldi	r24, 0x44	; 68
 2d6:	91 e0       	ldi	r25, 0x01	; 1
 2d8:	9f 93       	push	r25
 2da:	8f 93       	push	r24
 2dc:	0e 94 c9 03 	call	0x792	; 0x792 <printf_P>
		break;
 2e0:	0f 90       	pop	r0
 2e2:	0f 90       	pop	r0
 2e4:	0f 90       	pop	r0
 2e6:	0f 90       	pop	r0
 2e8:	08 95       	ret
	TWCR = (1 << TWEN); // enabling TWI (two wire interface)
}

void i2c_meaningful_status(uint8_t status)
{
	switch (status)
 2ea:	ec 5c       	subi	r30, 0xCC	; 204
 2ec:	ff 4f       	sbci	r31, 0xFF	; 255
 2ee:	0c 94 c3 03 	jmp	0x786	; 0x786 <__tablejump2__>
		break;
	case 0x50: // DATA received, ACK sent
		printf_P(PSTR("MR DATA+R, ACK\n"));
		break;
	case 0x58: // DATA received, NAK sent
		printf_P(PSTR("MR DATA+R, NAK\n"));
 2f2:	8e e4       	ldi	r24, 0x4E	; 78
 2f4:	91 e0       	ldi	r25, 0x01	; 1
 2f6:	9f 93       	push	r25
 2f8:	8f 93       	push	r24
 2fa:	0e 94 c9 03 	call	0x792	; 0x792 <printf_P>
		break;
 2fe:	0f 90       	pop	r0
 300:	0f 90       	pop	r0
 302:	08 95       	ret
void i2c_meaningful_status(uint8_t status)
{
	switch (status)
	{
	case 0x08: // START transmitted, proceed to load SLA+W/R
		printf_P(PSTR("START\n"));
 304:	8e ed       	ldi	r24, 0xDE	; 222
 306:	91 e0       	ldi	r25, 0x01	; 1
 308:	9f 93       	push	r25
 30a:	8f 93       	push	r24
 30c:	0e 94 c9 03 	call	0x792	; 0x792 <printf_P>
		break;
 310:	0f 90       	pop	r0
 312:	0f 90       	pop	r0
 314:	08 95       	ret
	case 0x10: // repeated START transmitted, proceed to load SLA+W/R
		printf_P(PSTR("RESTART\n"));
 316:	85 ed       	ldi	r24, 0xD5	; 213
 318:	91 e0       	ldi	r25, 0x01	; 1
 31a:	9f 93       	push	r25
 31c:	8f 93       	push	r24
 31e:	0e 94 c9 03 	call	0x792	; 0x792 <printf_P>
		break;
 322:	0f 90       	pop	r0
 324:	0f 90       	pop	r0
 326:	08 95       	ret
	case 0x38: // NAK or DATA ARBITRATION LOST
		printf_P(PSTR("NOARB/NAK\n"));
		break;
	// MASTER TRANSMIT
	case 0x18: // SLA+W transmitted, ACK received
		printf_P(PSTR("MT SLA+W, ACK\n"));
 328:	8b eb       	ldi	r24, 0xBB	; 187
 32a:	91 e0       	ldi	r25, 0x01	; 1
 32c:	9f 93       	push	r25
 32e:	8f 93       	push	r24
 330:	0e 94 c9 03 	call	0x792	; 0x792 <printf_P>
		break;
 334:	0f 90       	pop	r0
 336:	0f 90       	pop	r0
 338:	08 95       	ret
	case 0x20: // SLA+W transmitted, NAK received
		printf_P(PSTR("MT SLA+W, NAK\n"));
 33a:	8c ea       	ldi	r24, 0xAC	; 172
 33c:	91 e0       	ldi	r25, 0x01	; 1
 33e:	9f 93       	push	r25
 340:	8f 93       	push	r24
 342:	0e 94 c9 03 	call	0x792	; 0x792 <printf_P>
		break;
 346:	0f 90       	pop	r0
 348:	0f 90       	pop	r0
 34a:	08 95       	ret
	case 0x28: // DATA transmitted, ACK received
		printf_P(PSTR("MT DATA+W, ACK\n"));
 34c:	8c e9       	ldi	r24, 0x9C	; 156
 34e:	91 e0       	ldi	r25, 0x01	; 1
 350:	9f 93       	push	r25
 352:	8f 93       	push	r24
 354:	0e 94 c9 03 	call	0x792	; 0x792 <printf_P>
		break;
 358:	0f 90       	pop	r0
 35a:	0f 90       	pop	r0
 35c:	08 95       	ret
	case 0x30: // DATA transmitted, NAK received
		printf_P(PSTR("MT DATA+W, NAK\n"));
 35e:	8c e8       	ldi	r24, 0x8C	; 140
 360:	91 e0       	ldi	r25, 0x01	; 1
 362:	9f 93       	push	r25
 364:	8f 93       	push	r24
 366:	0e 94 c9 03 	call	0x792	; 0x792 <printf_P>
		break;
 36a:	0f 90       	pop	r0
 36c:	0f 90       	pop	r0
 36e:	08 95       	ret
		break;
	case 0x10: // repeated START transmitted, proceed to load SLA+W/R
		printf_P(PSTR("RESTART\n"));
		break;
	case 0x38: // NAK or DATA ARBITRATION LOST
		printf_P(PSTR("NOARB/NAK\n"));
 370:	8a ec       	ldi	r24, 0xCA	; 202
 372:	91 e0       	ldi	r25, 0x01	; 1
 374:	9f 93       	push	r25
 376:	8f 93       	push	r24
 378:	0e 94 c9 03 	call	0x792	; 0x792 <printf_P>
		break;
 37c:	0f 90       	pop	r0
 37e:	0f 90       	pop	r0
 380:	08 95       	ret
	case 0x30: // DATA transmitted, NAK received
		printf_P(PSTR("MT DATA+W, NAK\n"));
		break;
	// MASTER RECEIVE
	case 0x40: // SLA+R transmitted, ACK received
		printf_P(PSTR("MR SLA+R, ACK\n"));
 382:	8d e7       	ldi	r24, 0x7D	; 125
 384:	91 e0       	ldi	r25, 0x01	; 1
 386:	9f 93       	push	r25
 388:	8f 93       	push	r24
 38a:	0e 94 c9 03 	call	0x792	; 0x792 <printf_P>
		break;
 38e:	0f 90       	pop	r0
 390:	0f 90       	pop	r0
 392:	08 95       	ret
	case 0x48: // SLA+R transmitted, NAK received
		printf_P(PSTR("MR SLA+R, NAK\n"));
 394:	8e e6       	ldi	r24, 0x6E	; 110
 396:	91 e0       	ldi	r25, 0x01	; 1
 398:	9f 93       	push	r25
 39a:	8f 93       	push	r24
 39c:	0e 94 c9 03 	call	0x792	; 0x792 <printf_P>
		break;
 3a0:	0f 90       	pop	r0
 3a2:	0f 90       	pop	r0
 3a4:	08 95       	ret
	case 0x50: // DATA received, ACK sent
		printf_P(PSTR("MR DATA+R, ACK\n"));
 3a6:	8e e5       	ldi	r24, 0x5E	; 94
 3a8:	91 e0       	ldi	r25, 0x01	; 1
 3aa:	9f 93       	push	r25
 3ac:	8f 93       	push	r24
 3ae:	0e 94 c9 03 	call	0x792	; 0x792 <printf_P>
		break;
 3b2:	0f 90       	pop	r0
 3b4:	0f 90       	pop	r0
 3b6:	08 95       	ret

000003b8 <i2c_start>:
//Generate start condition
/*We need to set TWSTA and stop TWSTO bits along with TWINT and TWEN bits for a start.
 After the start signal is sent, we need to wait for status (until TWINT resets zero).*/
inline void i2c_start()
{
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN); //Two wire control register TWCR
 3b8:	84 ea       	ldi	r24, 0xA4	; 164
 3ba:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (!(TWCR & (1 << TWINT)))
 3be:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 3c2:	87 ff       	sbrs	r24, 7
 3c4:	fc cf       	rjmp	.-8      	; 0x3be <i2c_start+0x6>
		;
}
 3c6:	08 95       	ret

000003c8 <i2c_stop>:

//Generate stop condition
inline void i2c_stop()
{
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
 3c8:	84 e9       	ldi	r24, 0x94	; 148
 3ca:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (TWCR & (1 << TWSTO))
 3ce:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 3d2:	84 fd       	sbrc	r24, 4
 3d4:	fc cf       	rjmp	.-8      	; 0x3ce <i2c_stop+0x6>
		;
	//TWCR = (1 << TWINT) | (0 << TWSTO) | (1 << TWEN) | (1 << TWINT); //bus realeased
	//while (!(TWCR & (1 << TWINT))){}
}
 3d6:	08 95       	ret

000003d8 <i2c_get_status>:
//Return status of ongoing operation
inline uint8_t i2c_get_status(void)
{
	uint8_t status;
	//mask status
	status = TWSR & 0xF8; //Two wire status register
 3d8:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
	return status;
}
 3dc:	88 7f       	andi	r24, 0xF8	; 248
 3de:	08 95       	ret

000003e0 <i2c_xmit_addr>:

//Send SLA+ R/W (Address Pkt consisting of slave address and READ and WRITE bit)
inline void i2c_xmit_addr(uint8_t address, uint8_t rw)
{
	TWDR = (address & 0xfe) | (rw & 0x1); //load SLA_W into register TWDR
 3e0:	8e 7f       	andi	r24, 0xFE	; 254
 3e2:	61 70       	andi	r22, 0x01	; 1
 3e4:	68 2b       	or	r22, r24
 3e6:	60 93 bb 00 	sts	0x00BB, r22	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1 << TWINT) | (1 << TWEN);	  // Clear TWINT bit in TWCR to start transmission of address
 3ea:	84 e8       	ldi	r24, 0x84	; 132
 3ec:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 3f0:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 3f4:	87 ff       	sbrs	r24, 7
 3f6:	fc cf       	rjmp	.-8      	; 0x3f0 <i2c_xmit_addr+0x10>
		; //kames sure that PKt has been sent
}
 3f8:	08 95       	ret

000003fa <i2c_xmit_byte>:

//Send/write just one byte
void i2c_xmit_byte(uint8_t data)
{
	TWDR = data; //Two Wire Data Register TWDR
 3fa:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1 << TWINT) | (1 << TWEN);
 3fe:	84 e8       	ldi	r24, 0x84	; 132
 400:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 404:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 408:	87 ff       	sbrs	r24, 7
 40a:	fc cf       	rjmp	.-8      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
		; //This indicates that the DATA has been transmitted, and ACK/NACK has been received.
}
 40c:	08 95       	ret

0000040e <i2c_read_ACK>:

//Read just one byte with ACK //for more bytes
uint8_t i2c_read_ACK()
{
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA); //TWEA enable ack
 40e:	84 ec       	ldi	r24, 0xC4	; 196
 410:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 414:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 418:	87 ff       	sbrs	r24, 7
 41a:	fc cf       	rjmp	.-8      	; 0x414 <i2c_read_ACK+0x6>
		;
	return TWDR;
 41c:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
}
 420:	08 95       	ret

00000422 <i2c_read_NAK>:

//Read just one byte without ACK //for the last byte
uint8_t i2c_read_NAK()
{
	TWCR = (1 << TWINT) | (1 << TWEN); //ack bit not set
 422:	84 e8       	ldi	r24, 0x84	; 132
 424:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 428:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 42c:	87 ff       	sbrs	r24, 7
 42e:	fc cf       	rjmp	.-8      	; 0x428 <i2c_read_NAK+0x6>
		;
	return TWDR;
 430:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
}
 434:	08 95       	ret

00000436 <eeprom_wait_until_write_complete>:
//Generate start condition
/*We need to set TWSTA and stop TWSTO bits along with TWINT and TWEN bits for a start.
 After the start signal is sent, we need to wait for status (until TWINT resets zero).*/
inline void i2c_start()
{
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN); //Two wire control register TWCR
 436:	34 ea       	ldi	r19, 0xA4	; 164
}

//Send SLA+ R/W (Address Pkt consisting of slave address and READ and WRITE bit)
inline void i2c_xmit_addr(uint8_t address, uint8_t rw)
{
	TWDR = (address & 0xfe) | (rw & 0x1); //load SLA_W into register TWDR
 438:	20 ea       	ldi	r18, 0xA0	; 160
	TWCR = (1 << TWINT) | (1 << TWEN);	  // Clear TWINT bit in TWCR to start transmission of address
 43a:	94 e8       	ldi	r25, 0x84	; 132
//Generate start condition
/*We need to set TWSTA and stop TWSTO bits along with TWINT and TWEN bits for a start.
 After the start signal is sent, we need to wait for status (until TWINT resets zero).*/
inline void i2c_start()
{
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN); //Two wire control register TWCR
 43c:	30 93 bc 00 	sts	0x00BC, r19	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (!(TWCR & (1 << TWINT)))
 440:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 444:	87 ff       	sbrs	r24, 7
 446:	fc cf       	rjmp	.-8      	; 0x440 <eeprom_wait_until_write_complete+0xa>
}

//Send SLA+ R/W (Address Pkt consisting of slave address and READ and WRITE bit)
inline void i2c_xmit_addr(uint8_t address, uint8_t rw)
{
	TWDR = (address & 0xfe) | (rw & 0x1); //load SLA_W into register TWDR
 448:	20 93 bb 00 	sts	0x00BB, r18	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1 << TWINT) | (1 << TWEN);	  // Clear TWINT bit in TWCR to start transmission of address
 44c:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 450:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 454:	87 ff       	sbrs	r24, 7
 456:	fc cf       	rjmp	.-8      	; 0x450 <eeprom_wait_until_write_complete+0x1a>
//Return status of ongoing operation
inline uint8_t i2c_get_status(void)
{
	uint8_t status;
	//mask status
	status = TWSR & 0xF8; //Two wire status register
 458:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
}

inline void eeprom_wait_until_write_complete()
{
	uint8_t status = 0;
	while (status != 0x18)
 45c:	88 7f       	andi	r24, 0xF8	; 248
 45e:	88 31       	cpi	r24, 0x18	; 24
 460:	69 f7       	brne	.-38     	; 0x43c <eeprom_wait_until_write_complete+0x6>
	{ //check if slave is sending ACK, if no ACK writing is in progress so wait
		i2c_start();
		i2c_xmit_addr(EEPROM_addr, 0);
		status = i2c_get_status();
	}
}
 462:	08 95       	ret

00000464 <eeprom_read_byte>:
//Generate start condition
/*We need to set TWSTA and stop TWSTO bits along with TWINT and TWEN bits for a start.
 After the start signal is sent, we need to wait for status (until TWINT resets zero).*/
inline void i2c_start()
{
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN); //Two wire control register TWCR
 464:	94 ea       	ldi	r25, 0xA4	; 164
 466:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (!(TWCR & (1 << TWINT)))
 46a:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 46e:	97 ff       	sbrs	r25, 7
 470:	fc cf       	rjmp	.-8      	; 0x46a <eeprom_read_byte+0x6>
}

//Send SLA+ R/W (Address Pkt consisting of slave address and READ and WRITE bit)
inline void i2c_xmit_addr(uint8_t address, uint8_t rw)
{
	TWDR = (address & 0xfe) | (rw & 0x1); //load SLA_W into register TWDR
 472:	90 ea       	ldi	r25, 0xA0	; 160
 474:	90 93 bb 00 	sts	0x00BB, r25	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1 << TWINT) | (1 << TWEN);	  // Clear TWINT bit in TWCR to start transmission of address
 478:	94 e8       	ldi	r25, 0x84	; 132
 47a:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 47e:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 482:	97 ff       	sbrs	r25, 7
 484:	fc cf       	rjmp	.-8      	; 0x47e <eeprom_read_byte+0x1a>
}

//Send/write just one byte
void i2c_xmit_byte(uint8_t data)
{
	TWDR = data; //Two Wire Data Register TWDR
 486:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1 << TWINT) | (1 << TWEN);
 48a:	84 e8       	ldi	r24, 0x84	; 132
 48c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 490:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 494:	87 ff       	sbrs	r24, 7
 496:	fc cf       	rjmp	.-8      	; 0x490 <eeprom_read_byte+0x2c>
//Generate start condition
/*We need to set TWSTA and stop TWSTO bits along with TWINT and TWEN bits for a start.
 After the start signal is sent, we need to wait for status (until TWINT resets zero).*/
inline void i2c_start()
{
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN); //Two wire control register TWCR
 498:	84 ea       	ldi	r24, 0xA4	; 164
 49a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (!(TWCR & (1 << TWINT)))
 49e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 4a2:	87 ff       	sbrs	r24, 7
 4a4:	fc cf       	rjmp	.-8      	; 0x49e <eeprom_read_byte+0x3a>
}

//Send SLA+ R/W (Address Pkt consisting of slave address and READ and WRITE bit)
inline void i2c_xmit_addr(uint8_t address, uint8_t rw)
{
	TWDR = (address & 0xfe) | (rw & 0x1); //load SLA_W into register TWDR
 4a6:	81 ea       	ldi	r24, 0xA1	; 161
 4a8:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1 << TWINT) | (1 << TWEN);	  // Clear TWINT bit in TWCR to start transmission of address
 4ac:	84 e8       	ldi	r24, 0x84	; 132
 4ae:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 4b2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 4b6:	87 ff       	sbrs	r24, 7
 4b8:	fc cf       	rjmp	.-8      	; 0x4b2 <eeprom_read_byte+0x4e>
}

//Read just one byte without ACK //for the last byte
uint8_t i2c_read_NAK()
{
	TWCR = (1 << TWINT) | (1 << TWEN); //ack bit not set
 4ba:	84 e8       	ldi	r24, 0x84	; 132
 4bc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 4c0:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 4c4:	87 ff       	sbrs	r24, 7
 4c6:	fc cf       	rjmp	.-8      	; 0x4c0 <eeprom_read_byte+0x5c>
		;
	return TWDR;
 4c8:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
}

//Generate stop condition
inline void i2c_stop()
{
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
 4cc:	94 e9       	ldi	r25, 0x94	; 148
 4ce:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (TWCR & (1 << TWSTO))
 4d2:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 4d6:	94 fd       	sbrc	r25, 4
 4d8:	fc cf       	rjmp	.-8      	; 0x4d2 <eeprom_read_byte+0x6e>
	uint8_t received = i2c_read_NAK();

	//Generate stop condition
	i2c_stop();
	return received;
}
 4da:	08 95       	ret

000004dc <eeprom_write_byte>:
//Generate start condition
/*We need to set TWSTA and stop TWSTO bits along with TWINT and TWEN bits for a start.
 After the start signal is sent, we need to wait for status (until TWINT resets zero).*/
inline void i2c_start()
{
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN); //Two wire control register TWCR
 4dc:	94 ea       	ldi	r25, 0xA4	; 164
 4de:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (!(TWCR & (1 << TWINT)))
 4e2:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 4e6:	97 ff       	sbrs	r25, 7
 4e8:	fc cf       	rjmp	.-8      	; 0x4e2 <eeprom_write_byte+0x6>
}

//Send SLA+ R/W (Address Pkt consisting of slave address and READ and WRITE bit)
inline void i2c_xmit_addr(uint8_t address, uint8_t rw)
{
	TWDR = (address & 0xfe) | (rw & 0x1); //load SLA_W into register TWDR
 4ea:	90 ea       	ldi	r25, 0xA0	; 160
 4ec:	90 93 bb 00 	sts	0x00BB, r25	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1 << TWINT) | (1 << TWEN);	  // Clear TWINT bit in TWCR to start transmission of address
 4f0:	94 e8       	ldi	r25, 0x84	; 132
 4f2:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 4f6:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 4fa:	97 ff       	sbrs	r25, 7
 4fc:	fc cf       	rjmp	.-8      	; 0x4f6 <eeprom_write_byte+0x1a>
}

//Send/write just one byte
void i2c_xmit_byte(uint8_t data)
{
	TWDR = data; //Two Wire Data Register TWDR
 4fe:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1 << TWINT) | (1 << TWEN);
 502:	84 e8       	ldi	r24, 0x84	; 132
 504:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 508:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 50c:	87 ff       	sbrs	r24, 7
 50e:	fc cf       	rjmp	.-8      	; 0x508 <eeprom_write_byte+0x2c>
}

//Send/write just one byte
void i2c_xmit_byte(uint8_t data)
{
	TWDR = data; //Two Wire Data Register TWDR
 510:	60 93 bb 00 	sts	0x00BB, r22	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1 << TWINT) | (1 << TWEN);
 514:	84 e8       	ldi	r24, 0x84	; 132
 516:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 51a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 51e:	87 ff       	sbrs	r24, 7
 520:	fc cf       	rjmp	.-8      	; 0x51a <eeprom_write_byte+0x3e>
}

//Generate stop condition
inline void i2c_stop()
{
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
 522:	84 e9       	ldi	r24, 0x94	; 148
 524:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (TWCR & (1 << TWSTO))
 528:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 52c:	84 fd       	sbrc	r24, 4
 52e:	fc cf       	rjmp	.-8      	; 0x528 <eeprom_write_byte+0x4c>
//Generate start condition
/*We need to set TWSTA and stop TWSTO bits along with TWINT and TWEN bits for a start.
 After the start signal is sent, we need to wait for status (until TWINT resets zero).*/
inline void i2c_start()
{
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN); //Two wire control register TWCR
 530:	34 ea       	ldi	r19, 0xA4	; 164
}

//Send SLA+ R/W (Address Pkt consisting of slave address and READ and WRITE bit)
inline void i2c_xmit_addr(uint8_t address, uint8_t rw)
{
	TWDR = (address & 0xfe) | (rw & 0x1); //load SLA_W into register TWDR
 532:	20 ea       	ldi	r18, 0xA0	; 160
	TWCR = (1 << TWINT) | (1 << TWEN);	  // Clear TWINT bit in TWCR to start transmission of address
 534:	94 e8       	ldi	r25, 0x84	; 132
//Generate start condition
/*We need to set TWSTA and stop TWSTO bits along with TWINT and TWEN bits for a start.
 After the start signal is sent, we need to wait for status (until TWINT resets zero).*/
inline void i2c_start()
{
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN); //Two wire control register TWCR
 536:	30 93 bc 00 	sts	0x00BC, r19	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (!(TWCR & (1 << TWINT)))
 53a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 53e:	87 ff       	sbrs	r24, 7
 540:	fc cf       	rjmp	.-8      	; 0x53a <eeprom_write_byte+0x5e>
}

//Send SLA+ R/W (Address Pkt consisting of slave address and READ and WRITE bit)
inline void i2c_xmit_addr(uint8_t address, uint8_t rw)
{
	TWDR = (address & 0xfe) | (rw & 0x1); //load SLA_W into register TWDR
 542:	20 93 bb 00 	sts	0x00BB, r18	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1 << TWINT) | (1 << TWEN);	  // Clear TWINT bit in TWCR to start transmission of address
 546:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 54a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 54e:	87 ff       	sbrs	r24, 7
 550:	fc cf       	rjmp	.-8      	; 0x54a <eeprom_write_byte+0x6e>
//Return status of ongoing operation
inline uint8_t i2c_get_status(void)
{
	uint8_t status;
	//mask status
	status = TWSR & 0xF8; //Two wire status register
 552:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
}

inline void eeprom_wait_until_write_complete()
{
	uint8_t status = 0;
	while (status != 0x18)
 556:	88 7f       	andi	r24, 0xF8	; 248
 558:	88 31       	cpi	r24, 0x18	; 24
 55a:	69 f7       	brne	.-38     	; 0x536 <eeprom_write_byte+0x5a>
	i2c_stop();

	//wait until write has finished
	eeprom_wait_until_write_complete();
	//i2c_meaningful_status(i2c_get_status());
}
 55c:	08 95       	ret

0000055e <eeprom_write_page>:

void eeprom_write_page(uint8_t addr, uint8_t *data)
{
	uint8_t chardata = *data;
 55e:	fb 01       	movw	r30, r22
 560:	20 81       	ld	r18, Z
//Generate start condition
/*We need to set TWSTA and stop TWSTO bits along with TWINT and TWEN bits for a start.
 After the start signal is sent, we need to wait for status (until TWINT resets zero).*/
inline void i2c_start()
{
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN); //Two wire control register TWCR
 562:	94 ea       	ldi	r25, 0xA4	; 164
 564:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (!(TWCR & (1 << TWINT)))
 568:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 56c:	97 ff       	sbrs	r25, 7
 56e:	fc cf       	rjmp	.-8      	; 0x568 <eeprom_write_page+0xa>
}

//Send SLA+ R/W (Address Pkt consisting of slave address and READ and WRITE bit)
inline void i2c_xmit_addr(uint8_t address, uint8_t rw)
{
	TWDR = (address & 0xfe) | (rw & 0x1); //load SLA_W into register TWDR
 570:	90 ea       	ldi	r25, 0xA0	; 160
 572:	90 93 bb 00 	sts	0x00BB, r25	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1 << TWINT) | (1 << TWEN);	  // Clear TWINT bit in TWCR to start transmission of address
 576:	94 e8       	ldi	r25, 0x84	; 132
 578:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 57c:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 580:	97 ff       	sbrs	r25, 7
 582:	fc cf       	rjmp	.-8      	; 0x57c <eeprom_write_page+0x1e>
}

//Send/write just one byte
void i2c_xmit_byte(uint8_t data)
{
	TWDR = data; //Two Wire Data Register TWDR
 584:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1 << TWINT) | (1 << TWEN);
 588:	84 e8       	ldi	r24, 0x84	; 132
 58a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 58e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 592:	87 ff       	sbrs	r24, 7
 594:	fc cf       	rjmp	.-8      	; 0x58e <eeprom_write_page+0x30>
 596:	fb 01       	movw	r30, r22
 598:	31 96       	adiw	r30, 0x01	; 1
 59a:	67 5f       	subi	r22, 0xF7	; 247
 59c:	7f 4f       	sbci	r23, 0xFF	; 255

//Send/write just one byte
void i2c_xmit_byte(uint8_t data)
{
	TWDR = data; //Two Wire Data Register TWDR
	TWCR = (1 << TWINT) | (1 << TWEN);
 59e:	94 e8       	ldi	r25, 0x84	; 132
}

//Send/write just one byte
void i2c_xmit_byte(uint8_t data)
{
	TWDR = data; //Two Wire Data Register TWDR
 5a0:	20 93 bb 00 	sts	0x00BB, r18	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1 << TWINT) | (1 << TWEN);
 5a4:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 5a8:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 5ac:	87 ff       	sbrs	r24, 7
 5ae:	fc cf       	rjmp	.-8      	; 0x5a8 <eeprom_write_page+0x4a>
		//Send/write just one byte
		i2c_xmit_byte(chardata); //Upon receipt of each word, the 3 lower-order Address Pointer bits are internally incremented by ‘1’.
		//The higher-order five bits of the word address remain constant.
		//uart_putchar(chardata, 0);

		chardata = *(++data); //PreIncrementing the pointer to next char
 5b0:	21 91       	ld	r18, Z+

	//send the address to be written to
	i2c_xmit_byte(addr);
	//i2c_meaningful_status(i2c_get_status());

	for (int j = 0; j < Pagesize; j++) //length of string,pagesize = 8
 5b2:	e6 17       	cp	r30, r22
 5b4:	f7 07       	cpc	r31, r23
 5b6:	a1 f7       	brne	.-24     	; 0x5a0 <eeprom_write_page+0x42>
}

//Generate stop condition
inline void i2c_stop()
{
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
 5b8:	84 e9       	ldi	r24, 0x94	; 148
 5ba:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (TWCR & (1 << TWSTO))
 5be:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 5c2:	84 fd       	sbrc	r24, 4
 5c4:	fc cf       	rjmp	.-8      	; 0x5be <eeprom_write_page+0x60>
//Generate start condition
/*We need to set TWSTA and stop TWSTO bits along with TWINT and TWEN bits for a start.
 After the start signal is sent, we need to wait for status (until TWINT resets zero).*/
inline void i2c_start()
{
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN); //Two wire control register TWCR
 5c6:	34 ea       	ldi	r19, 0xA4	; 164
}

//Send SLA+ R/W (Address Pkt consisting of slave address and READ and WRITE bit)
inline void i2c_xmit_addr(uint8_t address, uint8_t rw)
{
	TWDR = (address & 0xfe) | (rw & 0x1); //load SLA_W into register TWDR
 5c8:	20 ea       	ldi	r18, 0xA0	; 160
	TWCR = (1 << TWINT) | (1 << TWEN);	  // Clear TWINT bit in TWCR to start transmission of address
 5ca:	94 e8       	ldi	r25, 0x84	; 132
//Generate start condition
/*We need to set TWSTA and stop TWSTO bits along with TWINT and TWEN bits for a start.
 After the start signal is sent, we need to wait for status (until TWINT resets zero).*/
inline void i2c_start()
{
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN); //Two wire control register TWCR
 5cc:	30 93 bc 00 	sts	0x00BC, r19	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (!(TWCR & (1 << TWINT)))
 5d0:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 5d4:	87 ff       	sbrs	r24, 7
 5d6:	fc cf       	rjmp	.-8      	; 0x5d0 <eeprom_write_page+0x72>
}

//Send SLA+ R/W (Address Pkt consisting of slave address and READ and WRITE bit)
inline void i2c_xmit_addr(uint8_t address, uint8_t rw)
{
	TWDR = (address & 0xfe) | (rw & 0x1); //load SLA_W into register TWDR
 5d8:	20 93 bb 00 	sts	0x00BB, r18	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1 << TWINT) | (1 << TWEN);	  // Clear TWINT bit in TWCR to start transmission of address
 5dc:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR & (1 << TWINT)) == 0)
 5e0:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 5e4:	87 ff       	sbrs	r24, 7
 5e6:	fc cf       	rjmp	.-8      	; 0x5e0 <eeprom_write_page+0x82>
//Return status of ongoing operation
inline uint8_t i2c_get_status(void)
{
	uint8_t status;
	//mask status
	status = TWSR & 0xF8; //Two wire status register
 5e8:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
}

inline void eeprom_wait_until_write_complete()
{
	uint8_t status = 0;
	while (status != 0x18)
 5ec:	88 7f       	andi	r24, 0xF8	; 248
 5ee:	88 31       	cpi	r24, 0x18	; 24
 5f0:	69 f7       	brne	.-38     	; 0x5cc <eeprom_write_page+0x6e>
		//i2c_meaningful_status(i2c_get_status());
	}

	i2c_stop();
	eeprom_wait_until_write_complete(); //wait until write has finished
}
 5f2:	08 95       	ret

000005f4 <eeprom_sequential_read>:
 5f4:	24 ea       	ldi	r18, 0xA4	; 164
 5f6:	20 93 bc 00 	sts	0x00BC, r18	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 5fa:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 5fe:	27 ff       	sbrs	r18, 7
 600:	fc cf       	rjmp	.-8      	; 0x5fa <eeprom_sequential_read+0x6>
 602:	20 ea       	ldi	r18, 0xA0	; 160
 604:	20 93 bb 00 	sts	0x00BB, r18	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
 608:	24 e8       	ldi	r18, 0x84	; 132
 60a:	20 93 bc 00 	sts	0x00BC, r18	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 60e:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 612:	27 ff       	sbrs	r18, 7
 614:	fc cf       	rjmp	.-8      	; 0x60e <eeprom_sequential_read+0x1a>
 616:	60 93 bb 00 	sts	0x00BB, r22	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
 61a:	24 e8       	ldi	r18, 0x84	; 132
 61c:	20 93 bc 00 	sts	0x00BC, r18	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 620:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 624:	27 ff       	sbrs	r18, 7
 626:	fc cf       	rjmp	.-8      	; 0x620 <eeprom_sequential_read+0x2c>
 628:	24 ea       	ldi	r18, 0xA4	; 164
 62a:	20 93 bc 00 	sts	0x00BC, r18	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 62e:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 632:	27 ff       	sbrs	r18, 7
 634:	fc cf       	rjmp	.-8      	; 0x62e <eeprom_sequential_read+0x3a>
 636:	21 ea       	ldi	r18, 0xA1	; 161
 638:	20 93 bb 00 	sts	0x00BB, r18	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
 63c:	24 e8       	ldi	r18, 0x84	; 132
 63e:	20 93 bc 00 	sts	0x00BC, r18	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 642:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 646:	27 ff       	sbrs	r18, 7
 648:	fc cf       	rjmp	.-8      	; 0x642 <eeprom_sequential_read+0x4e>
 64a:	50 e0       	ldi	r21, 0x00	; 0
 64c:	41 15       	cp	r20, r1
 64e:	51 05       	cpc	r21, r1
 650:	d1 f0       	breq	.+52     	; 0x686 <eeprom_sequential_read+0x92>
 652:	ba 01       	movw	r22, r20
 654:	61 50       	subi	r22, 0x01	; 1
 656:	71 09       	sbc	r23, r1
 658:	fc 01       	movw	r30, r24
 65a:	20 e0       	ldi	r18, 0x00	; 0
 65c:	30 e0       	ldi	r19, 0x00	; 0
 65e:	94 ec       	ldi	r25, 0xC4	; 196
 660:	a4 e8       	ldi	r26, 0x84	; 132
 662:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 666:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 66a:	87 ff       	sbrs	r24, 7
 66c:	fc cf       	rjmp	.-8      	; 0x666 <eeprom_sequential_read+0x72>
 66e:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
 672:	26 17       	cp	r18, r22
 674:	37 07       	cpc	r19, r23
 676:	79 f0       	breq	.+30     	; 0x696 <eeprom_sequential_read+0xa2>
 678:	80 83       	st	Z, r24
 67a:	2f 5f       	subi	r18, 0xFF	; 255
 67c:	3f 4f       	sbci	r19, 0xFF	; 255
 67e:	31 96       	adiw	r30, 0x01	; 1
 680:	24 17       	cp	r18, r20
 682:	35 07       	cpc	r19, r21
 684:	71 f7       	brne	.-36     	; 0x662 <eeprom_sequential_read+0x6e>
 686:	84 e9       	ldi	r24, 0x94	; 148
 688:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 68c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 690:	84 fd       	sbrc	r24, 4
 692:	fc cf       	rjmp	.-8      	; 0x68c <eeprom_sequential_read+0x98>
 694:	08 95       	ret
 696:	a0 93 bc 00 	sts	0x00BC, r26	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 69a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 69e:	87 ff       	sbrs	r24, 7
 6a0:	fc cf       	rjmp	.-8      	; 0x69a <eeprom_sequential_read+0xa6>
 6a2:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
 6a6:	80 83       	st	Z, r24
 6a8:	e8 cf       	rjmp	.-48     	; 0x67a <eeprom_sequential_read+0x86>

000006aa <main>:
#include "i2c.h"
#include "serial.h"
#include "timer.h"

void main(void)
{
 6aa:	cf 93       	push	r28
 6ac:	df 93       	push	r29
 6ae:	cd b7       	in	r28, 0x3d	; 61
 6b0:	de b7       	in	r29, 0x3e	; 62
 6b2:	6e 97       	sbiw	r28, 0x1e	; 30
 6b4:	0f b6       	in	r0, 0x3f	; 63
 6b6:	f8 94       	cli
 6b8:	de bf       	out	0x3e, r29	; 62
 6ba:	0f be       	out	0x3f, r0	; 63
 6bc:	cd bf       	out	0x3d, r28	; 61

	i2c_init();
 6be:	0e 94 53 01 	call	0x2a6	; 0x2a6 <i2c_init>
	uart_init();
 6c2:	0e 94 26 01 	call	0x24c	; 0x24c <uart_init>

	sei();
 6c6:	78 94       	sei
	char name[] = "Asma";
	uint8_t Initial_addr = 0x10;*/

	//variables to write the data

	uint8_t *array[] = {"Happy   ", "new     ", "year    "};
 6c8:	86 e0       	ldi	r24, 0x06	; 6
 6ca:	ee e0       	ldi	r30, 0x0E	; 14
 6cc:	f1 e0       	ldi	r31, 0x01	; 1
 6ce:	de 01       	movw	r26, r28
 6d0:	59 96       	adiw	r26, 0x19	; 25
 6d2:	01 90       	ld	r0, Z+
 6d4:	0d 92       	st	X+, r0
 6d6:	8a 95       	dec	r24
 6d8:	e1 f7       	brne	.-8      	; 0x6d2 <main+0x28>
	for (int i = 0; i < Pages; i++) // NO of Pages = 7
	{
		//char *ch;
		uint8_t *ch;
		ch = array[i];
		eeprom_write_page(Initial_addr, ch);
 6da:	69 8d       	ldd	r22, Y+25	; 0x19
 6dc:	7a 8d       	ldd	r23, Y+26	; 0x1a
 6de:	80 e1       	ldi	r24, 0x10	; 16
 6e0:	0e 94 af 02 	call	0x55e	; 0x55e <eeprom_write_page>
 6e4:	6b 8d       	ldd	r22, Y+27	; 0x1b
 6e6:	7c 8d       	ldd	r23, Y+28	; 0x1c
 6e8:	88 e1       	ldi	r24, 0x18	; 24
 6ea:	0e 94 af 02 	call	0x55e	; 0x55e <eeprom_write_page>
 6ee:	6d 8d       	ldd	r22, Y+29	; 0x1d
 6f0:	7e 8d       	ldd	r23, Y+30	; 0x1e
 6f2:	80 e2       	ldi	r24, 0x20	; 32
 6f4:	0e 94 af 02 	call	0x55e	; 0x55e <eeprom_write_page>

	Initial_addr = 0x10;

	//SEQUENTIAL READ FUNCTION

	eeprom_sequential_read(Read_string, Initial_addr, Size_of_array);
 6f8:	48 e1       	ldi	r20, 0x18	; 24
 6fa:	60 e1       	ldi	r22, 0x10	; 16
 6fc:	ce 01       	movw	r24, r28
 6fe:	01 96       	adiw	r24, 0x01	; 1
 700:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <eeprom_sequential_read>

	//To print the string the text
	printf_P(PSTR("\n My string in  ASCII char \n"));
 704:	87 e2       	ldi	r24, 0x27	; 39
 706:	91 e0       	ldi	r25, 0x01	; 1
 708:	9f 93       	push	r25
 70a:	8f 93       	push	r24
 70c:	0e 94 c9 03 	call	0x792	; 0x792 <printf_P>
 710:	8e 01       	movw	r16, r28
 712:	0f 5f       	subi	r16, 0xFF	; 255
 714:	1f 4f       	sbci	r17, 0xFF	; 255
 716:	6e 01       	movw	r12, r28
 718:	88 e1       	ldi	r24, 0x18	; 24
 71a:	c8 0e       	add	r12, r24
 71c:	d1 1c       	adc	r13, r1
 71e:	0f 90       	pop	r0
 720:	0f 90       	pop	r0
 722:	78 01       	movw	r14, r16
	for (int i = 0; i < Size_of_array - 1; i++)
	{
		printf_P(PSTR("%c  "), Read_string[i]);
 724:	92 e2       	ldi	r25, 0x22	; 34
 726:	a9 2e       	mov	r10, r25
 728:	91 e0       	ldi	r25, 0x01	; 1
 72a:	b9 2e       	mov	r11, r25
 72c:	f7 01       	movw	r30, r14
 72e:	81 91       	ld	r24, Z+
 730:	7f 01       	movw	r14, r30
 732:	1f 92       	push	r1
 734:	8f 93       	push	r24
 736:	bf 92       	push	r11
 738:	af 92       	push	r10
 73a:	0e 94 c9 03 	call	0x792	; 0x792 <printf_P>

	eeprom_sequential_read(Read_string, Initial_addr, Size_of_array);

	//To print the string the text
	printf_P(PSTR("\n My string in  ASCII char \n"));
	for (int i = 0; i < Size_of_array - 1; i++)
 73e:	0f 90       	pop	r0
 740:	0f 90       	pop	r0
 742:	0f 90       	pop	r0
 744:	0f 90       	pop	r0
 746:	ec 14       	cp	r14, r12
 748:	fd 04       	cpc	r15, r13
 74a:	81 f7       	brne	.-32     	; 0x72c <main+0x82>
	{
		printf_P(PSTR("%c  "), Read_string[i]);
	}

	//To print the hexadecimal values of the chars pri nted above
	printf_P(PSTR("\n My HEX  string  \n"));
 74c:	8e e0       	ldi	r24, 0x0E	; 14
 74e:	91 e0       	ldi	r25, 0x01	; 1
 750:	9f 93       	push	r25
 752:	8f 93       	push	r24
 754:	0e 94 c9 03 	call	0x792	; 0x792 <printf_P>
 758:	0f 90       	pop	r0
 75a:	0f 90       	pop	r0
	for (int i = 0; i < Size_of_array - 1; i++)
	{
		printf_P(PSTR("%X "), Read_string[i]);
 75c:	8a e0       	ldi	r24, 0x0A	; 10
 75e:	e8 2e       	mov	r14, r24
 760:	81 e0       	ldi	r24, 0x01	; 1
 762:	f8 2e       	mov	r15, r24
 764:	f8 01       	movw	r30, r16
 766:	81 91       	ld	r24, Z+
 768:	8f 01       	movw	r16, r30
 76a:	1f 92       	push	r1
 76c:	8f 93       	push	r24
 76e:	ff 92       	push	r15
 770:	ef 92       	push	r14
 772:	0e 94 c9 03 	call	0x792	; 0x792 <printf_P>
		printf_P(PSTR("%c  "), Read_string[i]);
	}

	//To print the hexadecimal values of the chars pri nted above
	printf_P(PSTR("\n My HEX  string  \n"));
	for (int i = 0; i < Size_of_array - 1; i++)
 776:	0f 90       	pop	r0
 778:	0f 90       	pop	r0
 77a:	0f 90       	pop	r0
 77c:	0f 90       	pop	r0
 77e:	0c 15       	cp	r16, r12
 780:	1d 05       	cpc	r17, r13
 782:	81 f7       	brne	.-32     	; 0x764 <main+0xba>
 784:	ff cf       	rjmp	.-2      	; 0x784 <main+0xda>

00000786 <__tablejump2__>:
 786:	ee 0f       	add	r30, r30
 788:	ff 1f       	adc	r31, r31
 78a:	05 90       	lpm	r0, Z+
 78c:	f4 91       	lpm	r31, Z
 78e:	e0 2d       	mov	r30, r0
 790:	09 94       	ijmp

00000792 <printf_P>:
 792:	a0 e0       	ldi	r26, 0x00	; 0
 794:	b0 e0       	ldi	r27, 0x00	; 0
 796:	ef ec       	ldi	r30, 0xCF	; 207
 798:	f3 e0       	ldi	r31, 0x03	; 3
 79a:	0c 94 8e 06 	jmp	0xd1c	; 0xd1c <__prologue_saves__+0x1c>
 79e:	ae 01       	movw	r20, r28
 7a0:	49 5f       	subi	r20, 0xF9	; 249
 7a2:	5f 4f       	sbci	r21, 0xFF	; 255
 7a4:	da 01       	movw	r26, r20
 7a6:	6d 91       	ld	r22, X+
 7a8:	7d 91       	ld	r23, X+
 7aa:	ad 01       	movw	r20, r26
 7ac:	01 e3       	ldi	r16, 0x31	; 49
 7ae:	11 e0       	ldi	r17, 0x01	; 1
 7b0:	f8 01       	movw	r30, r16
 7b2:	82 81       	ldd	r24, Z+2	; 0x02
 7b4:	93 81       	ldd	r25, Z+3	; 0x03
 7b6:	dc 01       	movw	r26, r24
 7b8:	13 96       	adiw	r26, 0x03	; 3
 7ba:	2c 91       	ld	r18, X
 7bc:	13 97       	sbiw	r26, 0x03	; 3
 7be:	28 60       	ori	r18, 0x08	; 8
 7c0:	13 96       	adiw	r26, 0x03	; 3
 7c2:	2c 93       	st	X, r18
 7c4:	0e 94 ef 03 	call	0x7de	; 0x7de <vfprintf>
 7c8:	d8 01       	movw	r26, r16
 7ca:	12 96       	adiw	r26, 0x02	; 2
 7cc:	ed 91       	ld	r30, X+
 7ce:	fc 91       	ld	r31, X
 7d0:	13 97       	sbiw	r26, 0x03	; 3
 7d2:	23 81       	ldd	r18, Z+3	; 0x03
 7d4:	27 7f       	andi	r18, 0xF7	; 247
 7d6:	23 83       	std	Z+3, r18	; 0x03
 7d8:	e4 e0       	ldi	r30, 0x04	; 4
 7da:	0c 94 aa 06 	jmp	0xd54	; 0xd54 <__epilogue_restores__+0x1c>

000007de <vfprintf>:
 7de:	ab e0       	ldi	r26, 0x0B	; 11
 7e0:	b0 e0       	ldi	r27, 0x00	; 0
 7e2:	e5 ef       	ldi	r30, 0xF5	; 245
 7e4:	f3 e0       	ldi	r31, 0x03	; 3
 7e6:	0c 94 80 06 	jmp	0xd00	; 0xd00 <__prologue_saves__>
 7ea:	6c 01       	movw	r12, r24
 7ec:	7b 01       	movw	r14, r22
 7ee:	8a 01       	movw	r16, r20
 7f0:	fc 01       	movw	r30, r24
 7f2:	17 82       	std	Z+7, r1	; 0x07
 7f4:	16 82       	std	Z+6, r1	; 0x06
 7f6:	83 81       	ldd	r24, Z+3	; 0x03
 7f8:	81 ff       	sbrs	r24, 1
 7fa:	cc c1       	rjmp	.+920    	; 0xb94 <__stack+0x295>
 7fc:	ce 01       	movw	r24, r28
 7fe:	01 96       	adiw	r24, 0x01	; 1
 800:	3c 01       	movw	r6, r24
 802:	f6 01       	movw	r30, r12
 804:	93 81       	ldd	r25, Z+3	; 0x03
 806:	f7 01       	movw	r30, r14
 808:	93 fd       	sbrc	r25, 3
 80a:	85 91       	lpm	r24, Z+
 80c:	93 ff       	sbrs	r25, 3
 80e:	81 91       	ld	r24, Z+
 810:	7f 01       	movw	r14, r30
 812:	88 23       	and	r24, r24
 814:	09 f4       	brne	.+2      	; 0x818 <vfprintf+0x3a>
 816:	ba c1       	rjmp	.+884    	; 0xb8c <__stack+0x28d>
 818:	85 32       	cpi	r24, 0x25	; 37
 81a:	39 f4       	brne	.+14     	; 0x82a <vfprintf+0x4c>
 81c:	93 fd       	sbrc	r25, 3
 81e:	85 91       	lpm	r24, Z+
 820:	93 ff       	sbrs	r25, 3
 822:	81 91       	ld	r24, Z+
 824:	7f 01       	movw	r14, r30
 826:	85 32       	cpi	r24, 0x25	; 37
 828:	29 f4       	brne	.+10     	; 0x834 <vfprintf+0x56>
 82a:	b6 01       	movw	r22, r12
 82c:	90 e0       	ldi	r25, 0x00	; 0
 82e:	0e 94 e6 05 	call	0xbcc	; 0xbcc <fputc>
 832:	e7 cf       	rjmp	.-50     	; 0x802 <vfprintf+0x24>
 834:	91 2c       	mov	r9, r1
 836:	21 2c       	mov	r2, r1
 838:	31 2c       	mov	r3, r1
 83a:	ff e1       	ldi	r31, 0x1F	; 31
 83c:	f3 15       	cp	r31, r3
 83e:	d8 f0       	brcs	.+54     	; 0x876 <vfprintf+0x98>
 840:	8b 32       	cpi	r24, 0x2B	; 43
 842:	79 f0       	breq	.+30     	; 0x862 <vfprintf+0x84>
 844:	38 f4       	brcc	.+14     	; 0x854 <vfprintf+0x76>
 846:	80 32       	cpi	r24, 0x20	; 32
 848:	79 f0       	breq	.+30     	; 0x868 <vfprintf+0x8a>
 84a:	83 32       	cpi	r24, 0x23	; 35
 84c:	a1 f4       	brne	.+40     	; 0x876 <vfprintf+0x98>
 84e:	23 2d       	mov	r18, r3
 850:	20 61       	ori	r18, 0x10	; 16
 852:	1d c0       	rjmp	.+58     	; 0x88e <vfprintf+0xb0>
 854:	8d 32       	cpi	r24, 0x2D	; 45
 856:	61 f0       	breq	.+24     	; 0x870 <vfprintf+0x92>
 858:	80 33       	cpi	r24, 0x30	; 48
 85a:	69 f4       	brne	.+26     	; 0x876 <vfprintf+0x98>
 85c:	23 2d       	mov	r18, r3
 85e:	21 60       	ori	r18, 0x01	; 1
 860:	16 c0       	rjmp	.+44     	; 0x88e <vfprintf+0xb0>
 862:	83 2d       	mov	r24, r3
 864:	82 60       	ori	r24, 0x02	; 2
 866:	38 2e       	mov	r3, r24
 868:	e3 2d       	mov	r30, r3
 86a:	e4 60       	ori	r30, 0x04	; 4
 86c:	3e 2e       	mov	r3, r30
 86e:	2a c0       	rjmp	.+84     	; 0x8c4 <vfprintf+0xe6>
 870:	f3 2d       	mov	r31, r3
 872:	f8 60       	ori	r31, 0x08	; 8
 874:	1d c0       	rjmp	.+58     	; 0x8b0 <vfprintf+0xd2>
 876:	37 fc       	sbrc	r3, 7
 878:	2d c0       	rjmp	.+90     	; 0x8d4 <vfprintf+0xf6>
 87a:	20 ed       	ldi	r18, 0xD0	; 208
 87c:	28 0f       	add	r18, r24
 87e:	2a 30       	cpi	r18, 0x0A	; 10
 880:	40 f0       	brcs	.+16     	; 0x892 <vfprintf+0xb4>
 882:	8e 32       	cpi	r24, 0x2E	; 46
 884:	b9 f4       	brne	.+46     	; 0x8b4 <vfprintf+0xd6>
 886:	36 fc       	sbrc	r3, 6
 888:	81 c1       	rjmp	.+770    	; 0xb8c <__stack+0x28d>
 88a:	23 2d       	mov	r18, r3
 88c:	20 64       	ori	r18, 0x40	; 64
 88e:	32 2e       	mov	r3, r18
 890:	19 c0       	rjmp	.+50     	; 0x8c4 <vfprintf+0xe6>
 892:	36 fe       	sbrs	r3, 6
 894:	06 c0       	rjmp	.+12     	; 0x8a2 <vfprintf+0xc4>
 896:	8a e0       	ldi	r24, 0x0A	; 10
 898:	98 9e       	mul	r9, r24
 89a:	20 0d       	add	r18, r0
 89c:	11 24       	eor	r1, r1
 89e:	92 2e       	mov	r9, r18
 8a0:	11 c0       	rjmp	.+34     	; 0x8c4 <vfprintf+0xe6>
 8a2:	ea e0       	ldi	r30, 0x0A	; 10
 8a4:	2e 9e       	mul	r2, r30
 8a6:	20 0d       	add	r18, r0
 8a8:	11 24       	eor	r1, r1
 8aa:	22 2e       	mov	r2, r18
 8ac:	f3 2d       	mov	r31, r3
 8ae:	f0 62       	ori	r31, 0x20	; 32
 8b0:	3f 2e       	mov	r3, r31
 8b2:	08 c0       	rjmp	.+16     	; 0x8c4 <vfprintf+0xe6>
 8b4:	8c 36       	cpi	r24, 0x6C	; 108
 8b6:	21 f4       	brne	.+8      	; 0x8c0 <vfprintf+0xe2>
 8b8:	83 2d       	mov	r24, r3
 8ba:	80 68       	ori	r24, 0x80	; 128
 8bc:	38 2e       	mov	r3, r24
 8be:	02 c0       	rjmp	.+4      	; 0x8c4 <vfprintf+0xe6>
 8c0:	88 36       	cpi	r24, 0x68	; 104
 8c2:	41 f4       	brne	.+16     	; 0x8d4 <vfprintf+0xf6>
 8c4:	f7 01       	movw	r30, r14
 8c6:	93 fd       	sbrc	r25, 3
 8c8:	85 91       	lpm	r24, Z+
 8ca:	93 ff       	sbrs	r25, 3
 8cc:	81 91       	ld	r24, Z+
 8ce:	7f 01       	movw	r14, r30
 8d0:	81 11       	cpse	r24, r1
 8d2:	b3 cf       	rjmp	.-154    	; 0x83a <vfprintf+0x5c>
 8d4:	98 2f       	mov	r25, r24
 8d6:	9f 7d       	andi	r25, 0xDF	; 223
 8d8:	95 54       	subi	r25, 0x45	; 69
 8da:	93 30       	cpi	r25, 0x03	; 3
 8dc:	28 f4       	brcc	.+10     	; 0x8e8 <vfprintf+0x10a>
 8de:	0c 5f       	subi	r16, 0xFC	; 252
 8e0:	1f 4f       	sbci	r17, 0xFF	; 255
 8e2:	9f e3       	ldi	r25, 0x3F	; 63
 8e4:	99 83       	std	Y+1, r25	; 0x01
 8e6:	0d c0       	rjmp	.+26     	; 0x902 <__stack+0x3>
 8e8:	83 36       	cpi	r24, 0x63	; 99
 8ea:	31 f0       	breq	.+12     	; 0x8f8 <vfprintf+0x11a>
 8ec:	83 37       	cpi	r24, 0x73	; 115
 8ee:	71 f0       	breq	.+28     	; 0x90c <__stack+0xd>
 8f0:	83 35       	cpi	r24, 0x53	; 83
 8f2:	09 f0       	breq	.+2      	; 0x8f6 <vfprintf+0x118>
 8f4:	59 c0       	rjmp	.+178    	; 0x9a8 <__stack+0xa9>
 8f6:	21 c0       	rjmp	.+66     	; 0x93a <__stack+0x3b>
 8f8:	f8 01       	movw	r30, r16
 8fa:	80 81       	ld	r24, Z
 8fc:	89 83       	std	Y+1, r24	; 0x01
 8fe:	0e 5f       	subi	r16, 0xFE	; 254
 900:	1f 4f       	sbci	r17, 0xFF	; 255
 902:	88 24       	eor	r8, r8
 904:	83 94       	inc	r8
 906:	91 2c       	mov	r9, r1
 908:	53 01       	movw	r10, r6
 90a:	13 c0       	rjmp	.+38     	; 0x932 <__stack+0x33>
 90c:	28 01       	movw	r4, r16
 90e:	f2 e0       	ldi	r31, 0x02	; 2
 910:	4f 0e       	add	r4, r31
 912:	51 1c       	adc	r5, r1
 914:	f8 01       	movw	r30, r16
 916:	a0 80       	ld	r10, Z
 918:	b1 80       	ldd	r11, Z+1	; 0x01
 91a:	36 fe       	sbrs	r3, 6
 91c:	03 c0       	rjmp	.+6      	; 0x924 <__stack+0x25>
 91e:	69 2d       	mov	r22, r9
 920:	70 e0       	ldi	r23, 0x00	; 0
 922:	02 c0       	rjmp	.+4      	; 0x928 <__stack+0x29>
 924:	6f ef       	ldi	r22, 0xFF	; 255
 926:	7f ef       	ldi	r23, 0xFF	; 255
 928:	c5 01       	movw	r24, r10
 92a:	0e 94 db 05 	call	0xbb6	; 0xbb6 <strnlen>
 92e:	4c 01       	movw	r8, r24
 930:	82 01       	movw	r16, r4
 932:	f3 2d       	mov	r31, r3
 934:	ff 77       	andi	r31, 0x7F	; 127
 936:	3f 2e       	mov	r3, r31
 938:	16 c0       	rjmp	.+44     	; 0x966 <__stack+0x67>
 93a:	28 01       	movw	r4, r16
 93c:	22 e0       	ldi	r18, 0x02	; 2
 93e:	42 0e       	add	r4, r18
 940:	51 1c       	adc	r5, r1
 942:	f8 01       	movw	r30, r16
 944:	a0 80       	ld	r10, Z
 946:	b1 80       	ldd	r11, Z+1	; 0x01
 948:	36 fe       	sbrs	r3, 6
 94a:	03 c0       	rjmp	.+6      	; 0x952 <__stack+0x53>
 94c:	69 2d       	mov	r22, r9
 94e:	70 e0       	ldi	r23, 0x00	; 0
 950:	02 c0       	rjmp	.+4      	; 0x956 <__stack+0x57>
 952:	6f ef       	ldi	r22, 0xFF	; 255
 954:	7f ef       	ldi	r23, 0xFF	; 255
 956:	c5 01       	movw	r24, r10
 958:	0e 94 d0 05 	call	0xba0	; 0xba0 <strnlen_P>
 95c:	4c 01       	movw	r8, r24
 95e:	f3 2d       	mov	r31, r3
 960:	f0 68       	ori	r31, 0x80	; 128
 962:	3f 2e       	mov	r3, r31
 964:	82 01       	movw	r16, r4
 966:	33 fc       	sbrc	r3, 3
 968:	1b c0       	rjmp	.+54     	; 0x9a0 <__stack+0xa1>
 96a:	82 2d       	mov	r24, r2
 96c:	90 e0       	ldi	r25, 0x00	; 0
 96e:	88 16       	cp	r8, r24
 970:	99 06       	cpc	r9, r25
 972:	b0 f4       	brcc	.+44     	; 0x9a0 <__stack+0xa1>
 974:	b6 01       	movw	r22, r12
 976:	80 e2       	ldi	r24, 0x20	; 32
 978:	90 e0       	ldi	r25, 0x00	; 0
 97a:	0e 94 e6 05 	call	0xbcc	; 0xbcc <fputc>
 97e:	2a 94       	dec	r2
 980:	f4 cf       	rjmp	.-24     	; 0x96a <__stack+0x6b>
 982:	f5 01       	movw	r30, r10
 984:	37 fc       	sbrc	r3, 7
 986:	85 91       	lpm	r24, Z+
 988:	37 fe       	sbrs	r3, 7
 98a:	81 91       	ld	r24, Z+
 98c:	5f 01       	movw	r10, r30
 98e:	b6 01       	movw	r22, r12
 990:	90 e0       	ldi	r25, 0x00	; 0
 992:	0e 94 e6 05 	call	0xbcc	; 0xbcc <fputc>
 996:	21 10       	cpse	r2, r1
 998:	2a 94       	dec	r2
 99a:	21 e0       	ldi	r18, 0x01	; 1
 99c:	82 1a       	sub	r8, r18
 99e:	91 08       	sbc	r9, r1
 9a0:	81 14       	cp	r8, r1
 9a2:	91 04       	cpc	r9, r1
 9a4:	71 f7       	brne	.-36     	; 0x982 <__stack+0x83>
 9a6:	e8 c0       	rjmp	.+464    	; 0xb78 <__stack+0x279>
 9a8:	84 36       	cpi	r24, 0x64	; 100
 9aa:	11 f0       	breq	.+4      	; 0x9b0 <__stack+0xb1>
 9ac:	89 36       	cpi	r24, 0x69	; 105
 9ae:	41 f5       	brne	.+80     	; 0xa00 <__stack+0x101>
 9b0:	f8 01       	movw	r30, r16
 9b2:	37 fe       	sbrs	r3, 7
 9b4:	07 c0       	rjmp	.+14     	; 0x9c4 <__stack+0xc5>
 9b6:	60 81       	ld	r22, Z
 9b8:	71 81       	ldd	r23, Z+1	; 0x01
 9ba:	82 81       	ldd	r24, Z+2	; 0x02
 9bc:	93 81       	ldd	r25, Z+3	; 0x03
 9be:	0c 5f       	subi	r16, 0xFC	; 252
 9c0:	1f 4f       	sbci	r17, 0xFF	; 255
 9c2:	08 c0       	rjmp	.+16     	; 0x9d4 <__stack+0xd5>
 9c4:	60 81       	ld	r22, Z
 9c6:	71 81       	ldd	r23, Z+1	; 0x01
 9c8:	07 2e       	mov	r0, r23
 9ca:	00 0c       	add	r0, r0
 9cc:	88 0b       	sbc	r24, r24
 9ce:	99 0b       	sbc	r25, r25
 9d0:	0e 5f       	subi	r16, 0xFE	; 254
 9d2:	1f 4f       	sbci	r17, 0xFF	; 255
 9d4:	f3 2d       	mov	r31, r3
 9d6:	ff 76       	andi	r31, 0x6F	; 111
 9d8:	3f 2e       	mov	r3, r31
 9da:	97 ff       	sbrs	r25, 7
 9dc:	09 c0       	rjmp	.+18     	; 0x9f0 <__stack+0xf1>
 9de:	90 95       	com	r25
 9e0:	80 95       	com	r24
 9e2:	70 95       	com	r23
 9e4:	61 95       	neg	r22
 9e6:	7f 4f       	sbci	r23, 0xFF	; 255
 9e8:	8f 4f       	sbci	r24, 0xFF	; 255
 9ea:	9f 4f       	sbci	r25, 0xFF	; 255
 9ec:	f0 68       	ori	r31, 0x80	; 128
 9ee:	3f 2e       	mov	r3, r31
 9f0:	2a e0       	ldi	r18, 0x0A	; 10
 9f2:	30 e0       	ldi	r19, 0x00	; 0
 9f4:	a3 01       	movw	r20, r6
 9f6:	0e 94 22 06 	call	0xc44	; 0xc44 <__ultoa_invert>
 9fa:	88 2e       	mov	r8, r24
 9fc:	86 18       	sub	r8, r6
 9fe:	45 c0       	rjmp	.+138    	; 0xa8a <__stack+0x18b>
 a00:	85 37       	cpi	r24, 0x75	; 117
 a02:	31 f4       	brne	.+12     	; 0xa10 <__stack+0x111>
 a04:	23 2d       	mov	r18, r3
 a06:	2f 7e       	andi	r18, 0xEF	; 239
 a08:	b2 2e       	mov	r11, r18
 a0a:	2a e0       	ldi	r18, 0x0A	; 10
 a0c:	30 e0       	ldi	r19, 0x00	; 0
 a0e:	25 c0       	rjmp	.+74     	; 0xa5a <__stack+0x15b>
 a10:	93 2d       	mov	r25, r3
 a12:	99 7f       	andi	r25, 0xF9	; 249
 a14:	b9 2e       	mov	r11, r25
 a16:	8f 36       	cpi	r24, 0x6F	; 111
 a18:	c1 f0       	breq	.+48     	; 0xa4a <__stack+0x14b>
 a1a:	18 f4       	brcc	.+6      	; 0xa22 <__stack+0x123>
 a1c:	88 35       	cpi	r24, 0x58	; 88
 a1e:	79 f0       	breq	.+30     	; 0xa3e <__stack+0x13f>
 a20:	b5 c0       	rjmp	.+362    	; 0xb8c <__stack+0x28d>
 a22:	80 37       	cpi	r24, 0x70	; 112
 a24:	19 f0       	breq	.+6      	; 0xa2c <__stack+0x12d>
 a26:	88 37       	cpi	r24, 0x78	; 120
 a28:	21 f0       	breq	.+8      	; 0xa32 <__stack+0x133>
 a2a:	b0 c0       	rjmp	.+352    	; 0xb8c <__stack+0x28d>
 a2c:	e9 2f       	mov	r30, r25
 a2e:	e0 61       	ori	r30, 0x10	; 16
 a30:	be 2e       	mov	r11, r30
 a32:	b4 fe       	sbrs	r11, 4
 a34:	0d c0       	rjmp	.+26     	; 0xa50 <__stack+0x151>
 a36:	fb 2d       	mov	r31, r11
 a38:	f4 60       	ori	r31, 0x04	; 4
 a3a:	bf 2e       	mov	r11, r31
 a3c:	09 c0       	rjmp	.+18     	; 0xa50 <__stack+0x151>
 a3e:	34 fe       	sbrs	r3, 4
 a40:	0a c0       	rjmp	.+20     	; 0xa56 <__stack+0x157>
 a42:	29 2f       	mov	r18, r25
 a44:	26 60       	ori	r18, 0x06	; 6
 a46:	b2 2e       	mov	r11, r18
 a48:	06 c0       	rjmp	.+12     	; 0xa56 <__stack+0x157>
 a4a:	28 e0       	ldi	r18, 0x08	; 8
 a4c:	30 e0       	ldi	r19, 0x00	; 0
 a4e:	05 c0       	rjmp	.+10     	; 0xa5a <__stack+0x15b>
 a50:	20 e1       	ldi	r18, 0x10	; 16
 a52:	30 e0       	ldi	r19, 0x00	; 0
 a54:	02 c0       	rjmp	.+4      	; 0xa5a <__stack+0x15b>
 a56:	20 e1       	ldi	r18, 0x10	; 16
 a58:	32 e0       	ldi	r19, 0x02	; 2
 a5a:	f8 01       	movw	r30, r16
 a5c:	b7 fe       	sbrs	r11, 7
 a5e:	07 c0       	rjmp	.+14     	; 0xa6e <__stack+0x16f>
 a60:	60 81       	ld	r22, Z
 a62:	71 81       	ldd	r23, Z+1	; 0x01
 a64:	82 81       	ldd	r24, Z+2	; 0x02
 a66:	93 81       	ldd	r25, Z+3	; 0x03
 a68:	0c 5f       	subi	r16, 0xFC	; 252
 a6a:	1f 4f       	sbci	r17, 0xFF	; 255
 a6c:	06 c0       	rjmp	.+12     	; 0xa7a <__stack+0x17b>
 a6e:	60 81       	ld	r22, Z
 a70:	71 81       	ldd	r23, Z+1	; 0x01
 a72:	80 e0       	ldi	r24, 0x00	; 0
 a74:	90 e0       	ldi	r25, 0x00	; 0
 a76:	0e 5f       	subi	r16, 0xFE	; 254
 a78:	1f 4f       	sbci	r17, 0xFF	; 255
 a7a:	a3 01       	movw	r20, r6
 a7c:	0e 94 22 06 	call	0xc44	; 0xc44 <__ultoa_invert>
 a80:	88 2e       	mov	r8, r24
 a82:	86 18       	sub	r8, r6
 a84:	fb 2d       	mov	r31, r11
 a86:	ff 77       	andi	r31, 0x7F	; 127
 a88:	3f 2e       	mov	r3, r31
 a8a:	36 fe       	sbrs	r3, 6
 a8c:	0d c0       	rjmp	.+26     	; 0xaa8 <__stack+0x1a9>
 a8e:	23 2d       	mov	r18, r3
 a90:	2e 7f       	andi	r18, 0xFE	; 254
 a92:	a2 2e       	mov	r10, r18
 a94:	89 14       	cp	r8, r9
 a96:	58 f4       	brcc	.+22     	; 0xaae <__stack+0x1af>
 a98:	34 fe       	sbrs	r3, 4
 a9a:	0b c0       	rjmp	.+22     	; 0xab2 <__stack+0x1b3>
 a9c:	32 fc       	sbrc	r3, 2
 a9e:	09 c0       	rjmp	.+18     	; 0xab2 <__stack+0x1b3>
 aa0:	83 2d       	mov	r24, r3
 aa2:	8e 7e       	andi	r24, 0xEE	; 238
 aa4:	a8 2e       	mov	r10, r24
 aa6:	05 c0       	rjmp	.+10     	; 0xab2 <__stack+0x1b3>
 aa8:	b8 2c       	mov	r11, r8
 aaa:	a3 2c       	mov	r10, r3
 aac:	03 c0       	rjmp	.+6      	; 0xab4 <__stack+0x1b5>
 aae:	b8 2c       	mov	r11, r8
 ab0:	01 c0       	rjmp	.+2      	; 0xab4 <__stack+0x1b5>
 ab2:	b9 2c       	mov	r11, r9
 ab4:	a4 fe       	sbrs	r10, 4
 ab6:	0f c0       	rjmp	.+30     	; 0xad6 <__stack+0x1d7>
 ab8:	fe 01       	movw	r30, r28
 aba:	e8 0d       	add	r30, r8
 abc:	f1 1d       	adc	r31, r1
 abe:	80 81       	ld	r24, Z
 ac0:	80 33       	cpi	r24, 0x30	; 48
 ac2:	21 f4       	brne	.+8      	; 0xacc <__stack+0x1cd>
 ac4:	9a 2d       	mov	r25, r10
 ac6:	99 7e       	andi	r25, 0xE9	; 233
 ac8:	a9 2e       	mov	r10, r25
 aca:	09 c0       	rjmp	.+18     	; 0xade <__stack+0x1df>
 acc:	a2 fe       	sbrs	r10, 2
 ace:	06 c0       	rjmp	.+12     	; 0xadc <__stack+0x1dd>
 ad0:	b3 94       	inc	r11
 ad2:	b3 94       	inc	r11
 ad4:	04 c0       	rjmp	.+8      	; 0xade <__stack+0x1df>
 ad6:	8a 2d       	mov	r24, r10
 ad8:	86 78       	andi	r24, 0x86	; 134
 ada:	09 f0       	breq	.+2      	; 0xade <__stack+0x1df>
 adc:	b3 94       	inc	r11
 ade:	a3 fc       	sbrc	r10, 3
 ae0:	11 c0       	rjmp	.+34     	; 0xb04 <__stack+0x205>
 ae2:	a0 fe       	sbrs	r10, 0
 ae4:	06 c0       	rjmp	.+12     	; 0xaf2 <__stack+0x1f3>
 ae6:	b2 14       	cp	r11, r2
 ae8:	88 f4       	brcc	.+34     	; 0xb0c <__stack+0x20d>
 aea:	28 0c       	add	r2, r8
 aec:	92 2c       	mov	r9, r2
 aee:	9b 18       	sub	r9, r11
 af0:	0e c0       	rjmp	.+28     	; 0xb0e <__stack+0x20f>
 af2:	b2 14       	cp	r11, r2
 af4:	60 f4       	brcc	.+24     	; 0xb0e <__stack+0x20f>
 af6:	b6 01       	movw	r22, r12
 af8:	80 e2       	ldi	r24, 0x20	; 32
 afa:	90 e0       	ldi	r25, 0x00	; 0
 afc:	0e 94 e6 05 	call	0xbcc	; 0xbcc <fputc>
 b00:	b3 94       	inc	r11
 b02:	f7 cf       	rjmp	.-18     	; 0xaf2 <__stack+0x1f3>
 b04:	b2 14       	cp	r11, r2
 b06:	18 f4       	brcc	.+6      	; 0xb0e <__stack+0x20f>
 b08:	2b 18       	sub	r2, r11
 b0a:	02 c0       	rjmp	.+4      	; 0xb10 <__stack+0x211>
 b0c:	98 2c       	mov	r9, r8
 b0e:	21 2c       	mov	r2, r1
 b10:	a4 fe       	sbrs	r10, 4
 b12:	10 c0       	rjmp	.+32     	; 0xb34 <__stack+0x235>
 b14:	b6 01       	movw	r22, r12
 b16:	80 e3       	ldi	r24, 0x30	; 48
 b18:	90 e0       	ldi	r25, 0x00	; 0
 b1a:	0e 94 e6 05 	call	0xbcc	; 0xbcc <fputc>
 b1e:	a2 fe       	sbrs	r10, 2
 b20:	17 c0       	rjmp	.+46     	; 0xb50 <__stack+0x251>
 b22:	a1 fc       	sbrc	r10, 1
 b24:	03 c0       	rjmp	.+6      	; 0xb2c <__stack+0x22d>
 b26:	88 e7       	ldi	r24, 0x78	; 120
 b28:	90 e0       	ldi	r25, 0x00	; 0
 b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__stack+0x231>
 b2c:	88 e5       	ldi	r24, 0x58	; 88
 b2e:	90 e0       	ldi	r25, 0x00	; 0
 b30:	b6 01       	movw	r22, r12
 b32:	0c c0       	rjmp	.+24     	; 0xb4c <__stack+0x24d>
 b34:	8a 2d       	mov	r24, r10
 b36:	86 78       	andi	r24, 0x86	; 134
 b38:	59 f0       	breq	.+22     	; 0xb50 <__stack+0x251>
 b3a:	a1 fe       	sbrs	r10, 1
 b3c:	02 c0       	rjmp	.+4      	; 0xb42 <__stack+0x243>
 b3e:	8b e2       	ldi	r24, 0x2B	; 43
 b40:	01 c0       	rjmp	.+2      	; 0xb44 <__stack+0x245>
 b42:	80 e2       	ldi	r24, 0x20	; 32
 b44:	a7 fc       	sbrc	r10, 7
 b46:	8d e2       	ldi	r24, 0x2D	; 45
 b48:	b6 01       	movw	r22, r12
 b4a:	90 e0       	ldi	r25, 0x00	; 0
 b4c:	0e 94 e6 05 	call	0xbcc	; 0xbcc <fputc>
 b50:	89 14       	cp	r8, r9
 b52:	38 f4       	brcc	.+14     	; 0xb62 <__stack+0x263>
 b54:	b6 01       	movw	r22, r12
 b56:	80 e3       	ldi	r24, 0x30	; 48
 b58:	90 e0       	ldi	r25, 0x00	; 0
 b5a:	0e 94 e6 05 	call	0xbcc	; 0xbcc <fputc>
 b5e:	9a 94       	dec	r9
 b60:	f7 cf       	rjmp	.-18     	; 0xb50 <__stack+0x251>
 b62:	8a 94       	dec	r8
 b64:	f3 01       	movw	r30, r6
 b66:	e8 0d       	add	r30, r8
 b68:	f1 1d       	adc	r31, r1
 b6a:	80 81       	ld	r24, Z
 b6c:	b6 01       	movw	r22, r12
 b6e:	90 e0       	ldi	r25, 0x00	; 0
 b70:	0e 94 e6 05 	call	0xbcc	; 0xbcc <fputc>
 b74:	81 10       	cpse	r8, r1
 b76:	f5 cf       	rjmp	.-22     	; 0xb62 <__stack+0x263>
 b78:	22 20       	and	r2, r2
 b7a:	09 f4       	brne	.+2      	; 0xb7e <__stack+0x27f>
 b7c:	42 ce       	rjmp	.-892    	; 0x802 <vfprintf+0x24>
 b7e:	b6 01       	movw	r22, r12
 b80:	80 e2       	ldi	r24, 0x20	; 32
 b82:	90 e0       	ldi	r25, 0x00	; 0
 b84:	0e 94 e6 05 	call	0xbcc	; 0xbcc <fputc>
 b88:	2a 94       	dec	r2
 b8a:	f6 cf       	rjmp	.-20     	; 0xb78 <__stack+0x279>
 b8c:	f6 01       	movw	r30, r12
 b8e:	86 81       	ldd	r24, Z+6	; 0x06
 b90:	97 81       	ldd	r25, Z+7	; 0x07
 b92:	02 c0       	rjmp	.+4      	; 0xb98 <__stack+0x299>
 b94:	8f ef       	ldi	r24, 0xFF	; 255
 b96:	9f ef       	ldi	r25, 0xFF	; 255
 b98:	2b 96       	adiw	r28, 0x0b	; 11
 b9a:	e2 e1       	ldi	r30, 0x12	; 18
 b9c:	0c 94 9c 06 	jmp	0xd38	; 0xd38 <__epilogue_restores__>

00000ba0 <strnlen_P>:
 ba0:	fc 01       	movw	r30, r24
 ba2:	05 90       	lpm	r0, Z+
 ba4:	61 50       	subi	r22, 0x01	; 1
 ba6:	70 40       	sbci	r23, 0x00	; 0
 ba8:	01 10       	cpse	r0, r1
 baa:	d8 f7       	brcc	.-10     	; 0xba2 <strnlen_P+0x2>
 bac:	80 95       	com	r24
 bae:	90 95       	com	r25
 bb0:	8e 0f       	add	r24, r30
 bb2:	9f 1f       	adc	r25, r31
 bb4:	08 95       	ret

00000bb6 <strnlen>:
 bb6:	fc 01       	movw	r30, r24
 bb8:	61 50       	subi	r22, 0x01	; 1
 bba:	70 40       	sbci	r23, 0x00	; 0
 bbc:	01 90       	ld	r0, Z+
 bbe:	01 10       	cpse	r0, r1
 bc0:	d8 f7       	brcc	.-10     	; 0xbb8 <strnlen+0x2>
 bc2:	80 95       	com	r24
 bc4:	90 95       	com	r25
 bc6:	8e 0f       	add	r24, r30
 bc8:	9f 1f       	adc	r25, r31
 bca:	08 95       	ret

00000bcc <fputc>:
 bcc:	0f 93       	push	r16
 bce:	1f 93       	push	r17
 bd0:	cf 93       	push	r28
 bd2:	df 93       	push	r29
 bd4:	fb 01       	movw	r30, r22
 bd6:	23 81       	ldd	r18, Z+3	; 0x03
 bd8:	21 fd       	sbrc	r18, 1
 bda:	03 c0       	rjmp	.+6      	; 0xbe2 <fputc+0x16>
 bdc:	8f ef       	ldi	r24, 0xFF	; 255
 bde:	9f ef       	ldi	r25, 0xFF	; 255
 be0:	2c c0       	rjmp	.+88     	; 0xc3a <fputc+0x6e>
 be2:	22 ff       	sbrs	r18, 2
 be4:	16 c0       	rjmp	.+44     	; 0xc12 <fputc+0x46>
 be6:	46 81       	ldd	r20, Z+6	; 0x06
 be8:	57 81       	ldd	r21, Z+7	; 0x07
 bea:	24 81       	ldd	r18, Z+4	; 0x04
 bec:	35 81       	ldd	r19, Z+5	; 0x05
 bee:	42 17       	cp	r20, r18
 bf0:	53 07       	cpc	r21, r19
 bf2:	44 f4       	brge	.+16     	; 0xc04 <fputc+0x38>
 bf4:	a0 81       	ld	r26, Z
 bf6:	b1 81       	ldd	r27, Z+1	; 0x01
 bf8:	9d 01       	movw	r18, r26
 bfa:	2f 5f       	subi	r18, 0xFF	; 255
 bfc:	3f 4f       	sbci	r19, 0xFF	; 255
 bfe:	31 83       	std	Z+1, r19	; 0x01
 c00:	20 83       	st	Z, r18
 c02:	8c 93       	st	X, r24
 c04:	26 81       	ldd	r18, Z+6	; 0x06
 c06:	37 81       	ldd	r19, Z+7	; 0x07
 c08:	2f 5f       	subi	r18, 0xFF	; 255
 c0a:	3f 4f       	sbci	r19, 0xFF	; 255
 c0c:	37 83       	std	Z+7, r19	; 0x07
 c0e:	26 83       	std	Z+6, r18	; 0x06
 c10:	14 c0       	rjmp	.+40     	; 0xc3a <fputc+0x6e>
 c12:	8b 01       	movw	r16, r22
 c14:	ec 01       	movw	r28, r24
 c16:	fb 01       	movw	r30, r22
 c18:	00 84       	ldd	r0, Z+8	; 0x08
 c1a:	f1 85       	ldd	r31, Z+9	; 0x09
 c1c:	e0 2d       	mov	r30, r0
 c1e:	09 95       	icall
 c20:	89 2b       	or	r24, r25
 c22:	e1 f6       	brne	.-72     	; 0xbdc <fputc+0x10>
 c24:	d8 01       	movw	r26, r16
 c26:	16 96       	adiw	r26, 0x06	; 6
 c28:	8d 91       	ld	r24, X+
 c2a:	9c 91       	ld	r25, X
 c2c:	17 97       	sbiw	r26, 0x07	; 7
 c2e:	01 96       	adiw	r24, 0x01	; 1
 c30:	17 96       	adiw	r26, 0x07	; 7
 c32:	9c 93       	st	X, r25
 c34:	8e 93       	st	-X, r24
 c36:	16 97       	sbiw	r26, 0x06	; 6
 c38:	ce 01       	movw	r24, r28
 c3a:	df 91       	pop	r29
 c3c:	cf 91       	pop	r28
 c3e:	1f 91       	pop	r17
 c40:	0f 91       	pop	r16
 c42:	08 95       	ret

00000c44 <__ultoa_invert>:
 c44:	fa 01       	movw	r30, r20
 c46:	aa 27       	eor	r26, r26
 c48:	28 30       	cpi	r18, 0x08	; 8
 c4a:	51 f1       	breq	.+84     	; 0xca0 <__ultoa_invert+0x5c>
 c4c:	20 31       	cpi	r18, 0x10	; 16
 c4e:	81 f1       	breq	.+96     	; 0xcb0 <__ultoa_invert+0x6c>
 c50:	e8 94       	clt
 c52:	6f 93       	push	r22
 c54:	6e 7f       	andi	r22, 0xFE	; 254
 c56:	6e 5f       	subi	r22, 0xFE	; 254
 c58:	7f 4f       	sbci	r23, 0xFF	; 255
 c5a:	8f 4f       	sbci	r24, 0xFF	; 255
 c5c:	9f 4f       	sbci	r25, 0xFF	; 255
 c5e:	af 4f       	sbci	r26, 0xFF	; 255
 c60:	b1 e0       	ldi	r27, 0x01	; 1
 c62:	3e d0       	rcall	.+124    	; 0xce0 <__ultoa_invert+0x9c>
 c64:	b4 e0       	ldi	r27, 0x04	; 4
 c66:	3c d0       	rcall	.+120    	; 0xce0 <__ultoa_invert+0x9c>
 c68:	67 0f       	add	r22, r23
 c6a:	78 1f       	adc	r23, r24
 c6c:	89 1f       	adc	r24, r25
 c6e:	9a 1f       	adc	r25, r26
 c70:	a1 1d       	adc	r26, r1
 c72:	68 0f       	add	r22, r24
 c74:	79 1f       	adc	r23, r25
 c76:	8a 1f       	adc	r24, r26
 c78:	91 1d       	adc	r25, r1
 c7a:	a1 1d       	adc	r26, r1
 c7c:	6a 0f       	add	r22, r26
 c7e:	71 1d       	adc	r23, r1
 c80:	81 1d       	adc	r24, r1
 c82:	91 1d       	adc	r25, r1
 c84:	a1 1d       	adc	r26, r1
 c86:	20 d0       	rcall	.+64     	; 0xcc8 <__ultoa_invert+0x84>
 c88:	09 f4       	brne	.+2      	; 0xc8c <__ultoa_invert+0x48>
 c8a:	68 94       	set
 c8c:	3f 91       	pop	r19
 c8e:	2a e0       	ldi	r18, 0x0A	; 10
 c90:	26 9f       	mul	r18, r22
 c92:	11 24       	eor	r1, r1
 c94:	30 19       	sub	r19, r0
 c96:	30 5d       	subi	r19, 0xD0	; 208
 c98:	31 93       	st	Z+, r19
 c9a:	de f6       	brtc	.-74     	; 0xc52 <__ultoa_invert+0xe>
 c9c:	cf 01       	movw	r24, r30
 c9e:	08 95       	ret
 ca0:	46 2f       	mov	r20, r22
 ca2:	47 70       	andi	r20, 0x07	; 7
 ca4:	40 5d       	subi	r20, 0xD0	; 208
 ca6:	41 93       	st	Z+, r20
 ca8:	b3 e0       	ldi	r27, 0x03	; 3
 caa:	0f d0       	rcall	.+30     	; 0xcca <__ultoa_invert+0x86>
 cac:	c9 f7       	brne	.-14     	; 0xca0 <__ultoa_invert+0x5c>
 cae:	f6 cf       	rjmp	.-20     	; 0xc9c <__ultoa_invert+0x58>
 cb0:	46 2f       	mov	r20, r22
 cb2:	4f 70       	andi	r20, 0x0F	; 15
 cb4:	40 5d       	subi	r20, 0xD0	; 208
 cb6:	4a 33       	cpi	r20, 0x3A	; 58
 cb8:	18 f0       	brcs	.+6      	; 0xcc0 <__ultoa_invert+0x7c>
 cba:	49 5d       	subi	r20, 0xD9	; 217
 cbc:	31 fd       	sbrc	r19, 1
 cbe:	40 52       	subi	r20, 0x20	; 32
 cc0:	41 93       	st	Z+, r20
 cc2:	02 d0       	rcall	.+4      	; 0xcc8 <__ultoa_invert+0x84>
 cc4:	a9 f7       	brne	.-22     	; 0xcb0 <__ultoa_invert+0x6c>
 cc6:	ea cf       	rjmp	.-44     	; 0xc9c <__ultoa_invert+0x58>
 cc8:	b4 e0       	ldi	r27, 0x04	; 4
 cca:	a6 95       	lsr	r26
 ccc:	97 95       	ror	r25
 cce:	87 95       	ror	r24
 cd0:	77 95       	ror	r23
 cd2:	67 95       	ror	r22
 cd4:	ba 95       	dec	r27
 cd6:	c9 f7       	brne	.-14     	; 0xcca <__ultoa_invert+0x86>
 cd8:	00 97       	sbiw	r24, 0x00	; 0
 cda:	61 05       	cpc	r22, r1
 cdc:	71 05       	cpc	r23, r1
 cde:	08 95       	ret
 ce0:	9b 01       	movw	r18, r22
 ce2:	ac 01       	movw	r20, r24
 ce4:	0a 2e       	mov	r0, r26
 ce6:	06 94       	lsr	r0
 ce8:	57 95       	ror	r21
 cea:	47 95       	ror	r20
 cec:	37 95       	ror	r19
 cee:	27 95       	ror	r18
 cf0:	ba 95       	dec	r27
 cf2:	c9 f7       	brne	.-14     	; 0xce6 <__ultoa_invert+0xa2>
 cf4:	62 0f       	add	r22, r18
 cf6:	73 1f       	adc	r23, r19
 cf8:	84 1f       	adc	r24, r20
 cfa:	95 1f       	adc	r25, r21
 cfc:	a0 1d       	adc	r26, r0
 cfe:	08 95       	ret

00000d00 <__prologue_saves__>:
 d00:	2f 92       	push	r2
 d02:	3f 92       	push	r3
 d04:	4f 92       	push	r4
 d06:	5f 92       	push	r5
 d08:	6f 92       	push	r6
 d0a:	7f 92       	push	r7
 d0c:	8f 92       	push	r8
 d0e:	9f 92       	push	r9
 d10:	af 92       	push	r10
 d12:	bf 92       	push	r11
 d14:	cf 92       	push	r12
 d16:	df 92       	push	r13
 d18:	ef 92       	push	r14
 d1a:	ff 92       	push	r15
 d1c:	0f 93       	push	r16
 d1e:	1f 93       	push	r17
 d20:	cf 93       	push	r28
 d22:	df 93       	push	r29
 d24:	cd b7       	in	r28, 0x3d	; 61
 d26:	de b7       	in	r29, 0x3e	; 62
 d28:	ca 1b       	sub	r28, r26
 d2a:	db 0b       	sbc	r29, r27
 d2c:	0f b6       	in	r0, 0x3f	; 63
 d2e:	f8 94       	cli
 d30:	de bf       	out	0x3e, r29	; 62
 d32:	0f be       	out	0x3f, r0	; 63
 d34:	cd bf       	out	0x3d, r28	; 61
 d36:	09 94       	ijmp

00000d38 <__epilogue_restores__>:
 d38:	2a 88       	ldd	r2, Y+18	; 0x12
 d3a:	39 88       	ldd	r3, Y+17	; 0x11
 d3c:	48 88       	ldd	r4, Y+16	; 0x10
 d3e:	5f 84       	ldd	r5, Y+15	; 0x0f
 d40:	6e 84       	ldd	r6, Y+14	; 0x0e
 d42:	7d 84       	ldd	r7, Y+13	; 0x0d
 d44:	8c 84       	ldd	r8, Y+12	; 0x0c
 d46:	9b 84       	ldd	r9, Y+11	; 0x0b
 d48:	aa 84       	ldd	r10, Y+10	; 0x0a
 d4a:	b9 84       	ldd	r11, Y+9	; 0x09
 d4c:	c8 84       	ldd	r12, Y+8	; 0x08
 d4e:	df 80       	ldd	r13, Y+7	; 0x07
 d50:	ee 80       	ldd	r14, Y+6	; 0x06
 d52:	fd 80       	ldd	r15, Y+5	; 0x05
 d54:	0c 81       	ldd	r16, Y+4	; 0x04
 d56:	1b 81       	ldd	r17, Y+3	; 0x03
 d58:	aa 81       	ldd	r26, Y+2	; 0x02
 d5a:	b9 81       	ldd	r27, Y+1	; 0x01
 d5c:	ce 0f       	add	r28, r30
 d5e:	d1 1d       	adc	r29, r1
 d60:	0f b6       	in	r0, 0x3f	; 63
 d62:	f8 94       	cli
 d64:	de bf       	out	0x3e, r29	; 62
 d66:	0f be       	out	0x3f, r0	; 63
 d68:	cd bf       	out	0x3d, r28	; 61
 d6a:	ed 01       	movw	r28, r26
 d6c:	08 95       	ret

00000d6e <_exit>:
 d6e:	f8 94       	cli

00000d70 <__stop_program>:
 d70:	ff cf       	rjmp	.-2      	; 0xd70 <__stop_program>
